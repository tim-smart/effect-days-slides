{"version":3,"file":"reveal.js","sources":["../js/utils/util.js","../js/utils/device.js","../node_modules/.pnpm/fitty@2.4.2/node_modules/fitty/dist/fitty.module.js","../js/controllers/slidecontent.js","../js/utils/constants.js","../js/controllers/slidenumber.js","../js/controllers/jumptoslide.js","../js/utils/color.js","../js/controllers/backgrounds.js","../js/controllers/autoanimate.js","../js/controllers/scrollview.js","../js/controllers/printview.js","../js/controllers/fragments.js","../js/controllers/overview.js","../js/controllers/keyboard.js","../js/controllers/location.js","../js/controllers/controls.js","../js/controllers/progress.js","../js/controllers/pointer.js","../js/utils/loader.js","../js/controllers/plugins.js","../js/controllers/touch.js","../js/controllers/focus.js","../js/controllers/notes.js","../js/components/playback.js","../js/config.js","../js/reveal.js","../js/index.js"],"sourcesContent":["/**\n * Extend object a with the properties of object b.\n * If there's a conflict, object b takes precedence.\n *\n * @param {object} a\n * @param {object} b\n */\nexport const extend = ( a, b ) => {\n\n\tfor( let i in b ) {\n\t\ta[ i ] = b[ i ];\n\t}\n\n\treturn a;\n\n}\n\n/**\n * querySelectorAll but returns an Array.\n */\nexport const queryAll = ( el, selector ) => {\n\n\treturn Array.from( el.querySelectorAll( selector ) );\n\n}\n\n/**\n * classList.toggle() with cross browser support\n */\nexport const toggleClass = ( el, className, value ) => {\n\tif( value ) {\n\t\tel.classList.add( className );\n\t}\n\telse {\n\t\tel.classList.remove( className );\n\t}\n}\n\n/**\n * Utility for deserializing a value.\n *\n * @param {*} value\n * @return {*}\n */\nexport const deserialize = ( value ) => {\n\n\tif( typeof value === 'string' ) {\n\t\tif( value === 'null' ) return null;\n\t\telse if( value === 'true' ) return true;\n\t\telse if( value === 'false' ) return false;\n\t\telse if( value.match( /^-?[\\d\\.]+$/ ) ) return parseFloat( value );\n\t}\n\n\treturn value;\n\n}\n\n/**\n * Measures the distance in pixels between point a\n * and point b.\n *\n * @param {object} a point with x/y properties\n * @param {object} b point with x/y properties\n *\n * @return {number}\n */\nexport const distanceBetween = ( a, b ) => {\n\n\tlet dx = a.x - b.x,\n\t\tdy = a.y - b.y;\n\n\treturn Math.sqrt( dx*dx + dy*dy );\n\n}\n\n/**\n * Applies a CSS transform to the target element.\n *\n * @param {HTMLElement} element\n * @param {string} transform\n */\nexport const transformElement = ( element, transform ) => {\n\n\telement.style.transform = transform;\n\n}\n\n/**\n * Element.matches with IE support.\n *\n * @param {HTMLElement} target The element to match\n * @param {String} selector The CSS selector to match\n * the element against\n *\n * @return {Boolean}\n */\nexport const matches = ( target, selector ) => {\n\n\tlet matchesMethod = target.matches || target.matchesSelector || target.msMatchesSelector;\n\n\treturn !!( matchesMethod && matchesMethod.call( target, selector ) );\n\n}\n\n/**\n * Find the closest parent that matches the given\n * selector.\n *\n * @param {HTMLElement} target The child element\n * @param {String} selector The CSS selector to match\n * the parents against\n *\n * @return {HTMLElement} The matched parent or null\n * if no matching parent was found\n */\nexport const closest = ( target, selector ) => {\n\n\t// Native Element.closest\n\tif( typeof target.closest === 'function' ) {\n\t\treturn target.closest( selector );\n\t}\n\n\t// Polyfill\n\twhile( target ) {\n\t\tif( matches( target, selector ) ) {\n\t\t\treturn target;\n\t\t}\n\n\t\t// Keep searching\n\t\ttarget = target.parentNode;\n\t}\n\n\treturn null;\n\n}\n\n/**\n * Handling the fullscreen functionality via the fullscreen API\n *\n * @see http://fullscreen.spec.whatwg.org/\n * @see https://developer.mozilla.org/en-US/docs/DOM/Using_fullscreen_mode\n */\nexport const enterFullscreen = element => {\n\n\telement = element || document.documentElement;\n\n\t// Check which implementation is available\n\tlet requestMethod = element.requestFullscreen ||\n\t\t\t\t\t\telement.webkitRequestFullscreen ||\n\t\t\t\t\t\telement.webkitRequestFullScreen ||\n\t\t\t\t\t\telement.mozRequestFullScreen ||\n\t\t\t\t\t\telement.msRequestFullscreen;\n\n\tif( requestMethod ) {\n\t\trequestMethod.apply( element );\n\t}\n\n}\n\n/**\n * Creates an HTML element and returns a reference to it.\n * If the element already exists the existing instance will\n * be returned.\n *\n * @param {HTMLElement} container\n * @param {string} tagname\n * @param {string} classname\n * @param {string} innerHTML\n *\n * @return {HTMLElement}\n */\nexport const createSingletonNode = ( container, tagname, classname, innerHTML='' ) => {\n\n\t// Find all nodes matching the description\n\tlet nodes = container.querySelectorAll( '.' + classname );\n\n\t// Check all matches to find one which is a direct child of\n\t// the specified container\n\tfor( let i = 0; i < nodes.length; i++ ) {\n\t\tlet testNode = nodes[i];\n\t\tif( testNode.parentNode === container ) {\n\t\t\treturn testNode;\n\t\t}\n\t}\n\n\t// If no node was found, create it now\n\tlet node = document.createElement( tagname );\n\tnode.className = classname;\n\tnode.innerHTML = innerHTML;\n\tcontainer.appendChild( node );\n\n\treturn node;\n\n}\n\n/**\n * Injects the given CSS styles into the DOM.\n *\n * @param {string} value\n */\nexport const createStyleSheet = ( value ) => {\n\n\tlet tag = document.createElement( 'style' );\n\ttag.type = 'text/css';\n\n\tif( value && value.length > 0 ) {\n\t\tif( tag.styleSheet ) {\n\t\t\ttag.styleSheet.cssText = value;\n\t\t}\n\t\telse {\n\t\t\ttag.appendChild( document.createTextNode( value ) );\n\t\t}\n\t}\n\n\tdocument.head.appendChild( tag );\n\n\treturn tag;\n\n}\n\n/**\n * Returns a key:value hash of all query params.\n */\nexport const getQueryHash = () => {\n\n\tlet query = {};\n\n\tlocation.search.replace( /[A-Z0-9]+?=([\\w\\.%-]*)/gi, a => {\n\t\tquery[ a.split( '=' ).shift() ] = a.split( '=' ).pop();\n\t} );\n\n\t// Basic deserialization\n\tfor( let i in query ) {\n\t\tlet value = query[ i ];\n\n\t\tquery[ i ] = deserialize( unescape( value ) );\n\t}\n\n\t// Do not accept new dependencies via query config to avoid\n\t// the potential of malicious script injection\n\tif( typeof query['dependencies'] !== 'undefined' ) delete query['dependencies'];\n\n\treturn query;\n\n}\n\n/**\n * Returns the remaining height within the parent of the\n * target element.\n *\n * remaining height = [ configured parent height ] - [ current parent height ]\n *\n * @param {HTMLElement} element\n * @param {number} [height]\n */\nexport const getRemainingHeight = ( element, height = 0 ) => {\n\n\tif( element ) {\n\t\tlet newHeight, oldHeight = element.style.height;\n\n\t\t// Change the .stretch element height to 0 in order find the height of all\n\t\t// the other elements\n\t\telement.style.height = '0px';\n\n\t\t// In Overview mode, the parent (.slide) height is set of 700px.\n\t\t// Restore it temporarily to its natural height.\n\t\telement.parentNode.style.height = 'auto';\n\n\t\tnewHeight = height - element.parentNode.offsetHeight;\n\n\t\t// Restore the old height, just in case\n\t\telement.style.height = oldHeight + 'px';\n\n\t\t// Clear the parent (.slide) height. .removeProperty works in IE9+\n\t\telement.parentNode.style.removeProperty('height');\n\n\t\treturn newHeight;\n\t}\n\n\treturn height;\n\n}\n\nconst fileExtensionToMimeMap = {\n\t'mp4': 'video/mp4',\n\t'm4a': 'video/mp4',\n\t'ogv': 'video/ogg',\n\t'mpeg': 'video/mpeg',\n\t'webm': 'video/webm'\n}\n\n/**\n * Guess the MIME type for common file formats.\n */\nexport const getMimeTypeFromFile = ( filename='' ) => {\n\treturn fileExtensionToMimeMap[filename.split('.').pop()]\n}\n\n/**\n * Encodes a string for RFC3986-compliant URL format.\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/encodeURI#encoding_for_rfc3986\n *\n * @param {string} url\n */\nexport const encodeRFC3986URI = ( url='' ) => {\n\treturn encodeURI(url)\n\t  .replace(/%5B/g, \"[\")\n\t  .replace(/%5D/g, \"]\")\n\t  .replace(\n\t\t/[!'()*]/g,\n\t\t(c) => `%${c.charCodeAt(0).toString(16).toUpperCase()}`\n\t  );\n}","const UA = navigator.userAgent;\n\nexport const isMobile = /(iphone|ipod|ipad|android)/gi.test( UA ) ||\n\t\t\t\t\t\t( navigator.platform === 'MacIntel' && navigator.maxTouchPoints > 1 ); // iPadOS\n\nexport const isChrome = /chrome/i.test( UA ) && !/edge/i.test( UA );\n\nexport const isAndroid = /android/gi.test( UA );","/**\n * fitty v2.4.2 - Snugly resizes text to fit its parent container\n * Copyright (c) 2023 Rik Schennink <rik@pqina.nl> (https://pqina.nl/)\n */\n\nvar e=function(e){if(e){var t=function(e){return[].slice.call(e)},n=0,i=1,r=2,o=3,a=[],l=null,u=\"requestAnimationFrame\"in e?function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{sync:!1};e.cancelAnimationFrame(l);var n=function(){return s(a.filter((function(e){return e.dirty&&e.active})))};if(t.sync)return n();l=e.requestAnimationFrame(n)}:function(){},c=function(e){return function(t){a.forEach((function(t){return t.dirty=e})),u(t)}},s=function(e){e.filter((function(e){return!e.styleComputed})).forEach((function(e){e.styleComputed=m(e)})),e.filter(y).forEach(v);var t=e.filter(p);t.forEach(d),t.forEach((function(e){v(e),f(e)})),t.forEach(S)},f=function(e){return e.dirty=n},d=function(e){e.availableWidth=e.element.parentNode.clientWidth,e.currentWidth=e.element.scrollWidth,e.previousFontSize=e.currentFontSize,e.currentFontSize=Math.min(Math.max(e.minSize,e.availableWidth/e.currentWidth*e.previousFontSize),e.maxSize),e.whiteSpace=e.multiLine&&e.currentFontSize===e.minSize?\"normal\":\"nowrap\"},p=function(e){return e.dirty!==r||e.dirty===r&&e.element.parentNode.clientWidth!==e.availableWidth},m=function(t){var n=e.getComputedStyle(t.element,null);return t.currentFontSize=parseFloat(n.getPropertyValue(\"font-size\")),t.display=n.getPropertyValue(\"display\"),t.whiteSpace=n.getPropertyValue(\"white-space\"),!0},y=function(e){var t=!1;return!e.preStyleTestCompleted&&(/inline-/.test(e.display)||(t=!0,e.display=\"inline-block\"),\"nowrap\"!==e.whiteSpace&&(t=!0,e.whiteSpace=\"nowrap\"),e.preStyleTestCompleted=!0,t)},v=function(e){e.element.style.whiteSpace=e.whiteSpace,e.element.style.display=e.display,e.element.style.fontSize=e.currentFontSize+\"px\"},S=function(e){e.element.dispatchEvent(new CustomEvent(\"fit\",{detail:{oldValue:e.previousFontSize,newValue:e.currentFontSize,scaleFactor:e.currentFontSize/e.previousFontSize}}))},h=function(e,t){return function(n){e.dirty=t,e.active&&u(n)}},w=function(e){return function(){a=a.filter((function(t){return t.element!==e.element})),e.observeMutations&&e.observer.disconnect(),e.element.style.whiteSpace=e.originalStyle.whiteSpace,e.element.style.display=e.originalStyle.display,e.element.style.fontSize=e.originalStyle.fontSize}},b=function(e){return function(){e.active||(e.active=!0,u())}},z=function(e){return function(){return e.active=!1}},F=function(e){e.observeMutations&&(e.observer=new MutationObserver(h(e,i)),e.observer.observe(e.element,e.observeMutations))},g={minSize:16,maxSize:512,multiLine:!0,observeMutations:\"MutationObserver\"in e&&{subtree:!0,childList:!0,characterData:!0}},W=null,E=function(){e.clearTimeout(W),W=e.setTimeout(c(r),x.observeWindowDelay)},M=[\"resize\",\"orientationchange\"];return Object.defineProperty(x,\"observeWindow\",{set:function(t){var n=\"\".concat(t?\"add\":\"remove\",\"EventListener\");M.forEach((function(t){e[n](t,E)}))}}),x.observeWindow=!0,x.observeWindowDelay=100,x.fitAll=c(o),x}function C(e,t){var n=Object.assign({},g,t),i=e.map((function(e){var t=Object.assign({},n,{element:e,active:!0});return function(e){e.originalStyle={whiteSpace:e.element.style.whiteSpace,display:e.element.style.display,fontSize:e.element.style.fontSize},F(e),e.newbie=!0,e.dirty=!0,a.push(e)}(t),{element:e,fit:h(t,o),unfreeze:b(t),freeze:z(t),unsubscribe:w(t)}}));return u(),i}function x(e){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return\"string\"==typeof e?C(t(document.querySelectorAll(e)),n):C([e],n)[0]}}(\"undefined\"==typeof window?null:window);export default e;\n","import { extend, queryAll, closest, getMimeTypeFromFile, encodeRFC3986URI } from '../utils/util.js'\nimport { isMobile } from '../utils/device.js'\n\nimport fitty from 'fitty';\n\n/**\n * Handles loading, unloading and playback of slide\n * content such as images, videos and iframes.\n */\nexport default class SlideContent {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\tthis.startEmbeddedIframe = this.startEmbeddedIframe.bind( this );\n\n\t}\n\n\t/**\n\t * Should the given element be preloaded?\n\t * Decides based on local element attributes and global config.\n\t *\n\t * @param {HTMLElement} element\n\t */\n\tshouldPreload( element ) {\n\n\t\tif( this.Reveal.isScrollView() ) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// Prefer an explicit global preload setting\n\t\tlet preload = this.Reveal.getConfig().preloadIframes;\n\n\t\t// If no global setting is available, fall back on the element's\n\t\t// own preload setting\n\t\tif( typeof preload !== 'boolean' ) {\n\t\t\tpreload = element.hasAttribute( 'data-preload' );\n\t\t}\n\n\t\treturn preload;\n\t}\n\n\t/**\n\t * Called when the given slide is within the configured view\n\t * distance. Shows the slide element and loads any content\n\t * that is set to load lazily (data-src).\n\t *\n\t * @param {HTMLElement} slide Slide to show\n\t */\n\tload( slide, options = {} ) {\n\n\t\t// Show the slide element\n\t\tslide.style.display = this.Reveal.getConfig().display;\n\n\t\t// Media elements with data-src attributes\n\t\tqueryAll( slide, 'img[data-src], video[data-src], audio[data-src], iframe[data-src]' ).forEach( element => {\n\t\t\tif( element.tagName !== 'IFRAME' || this.shouldPreload( element ) ) {\n\t\t\t\telement.setAttribute( 'src', element.getAttribute( 'data-src' ) );\n\t\t\t\telement.setAttribute( 'data-lazy-loaded', '' );\n\t\t\t\telement.removeAttribute( 'data-src' );\n\t\t\t}\n\t\t} );\n\n\t\t// Media elements with <source> children\n\t\tqueryAll( slide, 'video, audio' ).forEach( media => {\n\t\t\tlet sources = 0;\n\n\t\t\tqueryAll( media, 'source[data-src]' ).forEach( source => {\n\t\t\t\tsource.setAttribute( 'src', source.getAttribute( 'data-src' ) );\n\t\t\t\tsource.removeAttribute( 'data-src' );\n\t\t\t\tsource.setAttribute( 'data-lazy-loaded', '' );\n\t\t\t\tsources += 1;\n\t\t\t} );\n\n\t\t\t// Enable inline video playback in mobile Safari\n\t\t\tif( isMobile && media.tagName === 'VIDEO' ) {\n\t\t\t\tmedia.setAttribute( 'playsinline', '' );\n\t\t\t}\n\n\t\t\t// If we rewrote sources for this video/audio element, we need\n\t\t\t// to manually tell it to load from its new origin\n\t\t\tif( sources > 0 ) {\n\t\t\t\tmedia.load();\n\t\t\t}\n\t\t} );\n\n\n\t\t// Show the corresponding background element\n\t\tlet background = slide.slideBackgroundElement;\n\t\tif( background ) {\n\t\t\tbackground.style.display = 'block';\n\n\t\t\tlet backgroundContent = slide.slideBackgroundContentElement;\n\t\t\tlet backgroundIframe = slide.getAttribute( 'data-background-iframe' );\n\n\t\t\t// If the background contains media, load it\n\t\t\tif( background.hasAttribute( 'data-loaded' ) === false ) {\n\t\t\t\tbackground.setAttribute( 'data-loaded', 'true' );\n\n\t\t\t\tlet backgroundImage = slide.getAttribute( 'data-background-image' ),\n\t\t\t\t\tbackgroundVideo = slide.getAttribute( 'data-background-video' ),\n\t\t\t\t\tbackgroundVideoLoop = slide.hasAttribute( 'data-background-video-loop' ),\n\t\t\t\t\tbackgroundVideoMuted = slide.hasAttribute( 'data-background-video-muted' );\n\n\t\t\t\t// Images\n\t\t\t\tif( backgroundImage ) {\n\t\t\t\t\t// base64\n\t\t\t\t\tif(  /^data:/.test( backgroundImage.trim() ) ) {\n\t\t\t\t\t\tbackgroundContent.style.backgroundImage = `url(${backgroundImage.trim()})`;\n\t\t\t\t\t}\n\t\t\t\t\t// URL(s)\n\t\t\t\t\telse {\n\t\t\t\t\t\tbackgroundContent.style.backgroundImage = backgroundImage.split( ',' ).map( background => {\n\t\t\t\t\t\t\t// Decode URL(s) that are already encoded first\n\t\t\t\t\t\t\tlet decoded = decodeURI(background.trim());\n\t\t\t\t\t\t\treturn `url(${encodeRFC3986URI(decoded)})`;\n\t\t\t\t\t\t}).join( ',' );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// Videos\n\t\t\t\telse if ( backgroundVideo && !this.Reveal.isSpeakerNotes() ) {\n\t\t\t\t\tlet video = document.createElement( 'video' );\n\n\t\t\t\t\tif( backgroundVideoLoop ) {\n\t\t\t\t\t\tvideo.setAttribute( 'loop', '' );\n\t\t\t\t\t}\n\n\t\t\t\t\tif( backgroundVideoMuted ) {\n\t\t\t\t\t\tvideo.muted = true;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Enable inline playback in mobile Safari\n\t\t\t\t\t//\n\t\t\t\t\t// Mute is required for video to play when using\n\t\t\t\t\t// swipe gestures to navigate since they don't\n\t\t\t\t\t// count as direct user actions :'(\n\t\t\t\t\tif( isMobile ) {\n\t\t\t\t\t\tvideo.muted = true;\n\t\t\t\t\t\tvideo.setAttribute( 'playsinline', '' );\n\t\t\t\t\t}\n\n\t\t\t\t\t// Support comma separated lists of video sources\n\t\t\t\t\tbackgroundVideo.split( ',' ).forEach( source => {\n\t\t\t\t\t\tconst sourceElement = document.createElement( 'source' );\n\t\t\t\t\t\tsourceElement.setAttribute( 'src', source );\n\n\t\t\t\t\t\tlet type = getMimeTypeFromFile( source );\n\t\t\t\t\t\tif( type ) {\n\t\t\t\t\t\t\tsourceElement.setAttribute( 'type', type );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvideo.appendChild( sourceElement );\n\t\t\t\t\t} );\n\n\t\t\t\t\tbackgroundContent.appendChild( video );\n\t\t\t\t}\n\t\t\t\t// Iframes\n\t\t\t\telse if( backgroundIframe && options.excludeIframes !== true ) {\n\t\t\t\t\tlet iframe = document.createElement( 'iframe' );\n\t\t\t\t\tiframe.setAttribute( 'allowfullscreen', '' );\n\t\t\t\t\tiframe.setAttribute( 'mozallowfullscreen', '' );\n\t\t\t\t\tiframe.setAttribute( 'webkitallowfullscreen', '' );\n\t\t\t\t\tiframe.setAttribute( 'allow', 'autoplay' );\n\n\t\t\t\t\tiframe.setAttribute( 'data-src', backgroundIframe );\n\n\t\t\t\t\tiframe.style.width  = '100%';\n\t\t\t\t\tiframe.style.height = '100%';\n\t\t\t\t\tiframe.style.maxHeight = '100%';\n\t\t\t\t\tiframe.style.maxWidth = '100%';\n\n\t\t\t\t\tbackgroundContent.appendChild( iframe );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Start loading preloadable iframes\n\t\t\tlet backgroundIframeElement = backgroundContent.querySelector( 'iframe[data-src]' );\n\t\t\tif( backgroundIframeElement ) {\n\n\t\t\t\t// Check if this iframe is eligible to be preloaded\n\t\t\t\tif( this.shouldPreload( background ) && !/autoplay=(1|true|yes)/gi.test( backgroundIframe ) ) {\n\t\t\t\t\tif( backgroundIframeElement.getAttribute( 'src' ) !== backgroundIframe ) {\n\t\t\t\t\t\tbackgroundIframeElement.setAttribute( 'src', backgroundIframe );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.layout( slide );\n\n\t}\n\n\t/**\n\t * Applies JS-dependent layout helpers for the scope.\n\t */\n\tlayout( scopeElement ) {\n\n\t\t// Autosize text with the r-fit-text class based on the\n\t\t// size of its container. This needs to happen after the\n\t\t// slide is visible in order to measure the text.\n\t\tArray.from( scopeElement.querySelectorAll( '.r-fit-text' ) ).forEach( element => {\n\t\t\tfitty( element, {\n\t\t\t\tminSize: 24,\n\t\t\t\tmaxSize: this.Reveal.getConfig().height * 0.8,\n\t\t\t\tobserveMutations: false,\n\t\t\t\tobserveWindow: false\n\t\t\t} );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Unloads and hides the given slide. This is called when the\n\t * slide is moved outside of the configured view distance.\n\t *\n\t * @param {HTMLElement} slide\n\t */\n\tunload( slide ) {\n\n\t\t// Hide the slide element\n\t\tslide.style.display = 'none';\n\n\t\t// Hide the corresponding background element\n\t\tlet background = this.Reveal.getSlideBackground( slide );\n\t\tif( background ) {\n\t\t\tbackground.style.display = 'none';\n\n\t\t\t// Unload any background iframes\n\t\t\tqueryAll( background, 'iframe[src]' ).forEach( element => {\n\t\t\t\telement.removeAttribute( 'src' );\n\t\t\t} );\n\t\t}\n\n\t\t// Reset lazy-loaded media elements with src attributes\n\t\tqueryAll( slide, 'video[data-lazy-loaded][src], audio[data-lazy-loaded][src], iframe[data-lazy-loaded][src]' ).forEach( element => {\n\t\t\telement.setAttribute( 'data-src', element.getAttribute( 'src' ) );\n\t\t\telement.removeAttribute( 'src' );\n\t\t} );\n\n\t\t// Reset lazy-loaded media elements with <source> children\n\t\tqueryAll( slide, 'video[data-lazy-loaded] source[src], audio source[src]' ).forEach( source => {\n\t\t\tsource.setAttribute( 'data-src', source.getAttribute( 'src' ) );\n\t\t\tsource.removeAttribute( 'src' );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Enforces origin-specific format rules for embedded media.\n\t */\n\tformatEmbeddedContent() {\n\n\t\tlet _appendParamToIframeSource = ( sourceAttribute, sourceURL, param ) => {\n\t\t\tqueryAll( this.Reveal.getSlidesElement(), 'iframe['+ sourceAttribute +'*=\"'+ sourceURL +'\"]' ).forEach( el => {\n\t\t\t\tlet src = el.getAttribute( sourceAttribute );\n\t\t\t\tif( src && src.indexOf( param ) === -1 ) {\n\t\t\t\t\tel.setAttribute( sourceAttribute, src + ( !/\\?/.test( src ) ? '?' : '&' ) + param );\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\n\t\t// YouTube frames must include \"?enablejsapi=1\"\n\t\t_appendParamToIframeSource( 'src', 'youtube.com/embed/', 'enablejsapi=1' );\n\t\t_appendParamToIframeSource( 'data-src', 'youtube.com/embed/', 'enablejsapi=1' );\n\n\t\t// Vimeo frames must include \"?api=1\"\n\t\t_appendParamToIframeSource( 'src', 'player.vimeo.com/', 'api=1' );\n\t\t_appendParamToIframeSource( 'data-src', 'player.vimeo.com/', 'api=1' );\n\n\t}\n\n\t/**\n\t * Start playback of any embedded content inside of\n\t * the given element.\n\t *\n\t * @param {HTMLElement} element\n\t */\n\tstartEmbeddedContent( element ) {\n\n\t\tif( element && !this.Reveal.isSpeakerNotes() ) {\n\n\t\t\t// Restart GIFs\n\t\t\tqueryAll( element, 'img[src$=\".gif\"]' ).forEach( el => {\n\t\t\t\t// Setting the same unchanged source like this was confirmed\n\t\t\t\t// to work in Chrome, FF & Safari\n\t\t\t\tel.setAttribute( 'src', el.getAttribute( 'src' ) );\n\t\t\t} );\n\n\t\t\t// HTML5 media elements\n\t\t\tqueryAll( element, 'video, audio' ).forEach( el => {\n\t\t\t\tif( closest( el, '.fragment' ) && !closest( el, '.fragment.visible' ) ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Prefer an explicit global autoplay setting\n\t\t\t\tlet autoplay = this.Reveal.getConfig().autoPlayMedia;\n\n\t\t\t\t// If no global setting is available, fall back on the element's\n\t\t\t\t// own autoplay setting\n\t\t\t\tif( typeof autoplay !== 'boolean' ) {\n\t\t\t\t\tautoplay = el.hasAttribute( 'data-autoplay' ) || !!closest( el, '.slide-background' );\n\t\t\t\t}\n\n\t\t\t\tif( autoplay && typeof el.play === 'function' ) {\n\n\t\t\t\t\t// If the media is ready, start playback\n\t\t\t\t\tif( el.readyState > 1 ) {\n\t\t\t\t\t\tthis.startEmbeddedMedia( { target: el } );\n\t\t\t\t\t}\n\t\t\t\t\t// Mobile devices never fire a loaded event so instead\n\t\t\t\t\t// of waiting, we initiate playback\n\t\t\t\t\telse if( isMobile ) {\n\t\t\t\t\t\tlet promise = el.play();\n\n\t\t\t\t\t\t// If autoplay does not work, ensure that the controls are visible so\n\t\t\t\t\t\t// that the viewer can start the media on their own\n\t\t\t\t\t\tif( promise && typeof promise.catch === 'function' && el.controls === false ) {\n\t\t\t\t\t\t\tpromise.catch( () => {\n\t\t\t\t\t\t\t\tel.controls = true;\n\n\t\t\t\t\t\t\t\t// Once the video does start playing, hide the controls again\n\t\t\t\t\t\t\t\tel.addEventListener( 'play', () => {\n\t\t\t\t\t\t\t\t\tel.controls = false;\n\t\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t// If the media isn't loaded, wait before playing\n\t\t\t\t\telse {\n\t\t\t\t\t\tel.removeEventListener( 'loadeddata', this.startEmbeddedMedia ); // remove first to avoid dupes\n\t\t\t\t\t\tel.addEventListener( 'loadeddata', this.startEmbeddedMedia );\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\t// Normal iframes\n\t\t\tqueryAll( element, 'iframe[src]' ).forEach( el => {\n\t\t\t\tif( closest( el, '.fragment' ) && !closest( el, '.fragment.visible' ) ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tthis.startEmbeddedIframe( { target: el } );\n\t\t\t} );\n\n\t\t\t// Lazy loading iframes\n\t\t\tqueryAll( element, 'iframe[data-src]' ).forEach( el => {\n\t\t\t\tif( closest( el, '.fragment' ) && !closest( el, '.fragment.visible' ) ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif( el.getAttribute( 'src' ) !== el.getAttribute( 'data-src' ) ) {\n\t\t\t\t\tel.removeEventListener( 'load', this.startEmbeddedIframe ); // remove first to avoid dupes\n\t\t\t\t\tel.addEventListener( 'load', this.startEmbeddedIframe );\n\t\t\t\t\tel.setAttribute( 'src', el.getAttribute( 'data-src' ) );\n\t\t\t\t}\n\t\t\t} );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Starts playing an embedded video/audio element after\n\t * it has finished loading.\n\t *\n\t * @param {object} event\n\t */\n\tstartEmbeddedMedia( event ) {\n\n\t\tlet isAttachedToDOM = !!closest( event.target, 'html' ),\n\t\t\tisVisible  \t\t= !!closest( event.target, '.present' );\n\n\t\tif( isAttachedToDOM && isVisible ) {\n\t\t\tevent.target.currentTime = 0;\n\t\t\tevent.target.play();\n\t\t}\n\n\t\tevent.target.removeEventListener( 'loadeddata', this.startEmbeddedMedia );\n\n\t}\n\n\t/**\n\t * \"Starts\" the content of an embedded iframe using the\n\t * postMessage API.\n\t *\n\t * @param {object} event\n\t */\n\tstartEmbeddedIframe( event ) {\n\n\t\tlet iframe = event.target;\n\n\t\tif( iframe && iframe.contentWindow ) {\n\n\t\t\tlet isAttachedToDOM = !!closest( event.target, 'html' ),\n\t\t\t\tisVisible  \t\t= !!closest( event.target, '.present' );\n\n\t\t\tif( isAttachedToDOM && isVisible ) {\n\n\t\t\t\t// Prefer an explicit global autoplay setting\n\t\t\t\tlet autoplay = this.Reveal.getConfig().autoPlayMedia;\n\n\t\t\t\t// If no global setting is available, fall back on the element's\n\t\t\t\t// own autoplay setting\n\t\t\t\tif( typeof autoplay !== 'boolean' ) {\n\t\t\t\t\tautoplay = iframe.hasAttribute( 'data-autoplay' ) || !!closest( iframe, '.slide-background' );\n\t\t\t\t}\n\n\t\t\t\t// YouTube postMessage API\n\t\t\t\tif( /youtube\\.com\\/embed\\//.test( iframe.getAttribute( 'src' ) ) && autoplay ) {\n\t\t\t\t\tiframe.contentWindow.postMessage( '{\"event\":\"command\",\"func\":\"playVideo\",\"args\":\"\"}', '*' );\n\t\t\t\t}\n\t\t\t\t// Vimeo postMessage API\n\t\t\t\telse if( /player\\.vimeo\\.com\\//.test( iframe.getAttribute( 'src' ) ) && autoplay ) {\n\t\t\t\t\tiframe.contentWindow.postMessage( '{\"method\":\"play\"}', '*' );\n\t\t\t\t}\n\t\t\t\t// Generic postMessage API\n\t\t\t\telse {\n\t\t\t\t\tiframe.contentWindow.postMessage( 'slide:start', '*' );\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Stop playback of any embedded content inside of\n\t * the targeted slide.\n\t *\n\t * @param {HTMLElement} element\n\t */\n\tstopEmbeddedContent( element, options = {} ) {\n\n\t\toptions = extend( {\n\t\t\t// Defaults\n\t\t\tunloadIframes: true\n\t\t}, options );\n\n\t\tif( element && element.parentNode ) {\n\t\t\t// HTML5 media elements\n\t\t\tqueryAll( element, 'video, audio' ).forEach( el => {\n\t\t\t\tif( !el.hasAttribute( 'data-ignore' ) && typeof el.pause === 'function' ) {\n\t\t\t\t\tel.setAttribute('data-paused-by-reveal', '');\n\t\t\t\t\tel.pause();\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\t// Generic postMessage API for non-lazy loaded iframes\n\t\t\tqueryAll( element, 'iframe' ).forEach( el => {\n\t\t\t\tif( el.contentWindow ) el.contentWindow.postMessage( 'slide:stop', '*' );\n\t\t\t\tel.removeEventListener( 'load', this.startEmbeddedIframe );\n\t\t\t});\n\n\t\t\t// YouTube postMessage API\n\t\t\tqueryAll( element, 'iframe[src*=\"youtube.com/embed/\"]' ).forEach( el => {\n\t\t\t\tif( !el.hasAttribute( 'data-ignore' ) && el.contentWindow && typeof el.contentWindow.postMessage === 'function' ) {\n\t\t\t\t\tel.contentWindow.postMessage( '{\"event\":\"command\",\"func\":\"pauseVideo\",\"args\":\"\"}', '*' );\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// Vimeo postMessage API\n\t\t\tqueryAll( element, 'iframe[src*=\"player.vimeo.com/\"]' ).forEach( el => {\n\t\t\t\tif( !el.hasAttribute( 'data-ignore' ) && el.contentWindow && typeof el.contentWindow.postMessage === 'function' ) {\n\t\t\t\t\tel.contentWindow.postMessage( '{\"method\":\"pause\"}', '*' );\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif( options.unloadIframes === true ) {\n\t\t\t\t// Unload lazy-loaded iframes\n\t\t\t\tqueryAll( element, 'iframe[data-src]' ).forEach( el => {\n\t\t\t\t\t// Only removing the src doesn't actually unload the frame\n\t\t\t\t\t// in all browsers (Firefox) so we set it to blank first\n\t\t\t\t\tel.setAttribute( 'src', 'about:blank' );\n\t\t\t\t\tel.removeAttribute( 'src' );\n\t\t\t\t} );\n\t\t\t}\n\t\t}\n\n\t}\n\n}\n","\nexport const SLIDES_SELECTOR = '.slides section';\nexport const HORIZONTAL_SLIDES_SELECTOR = '.slides>section';\nexport const VERTICAL_SLIDES_SELECTOR = '.slides>section.present>section';\nexport const HORIZONTAL_BACKGROUNDS_SELECTOR = '.backgrounds>.slide-background';\n\n// Methods that may not be invoked via the postMessage API\nexport const POST_MESSAGE_METHOD_BLACKLIST = /registerPlugin|registerKeyboardShortcut|addKeyBinding|addEventListener|showPreview/;\n\n// Regex for retrieving the fragment style from a class attribute\nexport const FRAGMENT_STYLE_REGEX = /fade-(down|up|right|left|out|in-then-out|in-then-semi-out)|semi-fade-out|current-visible|shrink|grow/;\n\n// Slide number formats\nexport const SLIDE_NUMBER_FORMAT_HORIZONTAL_DOT_VERTICAL = 'h.v';\nexport const SLIDE_NUMBER_FORMAT_HORIZONTAL_SLASH_VERTICAL = 'h/v';\nexport const SLIDE_NUMBER_FORMAT_CURRENT = 'c';\nexport const SLIDE_NUMBER_FORMAT_CURRENT_SLASH_TOTAL = 'c/t';","import {\n\tSLIDE_NUMBER_FORMAT_CURRENT,\n\tSLIDE_NUMBER_FORMAT_CURRENT_SLASH_TOTAL,\n\tSLIDE_NUMBER_FORMAT_HORIZONTAL_DOT_VERTICAL,\n\tSLIDE_NUMBER_FORMAT_HORIZONTAL_SLASH_VERTICAL\n} from \"../utils/constants\";\n\n/**\n * Handles the display of reveal.js' optional slide number.\n */\nexport default class SlideNumber {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t}\n\n\trender() {\n\n\t\tthis.element = document.createElement( 'div' );\n\t\tthis.element.className = 'slide-number';\n\t\tthis.Reveal.getRevealElement().appendChild( this.element );\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tlet slideNumberDisplay = 'none';\n\t\tif( config.slideNumber && !this.Reveal.isPrintView() ) {\n\t\t\tif( config.showSlideNumber === 'all' ) {\n\t\t\t\tslideNumberDisplay = 'block';\n\t\t\t}\n\t\t\telse if( config.showSlideNumber === 'speaker' && this.Reveal.isSpeakerNotes() ) {\n\t\t\t\tslideNumberDisplay = 'block';\n\t\t\t}\n\t\t}\n\n\t\tthis.element.style.display = slideNumberDisplay;\n\n\t}\n\n\t/**\n\t * Updates the slide number to match the current slide.\n\t */\n\tupdate() {\n\n\t\t// Update slide number if enabled\n\t\tif( this.Reveal.getConfig().slideNumber && this.element ) {\n\t\t\tthis.element.innerHTML = this.getSlideNumber();\n\t\t}\n\n\t}\n\n\t/**\n\t * Returns the HTML string corresponding to the current slide\n\t * number, including formatting.\n\t */\n\tgetSlideNumber( slide = this.Reveal.getCurrentSlide() ) {\n\n\t\tlet config = this.Reveal.getConfig();\n\t\tlet value;\n\t\tlet format = SLIDE_NUMBER_FORMAT_HORIZONTAL_DOT_VERTICAL;\n\n\t\tif ( typeof config.slideNumber === 'function' ) {\n\t\t\tvalue = config.slideNumber( slide );\n\t\t} else {\n\t\t\t// Check if a custom number format is available\n\t\t\tif( typeof config.slideNumber === 'string' ) {\n\t\t\t\tformat = config.slideNumber;\n\t\t\t}\n\n\t\t\t// If there are ONLY vertical slides in this deck, always use\n\t\t\t// a flattened slide number\n\t\t\tif( !/c/.test( format ) && this.Reveal.getHorizontalSlides().length === 1 ) {\n\t\t\t\tformat = SLIDE_NUMBER_FORMAT_CURRENT;\n\t\t\t}\n\n\t\t\t// Offset the current slide number by 1 to make it 1-indexed\n\t\t\tlet horizontalOffset = slide && slide.dataset.visibility === 'uncounted' ? 0 : 1;\n\n\t\t\tvalue = [];\n\t\t\tswitch( format ) {\n\t\t\t\tcase SLIDE_NUMBER_FORMAT_CURRENT:\n\t\t\t\t\tvalue.push( this.Reveal.getSlidePastCount( slide ) + horizontalOffset );\n\t\t\t\t\tbreak;\n\t\t\t\tcase SLIDE_NUMBER_FORMAT_CURRENT_SLASH_TOTAL:\n\t\t\t\t\tvalue.push( this.Reveal.getSlidePastCount( slide ) + horizontalOffset, '/', this.Reveal.getTotalSlides() );\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tlet indices = this.Reveal.getIndices( slide );\n\t\t\t\t\tvalue.push( indices.h + horizontalOffset );\n\t\t\t\t\tlet sep = format === SLIDE_NUMBER_FORMAT_HORIZONTAL_SLASH_VERTICAL ? '/' : '.';\n\t\t\t\t\tif( this.Reveal.isVerticalSlide( slide ) ) value.push( sep, indices.v + 1 );\n\t\t\t}\n\t\t}\n\n\t\tlet url = '#' + this.Reveal.location.getHash( slide );\n\t\treturn this.formatNumber( value[0], value[1], value[2], url );\n\n\t}\n\n\t/**\n\t * Applies HTML formatting to a slide number before it's\n\t * written to the DOM.\n\t *\n\t * @param {number} a Current slide\n\t * @param {string} delimiter Character to separate slide numbers\n\t * @param {(number|*)} b Total slides\n\t * @param {HTMLElement} [url='#'+locationHash()] The url to link to\n\t * @return {string} HTML string fragment\n\t */\n\tformatNumber( a, delimiter, b, url = '#' + this.Reveal.location.getHash() ) {\n\n\t\tif( typeof b === 'number' && !isNaN( b ) ) {\n\t\t\treturn  `<a href=\"${url}\">\n\t\t\t\t\t<span class=\"slide-number-a\">${a}</span>\n\t\t\t\t\t<span class=\"slide-number-delimiter\">${delimiter}</span>\n\t\t\t\t\t<span class=\"slide-number-b\">${b}</span>\n\t\t\t\t\t</a>`;\n\t\t}\n\t\telse {\n\t\t\treturn `<a href=\"${url}\">\n\t\t\t\t\t<span class=\"slide-number-a\">${a}</span>\n\t\t\t\t\t</a>`;\n\t\t}\n\n\t}\n\n\tdestroy() {\n\n\t\tthis.element.remove();\n\n\t}\n\n}","import {\n\tSLIDE_NUMBER_FORMAT_CURRENT,\n\tSLIDE_NUMBER_FORMAT_CURRENT_SLASH_TOTAL\n} from \"../utils/constants\";\n\n/**\n * Makes it possible to jump to a slide by entering its\n * slide number or id.\n */\nexport default class JumpToSlide {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\tthis.onInput = this.onInput.bind( this );\n\t\tthis.onBlur = this.onBlur.bind( this );\n\t\tthis.onKeyDown = this.onKeyDown.bind( this );\n\n\t}\n\n\trender() {\n\n\t\tthis.element = document.createElement( 'div' );\n\t\tthis.element.className = 'jump-to-slide';\n\n    this.jumpInput = document.createElement( 'input' );\n    this.jumpInput.type = 'text';\n    this.jumpInput.className = 'jump-to-slide-input';\n    this.jumpInput.placeholder = 'Jump to slide';\n\t\tthis.jumpInput.addEventListener( 'input', this.onInput );\n\t\tthis.jumpInput.addEventListener( 'keydown', this.onKeyDown );\n\t\tthis.jumpInput.addEventListener( 'blur', this.onBlur );\n\n    this.element.appendChild( this.jumpInput );\n\n\t}\n\n\tshow() {\n\n\t\tthis.indicesOnShow = this.Reveal.getIndices();\n\n\t\tthis.Reveal.getRevealElement().appendChild( this.element );\n\t\tthis.jumpInput.focus();\n\n\t}\n\n\thide() {\n\n\t\tif( this.isVisible() ) {\n\t\t\tthis.element.remove();\n\t\t\tthis.jumpInput.value = '';\n\n\t\t\tclearTimeout( this.jumpTimeout );\n\t\t\tdelete this.jumpTimeout;\n\t\t}\n\n\t}\n\n\tisVisible() {\n\n\t\treturn !!this.element.parentNode;\n\n\t}\n\n\t/**\n\t * Parses the current input and jumps to the given slide.\n\t */\n\tjump() {\n\n\t\tclearTimeout( this.jumpTimeout );\n\t\tdelete this.jumpTimeout;\n\n\t\tlet query = this.jumpInput.value.trim( '' );\n\t\tlet indices;\n\n\t\t// When slide numbers are formatted to be a single linear mumber\n\t\t// (instead of showing a separate horizontal/vertical index) we\n\t\t// use the same format for slide jumps\n\t\tif( /^\\d+$/.test( query ) ) {\n\t\t\tconst slideNumberFormat = this.Reveal.getConfig().slideNumber;\n\t\t\tif( slideNumberFormat === SLIDE_NUMBER_FORMAT_CURRENT || slideNumberFormat === SLIDE_NUMBER_FORMAT_CURRENT_SLASH_TOTAL ) {\n\t\t\t\tconst slide = this.Reveal.getSlides()[ parseInt( query, 10 ) - 1 ];\n\t\t\t\tif( slide ) {\n\t\t\t\t\tindices = this.Reveal.getIndices( slide );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif( !indices ) {\n\t\t\t// If the query uses \"horizontal.vertical\" format, convert to\n\t\t\t// \"horizontal/vertical\" so that our URL parser can understand\n\t\t\tif( /^\\d+\\.\\d+$/.test( query ) ) {\n\t\t\t\tquery = query.replace( '.', '/' );\n\t\t\t}\n\n\t\t\tindices = this.Reveal.location.getIndicesFromHash( query, { oneBasedIndex: true } );\n\t\t}\n\n\t\t// Still no valid index? Fall back on a text search\n\t\tif( !indices && /\\S+/i.test( query ) && query.length > 1 ) {\n\t\t\tindices = this.search( query );\n\t\t}\n\n\t\tif( indices && query !== '' ) {\n\t\t\tthis.Reveal.slide( indices.h, indices.v, indices.f );\n\t\t\treturn true;\n\t\t}\n\t\telse {\n\t\t\tthis.Reveal.slide( this.indicesOnShow.h, this.indicesOnShow.v, this.indicesOnShow.f );\n\t\t\treturn false;\n\t\t}\n\n\t}\n\n\tjumpAfter( delay ) {\n\n\t\tclearTimeout( this.jumpTimeout );\n\t\tthis.jumpTimeout = setTimeout( () => this.jump(), delay );\n\n\t}\n\n\t/**\n\t * A lofi search that looks for the given query in all\n\t * of our slides and returns the first match.\n\t */\n\tsearch( query ) {\n\n\t\tconst regex = new RegExp( '\\\\b' + query.trim() + '\\\\b', 'i' );\n\n\t\tconst slide = this.Reveal.getSlides().find( ( slide ) => {\n\t\t\treturn regex.test( slide.innerText );\n\t\t} );\n\n\t\tif( slide ) {\n\t\t\treturn this.Reveal.getIndices( slide );\n\t\t}\n\t\telse {\n\t\t\treturn null;\n\t\t}\n\n\t}\n\n\t/**\n\t * Reverts back to the slide we were on when jump to slide was\n\t * invoked.\n\t */\n\tcancel() {\n\n\t\tthis.Reveal.slide( this.indicesOnShow.h, this.indicesOnShow.v, this.indicesOnShow.f );\n\t\tthis.hide();\n\n\t}\n\n\tconfirm() {\n\n\t\tthis.jump();\n\t\tthis.hide();\n\n\t}\n\n\tdestroy() {\n\n\t\tthis.jumpInput.removeEventListener( 'input', this.onInput );\n\t\tthis.jumpInput.removeEventListener( 'keydown', this.onKeyDown );\n\t\tthis.jumpInput.removeEventListener( 'blur', this.onBlur );\n\n\t\tthis.element.remove();\n\n\t}\n\n\tonKeyDown( event ) {\n\n\t\tif( event.keyCode === 13 ) {\n\t\t\tthis.confirm();\n\t\t}\n\t\telse if( event.keyCode === 27 ) {\n\t\t\tthis.cancel();\n\n\t\t\tevent.stopImmediatePropagation();\n\t\t}\n\n\t}\n\n\tonInput( event ) {\n\n\t\tthis.jumpAfter( 200 );\n\n\t}\n\n\tonBlur() {\n\n\t\tsetTimeout( () => this.hide(), 1 );\n\n\t}\n\n}","/**\n * Converts various color input formats to an {r:0,g:0,b:0} object.\n *\n * @param {string} color The string representation of a color\n * @example\n * colorToRgb('#000');\n * @example\n * colorToRgb('#000000');\n * @example\n * colorToRgb('rgb(0,0,0)');\n * @example\n * colorToRgb('rgba(0,0,0)');\n *\n * @return {{r: number, g: number, b: number, [a]: number}|null}\n */\nexport const colorToRgb = ( color ) => {\n\n\tlet hex3 = color.match( /^#([0-9a-f]{3})$/i );\n\tif( hex3 && hex3[1] ) {\n\t\thex3 = hex3[1];\n\t\treturn {\n\t\t\tr: parseInt( hex3.charAt( 0 ), 16 ) * 0x11,\n\t\t\tg: parseInt( hex3.charAt( 1 ), 16 ) * 0x11,\n\t\t\tb: parseInt( hex3.charAt( 2 ), 16 ) * 0x11\n\t\t};\n\t}\n\n\tlet hex6 = color.match( /^#([0-9a-f]{6})$/i );\n\tif( hex6 && hex6[1] ) {\n\t\thex6 = hex6[1];\n\t\treturn {\n\t\t\tr: parseInt( hex6.slice( 0, 2 ), 16 ),\n\t\t\tg: parseInt( hex6.slice( 2, 4 ), 16 ),\n\t\t\tb: parseInt( hex6.slice( 4, 6 ), 16 )\n\t\t};\n\t}\n\n\tlet rgb = color.match( /^rgb\\s*\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*\\)$/i );\n\tif( rgb ) {\n\t\treturn {\n\t\t\tr: parseInt( rgb[1], 10 ),\n\t\t\tg: parseInt( rgb[2], 10 ),\n\t\t\tb: parseInt( rgb[3], 10 )\n\t\t};\n\t}\n\n\tlet rgba = color.match( /^rgba\\s*\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*\\,\\s*([\\d]+|[\\d]*.[\\d]+)\\s*\\)$/i );\n\tif( rgba ) {\n\t\treturn {\n\t\t\tr: parseInt( rgba[1], 10 ),\n\t\t\tg: parseInt( rgba[2], 10 ),\n\t\t\tb: parseInt( rgba[3], 10 ),\n\t\t\ta: parseFloat( rgba[4] )\n\t\t};\n\t}\n\n\treturn null;\n\n}\n\n/**\n * Calculates brightness on a scale of 0-255.\n *\n * @param {string} color See colorToRgb for supported formats.\n * @see {@link colorToRgb}\n */\nexport const colorBrightness = ( color ) => {\n\n\tif( typeof color === 'string' ) color = colorToRgb( color );\n\n\tif( color ) {\n\t\treturn ( color.r * 299 + color.g * 587 + color.b * 114 ) / 1000;\n\t}\n\n\treturn null;\n\n}","import { queryAll } from '../utils/util.js'\nimport { colorToRgb, colorBrightness } from '../utils/color.js'\n\n/**\n * Creates and updates slide backgrounds.\n */\nexport default class Backgrounds {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t}\n\n\trender() {\n\n\t\tthis.element = document.createElement( 'div' );\n\t\tthis.element.className = 'backgrounds';\n\t\tthis.Reveal.getRevealElement().appendChild( this.element );\n\n\t}\n\n\t/**\n\t * Creates the slide background elements and appends them\n\t * to the background container. One element is created per\n\t * slide no matter if the given slide has visible background.\n\t */\n\tcreate() {\n\n\t\t// Clear prior backgrounds\n\t\tthis.element.innerHTML = '';\n\t\tthis.element.classList.add( 'no-transition' );\n\n\t\t// Iterate over all horizontal slides\n\t\tthis.Reveal.getHorizontalSlides().forEach( slideh => {\n\n\t\t\tlet backgroundStack = this.createBackground( slideh, this.element );\n\n\t\t\t// Iterate over all vertical slides\n\t\t\tqueryAll( slideh, 'section' ).forEach( slidev => {\n\n\t\t\t\tthis.createBackground( slidev, backgroundStack );\n\n\t\t\t\tbackgroundStack.classList.add( 'stack' );\n\n\t\t\t} );\n\n\t\t} );\n\n\t\t// Add parallax background if specified\n\t\tif( this.Reveal.getConfig().parallaxBackgroundImage ) {\n\n\t\t\tthis.element.style.backgroundImage = 'url(\"' + this.Reveal.getConfig().parallaxBackgroundImage + '\")';\n\t\t\tthis.element.style.backgroundSize = this.Reveal.getConfig().parallaxBackgroundSize;\n\t\t\tthis.element.style.backgroundRepeat = this.Reveal.getConfig().parallaxBackgroundRepeat;\n\t\t\tthis.element.style.backgroundPosition = this.Reveal.getConfig().parallaxBackgroundPosition;\n\n\t\t\t// Make sure the below properties are set on the element - these properties are\n\t\t\t// needed for proper transitions to be set on the element via CSS. To remove\n\t\t\t// annoying background slide-in effect when the presentation starts, apply\n\t\t\t// these properties after short time delay\n\t\t\tsetTimeout( () => {\n\t\t\t\tthis.Reveal.getRevealElement().classList.add( 'has-parallax-background' );\n\t\t\t}, 1 );\n\n\t\t}\n\t\telse {\n\n\t\t\tthis.element.style.backgroundImage = '';\n\t\t\tthis.Reveal.getRevealElement().classList.remove( 'has-parallax-background' );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Creates a background for the given slide.\n\t *\n\t * @param {HTMLElement} slide\n\t * @param {HTMLElement} container The element that the background\n\t * should be appended to\n\t * @return {HTMLElement} New background div\n\t */\n\tcreateBackground( slide, container ) {\n\n\t\t// Main slide background element\n\t\tlet element = document.createElement( 'div' );\n\t\telement.className = 'slide-background ' + slide.className.replace( /present|past|future/, '' );\n\n\t\t// Inner background element that wraps images/videos/iframes\n\t\tlet contentElement = document.createElement( 'div' );\n\t\tcontentElement.className = 'slide-background-content';\n\n\t\telement.appendChild( contentElement );\n\t\tcontainer.appendChild( element );\n\n\t\tslide.slideBackgroundElement = element;\n\t\tslide.slideBackgroundContentElement = contentElement;\n\n\t\t// Syncs the background to reflect all current background settings\n\t\tthis.sync( slide );\n\n\t\treturn element;\n\n\t}\n\n\t/**\n\t * Renders all of the visual properties of a slide background\n\t * based on the various background attributes.\n\t *\n\t * @param {HTMLElement} slide\n\t */\n\tsync( slide ) {\n\n\t\tconst element = slide.slideBackgroundElement,\n\t\t\tcontentElement = slide.slideBackgroundContentElement;\n\n\t\tconst data = {\n\t\t\tbackground: slide.getAttribute( 'data-background' ),\n\t\t\tbackgroundSize: slide.getAttribute( 'data-background-size' ),\n\t\t\tbackgroundImage: slide.getAttribute( 'data-background-image' ),\n\t\t\tbackgroundVideo: slide.getAttribute( 'data-background-video' ),\n\t\t\tbackgroundIframe: slide.getAttribute( 'data-background-iframe' ),\n\t\t\tbackgroundColor: slide.getAttribute( 'data-background-color' ),\n\t\t\tbackgroundGradient: slide.getAttribute( 'data-background-gradient' ),\n\t\t\tbackgroundRepeat: slide.getAttribute( 'data-background-repeat' ),\n\t\t\tbackgroundPosition: slide.getAttribute( 'data-background-position' ),\n\t\t\tbackgroundTransition: slide.getAttribute( 'data-background-transition' ),\n\t\t\tbackgroundOpacity: slide.getAttribute( 'data-background-opacity' ),\n\t\t};\n\n\t\tconst dataPreload = slide.hasAttribute( 'data-preload' );\n\n\t\t// Reset the prior background state in case this is not the\n\t\t// initial sync\n\t\tslide.classList.remove( 'has-dark-background' );\n\t\tslide.classList.remove( 'has-light-background' );\n\n\t\telement.removeAttribute( 'data-loaded' );\n\t\telement.removeAttribute( 'data-background-hash' );\n\t\telement.removeAttribute( 'data-background-size' );\n\t\telement.removeAttribute( 'data-background-transition' );\n\t\telement.style.backgroundColor = '';\n\n\t\tcontentElement.style.backgroundSize = '';\n\t\tcontentElement.style.backgroundRepeat = '';\n\t\tcontentElement.style.backgroundPosition = '';\n\t\tcontentElement.style.backgroundImage = '';\n\t\tcontentElement.style.opacity = '';\n\t\tcontentElement.innerHTML = '';\n\n\t\tif( data.background ) {\n\t\t\t// Auto-wrap image urls in url(...)\n\t\t\tif( /^(http|file|\\/\\/)/gi.test( data.background ) || /\\.(svg|png|jpg|jpeg|gif|bmp|webp)([?#\\s]|$)/gi.test( data.background ) ) {\n\t\t\t\tslide.setAttribute( 'data-background-image', data.background );\n\t\t\t}\n\t\t\telse {\n\t\t\t\telement.style.background = data.background;\n\t\t\t}\n\t\t}\n\n\t\t// Create a hash for this combination of background settings.\n\t\t// This is used to determine when two slide backgrounds are\n\t\t// the same.\n\t\tif( data.background || data.backgroundColor || data.backgroundGradient || data.backgroundImage || data.backgroundVideo || data.backgroundIframe ) {\n\t\t\telement.setAttribute( 'data-background-hash', data.background +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundSize +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundImage +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundVideo +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundIframe +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundColor +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundGradient +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundRepeat +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundPosition +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundTransition +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundOpacity );\n\t\t}\n\n\t\t// Additional and optional background properties\n\t\tif( data.backgroundSize ) element.setAttribute( 'data-background-size', data.backgroundSize );\n\t\tif( data.backgroundColor ) element.style.backgroundColor = data.backgroundColor;\n\t\tif( data.backgroundGradient ) element.style.backgroundImage = data.backgroundGradient;\n\t\tif( data.backgroundTransition ) element.setAttribute( 'data-background-transition', data.backgroundTransition );\n\n\t\tif( dataPreload ) element.setAttribute( 'data-preload', '' );\n\n\t\t// Background image options are set on the content wrapper\n\t\tif( data.backgroundSize ) contentElement.style.backgroundSize = data.backgroundSize;\n\t\tif( data.backgroundRepeat ) contentElement.style.backgroundRepeat = data.backgroundRepeat;\n\t\tif( data.backgroundPosition ) contentElement.style.backgroundPosition = data.backgroundPosition;\n\t\tif( data.backgroundOpacity ) contentElement.style.opacity = data.backgroundOpacity;\n\n\t\tconst contrastClass = this.getContrastClass( slide );\n\n\t\tif( typeof contrastClass === 'string' ) {\n\t\t\tslide.classList.add( contrastClass );\n\t\t}\n\n\t}\n\n\t/**\n\t * Returns a class name that can be applied to a slide to indicate\n\t * if it has a light or dark background.\n\t *\n\t * @param {*} slide\n\t *\n\t * @returns {string|null}\n\t */\n\tgetContrastClass( slide ) {\n\n\t\tconst element = slide.slideBackgroundElement;\n\n\t\t// If this slide has a background color, we add a class that\n\t\t// signals if it is light or dark. If the slide has no background\n\t\t// color, no class will be added\n\t\tlet contrastColor = slide.getAttribute( 'data-background-color' );\n\n\t\t// If no bg color was found, or it cannot be converted by colorToRgb, check the computed background\n\t\tif( !contrastColor || !colorToRgb( contrastColor ) ) {\n\t\t\tlet computedBackgroundStyle = window.getComputedStyle( element );\n\t\t\tif( computedBackgroundStyle && computedBackgroundStyle.backgroundColor ) {\n\t\t\t\tcontrastColor = computedBackgroundStyle.backgroundColor;\n\t\t\t}\n\t\t}\n\n\t\tif( contrastColor ) {\n\t\t\tconst rgb = colorToRgb( contrastColor );\n\n\t\t\t// Ignore fully transparent backgrounds. Some browsers return\n\t\t\t// rgba(0,0,0,0) when reading the computed background color of\n\t\t\t// an element with no background\n\t\t\tif( rgb && rgb.a !== 0 ) {\n\t\t\t\tif( colorBrightness( contrastColor ) < 128 ) {\n\t\t\t\t\treturn 'has-dark-background';\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\treturn 'has-light-background';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\t/**\n\t * Bubble the 'has-light-background'/'has-dark-background' classes.\n\t */\n\tbubbleSlideContrastClassToElement( slide, target ) {\n\n\t\t[ 'has-light-background', 'has-dark-background' ].forEach( classToBubble => {\n\t\t\tif( slide.classList.contains( classToBubble ) ) {\n\t\t\t\ttarget.classList.add( classToBubble );\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttarget.classList.remove( classToBubble );\n\t\t\t}\n\t\t}, this );\n\n\t}\n\n\t/**\n\t * Updates the background elements to reflect the current\n\t * slide.\n\t *\n\t * @param {boolean} includeAll If true, the backgrounds of\n\t * all vertical slides (not just the present) will be updated.\n\t */\n\tupdate( includeAll = false ) {\n\n\t\tlet currentSlide = this.Reveal.getCurrentSlide();\n\t\tlet indices = this.Reveal.getIndices();\n\n\t\tlet currentBackground = null;\n\n\t\t// Reverse past/future classes when in RTL mode\n\t\tlet horizontalPast = this.Reveal.getConfig().rtl ? 'future' : 'past',\n\t\t\thorizontalFuture = this.Reveal.getConfig().rtl ? 'past' : 'future';\n\n\t\t// Update the classes of all backgrounds to match the\n\t\t// states of their slides (past/present/future)\n\t\tArray.from( this.element.childNodes ).forEach( ( backgroundh, h ) => {\n\n\t\t\tbackgroundh.classList.remove( 'past', 'present', 'future' );\n\n\t\t\tif( h < indices.h ) {\n\t\t\t\tbackgroundh.classList.add( horizontalPast );\n\t\t\t}\n\t\t\telse if ( h > indices.h ) {\n\t\t\t\tbackgroundh.classList.add( horizontalFuture );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tbackgroundh.classList.add( 'present' );\n\n\t\t\t\t// Store a reference to the current background element\n\t\t\t\tcurrentBackground = backgroundh;\n\t\t\t}\n\n\t\t\tif( includeAll || h === indices.h ) {\n\t\t\t\tqueryAll( backgroundh, '.slide-background' ).forEach( ( backgroundv, v ) => {\n\n\t\t\t\t\tbackgroundv.classList.remove( 'past', 'present', 'future' );\n\n\t\t\t\t\tconst indexv = typeof indices.v === 'number' ? indices.v : 0;\n\n\t\t\t\t\tif( v < indexv ) {\n\t\t\t\t\t\tbackgroundv.classList.add( 'past' );\n\t\t\t\t\t}\n\t\t\t\t\telse if ( v > indexv ) {\n\t\t\t\t\t\tbackgroundv.classList.add( 'future' );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tbackgroundv.classList.add( 'present' );\n\n\t\t\t\t\t\t// Only if this is the present horizontal and vertical slide\n\t\t\t\t\t\tif( h === indices.h ) currentBackground = backgroundv;\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\t\t\t}\n\n\t\t} );\n\n\t\t// Stop content inside of previous backgrounds\n\t\tif( this.previousBackground ) {\n\n\t\t\tthis.Reveal.slideContent.stopEmbeddedContent( this.previousBackground, { unloadIframes: !this.Reveal.slideContent.shouldPreload( this.previousBackground ) } );\n\n\t\t}\n\n\t\t// Start content in the current background\n\t\tif( currentBackground ) {\n\n\t\t\tthis.Reveal.slideContent.startEmbeddedContent( currentBackground );\n\n\t\t\tlet currentBackgroundContent = currentBackground.querySelector( '.slide-background-content' );\n\t\t\tif( currentBackgroundContent ) {\n\n\t\t\t\tlet backgroundImageURL = currentBackgroundContent.style.backgroundImage || '';\n\n\t\t\t\t// Restart GIFs (doesn't work in Firefox)\n\t\t\t\tif( /\\.gif/i.test( backgroundImageURL ) ) {\n\t\t\t\t\tcurrentBackgroundContent.style.backgroundImage = '';\n\t\t\t\t\twindow.getComputedStyle( currentBackgroundContent ).opacity;\n\t\t\t\t\tcurrentBackgroundContent.style.backgroundImage = backgroundImageURL;\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Don't transition between identical backgrounds. This\n\t\t\t// prevents unwanted flicker.\n\t\t\tlet previousBackgroundHash = this.previousBackground ? this.previousBackground.getAttribute( 'data-background-hash' ) : null;\n\t\t\tlet currentBackgroundHash = currentBackground.getAttribute( 'data-background-hash' );\n\t\t\tif( currentBackgroundHash && currentBackgroundHash === previousBackgroundHash && currentBackground !== this.previousBackground ) {\n\t\t\t\tthis.element.classList.add( 'no-transition' );\n\t\t\t}\n\n\t\t\tthis.previousBackground = currentBackground;\n\n\t\t}\n\n\t\t// If there's a background brightness flag for this slide,\n\t\t// bubble it to the .reveal container\n\t\tif( currentSlide ) {\n\t\t\tthis.bubbleSlideContrastClassToElement( currentSlide, this.Reveal.getRevealElement() );\n\t\t}\n\n\t\t// Allow the first background to apply without transition\n\t\tsetTimeout( () => {\n\t\t\tthis.element.classList.remove( 'no-transition' );\n\t\t}, 1 );\n\n\t}\n\n\t/**\n\t * Updates the position of the parallax background based\n\t * on the current slide index.\n\t */\n\tupdateParallax() {\n\n\t\tlet indices = this.Reveal.getIndices();\n\n\t\tif( this.Reveal.getConfig().parallaxBackgroundImage ) {\n\n\t\t\tlet horizontalSlides = this.Reveal.getHorizontalSlides(),\n\t\t\t\tverticalSlides = this.Reveal.getVerticalSlides();\n\n\t\t\tlet backgroundSize = this.element.style.backgroundSize.split( ' ' ),\n\t\t\t\tbackgroundWidth, backgroundHeight;\n\n\t\t\tif( backgroundSize.length === 1 ) {\n\t\t\t\tbackgroundWidth = backgroundHeight = parseInt( backgroundSize[0], 10 );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tbackgroundWidth = parseInt( backgroundSize[0], 10 );\n\t\t\t\tbackgroundHeight = parseInt( backgroundSize[1], 10 );\n\t\t\t}\n\n\t\t\tlet slideWidth = this.element.offsetWidth,\n\t\t\t\thorizontalSlideCount = horizontalSlides.length,\n\t\t\t\thorizontalOffsetMultiplier,\n\t\t\t\thorizontalOffset;\n\n\t\t\tif( typeof this.Reveal.getConfig().parallaxBackgroundHorizontal === 'number' ) {\n\t\t\t\thorizontalOffsetMultiplier = this.Reveal.getConfig().parallaxBackgroundHorizontal;\n\t\t\t}\n\t\t\telse {\n\t\t\t\thorizontalOffsetMultiplier = horizontalSlideCount > 1 ? ( backgroundWidth - slideWidth ) / ( horizontalSlideCount-1 ) : 0;\n\t\t\t}\n\n\t\t\thorizontalOffset = horizontalOffsetMultiplier * indices.h * -1;\n\n\t\t\tlet slideHeight = this.element.offsetHeight,\n\t\t\t\tverticalSlideCount = verticalSlides.length,\n\t\t\t\tverticalOffsetMultiplier,\n\t\t\t\tverticalOffset;\n\n\t\t\tif( typeof this.Reveal.getConfig().parallaxBackgroundVertical === 'number' ) {\n\t\t\t\tverticalOffsetMultiplier = this.Reveal.getConfig().parallaxBackgroundVertical;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tverticalOffsetMultiplier = ( backgroundHeight - slideHeight ) / ( verticalSlideCount-1 );\n\t\t\t}\n\n\t\t\tverticalOffset = verticalSlideCount > 0 ?  verticalOffsetMultiplier * indices.v : 0;\n\n\t\t\tthis.element.style.backgroundPosition = horizontalOffset + 'px ' + -verticalOffset + 'px';\n\n\t\t}\n\n\t}\n\n\tdestroy() {\n\n\t\tthis.element.remove();\n\n\t}\n\n}\n","import { queryAll, extend, createStyleSheet, matches, closest } from '../utils/util.js'\nimport { FRAGMENT_STYLE_REGEX } from '../utils/constants.js'\n\n// Counter used to generate unique IDs for auto-animated elements\nlet autoAnimateCounter = 0;\n\n/**\n * Automatically animates matching elements across\n * slides with the [data-auto-animate] attribute.\n */\nexport default class AutoAnimate {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t}\n\n\t/**\n\t * Runs an auto-animation between the given slides.\n\t *\n\t * @param  {HTMLElement} fromSlide\n\t * @param  {HTMLElement} toSlide\n\t */\n\trun( fromSlide, toSlide ) {\n\n\t\t// Clean up after prior animations\n\t\tthis.reset();\n\n\t\tlet allSlides = this.Reveal.getSlides();\n\t\tlet toSlideIndex = allSlides.indexOf( toSlide );\n\t\tlet fromSlideIndex = allSlides.indexOf( fromSlide );\n\n\t\t// Ensure that both slides are auto-animate targets with the same data-auto-animate-id value\n\t\t// (including null if absent on both) and that data-auto-animate-restart isn't set on the\n\t\t// physically latter slide (independent of slide direction)\n\t\tif( fromSlide.hasAttribute( 'data-auto-animate' ) && toSlide.hasAttribute( 'data-auto-animate' )\n\t\t\t\t&& fromSlide.getAttribute( 'data-auto-animate-id' ) === toSlide.getAttribute( 'data-auto-animate-id' ) \n\t\t\t\t&& !( toSlideIndex > fromSlideIndex ? toSlide : fromSlide ).hasAttribute( 'data-auto-animate-restart' ) ) {\n\n\t\t\t// Create a new auto-animate sheet\n\t\t\tthis.autoAnimateStyleSheet = this.autoAnimateStyleSheet || createStyleSheet();\n\n\t\t\tlet animationOptions = this.getAutoAnimateOptions( toSlide );\n\n\t\t\t// Set our starting state\n\t\t\tfromSlide.dataset.autoAnimate = 'pending';\n\t\t\ttoSlide.dataset.autoAnimate = 'pending';\n\n\t\t\t// Flag the navigation direction, needed for fragment buildup\n\t\t\tanimationOptions.slideDirection = toSlideIndex > fromSlideIndex ? 'forward' : 'backward';\n\n\t\t\t// If the from-slide is hidden because it has moved outside\n\t\t\t// the view distance, we need to temporarily show it while\n\t\t\t// measuring\n\t\t\tlet fromSlideIsHidden = fromSlide.style.display === 'none';\n\t\t\tif( fromSlideIsHidden ) fromSlide.style.display = this.Reveal.getConfig().display;\n\n\t\t\t// Inject our auto-animate styles for this transition\n\t\t\tlet css = this.getAutoAnimatableElements( fromSlide, toSlide ).map( elements => {\n\t\t\t\treturn this.autoAnimateElements( elements.from, elements.to, elements.options || {}, animationOptions, autoAnimateCounter++ );\n\t\t\t} );\n\n\t\t\tif( fromSlideIsHidden ) fromSlide.style.display = 'none';\n\n\t\t\t// Animate unmatched elements, if enabled\n\t\t\tif( toSlide.dataset.autoAnimateUnmatched !== 'false' && this.Reveal.getConfig().autoAnimateUnmatched === true ) {\n\n\t\t\t\t// Our default timings for unmatched elements\n\t\t\t\tlet defaultUnmatchedDuration = animationOptions.duration * 0.8,\n\t\t\t\t\tdefaultUnmatchedDelay = animationOptions.duration * 0.2;\n\n\t\t\t\tthis.getUnmatchedAutoAnimateElements( toSlide ).forEach( unmatchedElement => {\n\n\t\t\t\t\tlet unmatchedOptions = this.getAutoAnimateOptions( unmatchedElement, animationOptions );\n\t\t\t\t\tlet id = 'unmatched';\n\n\t\t\t\t\t// If there is a duration or delay set specifically for this\n\t\t\t\t\t// element our unmatched elements should adhere to those\n\t\t\t\t\tif( unmatchedOptions.duration !== animationOptions.duration || unmatchedOptions.delay !== animationOptions.delay ) {\n\t\t\t\t\t\tid = 'unmatched-' + autoAnimateCounter++;\n\t\t\t\t\t\tcss.push( `[data-auto-animate=\"running\"] [data-auto-animate-target=\"${id}\"] { transition: opacity ${unmatchedOptions.duration}s ease ${unmatchedOptions.delay}s; }` );\n\t\t\t\t\t}\n\n\t\t\t\t\tunmatchedElement.dataset.autoAnimateTarget = id;\n\n\t\t\t\t}, this );\n\n\t\t\t\t// Our default transition for unmatched elements\n\t\t\t\tcss.push( `[data-auto-animate=\"running\"] [data-auto-animate-target=\"unmatched\"] { transition: opacity ${defaultUnmatchedDuration}s ease ${defaultUnmatchedDelay}s; }` );\n\n\t\t\t}\n\n\t\t\t// Setting the whole chunk of CSS at once is the most\n\t\t\t// efficient way to do this. Using sheet.insertRule\n\t\t\t// is multiple factors slower.\n\t\t\tthis.autoAnimateStyleSheet.innerHTML = css.join( '' );\n\n\t\t\t// Start the animation next cycle\n\t\t\trequestAnimationFrame( () => {\n\t\t\t\tif( this.autoAnimateStyleSheet ) {\n\t\t\t\t\t// This forces our newly injected styles to be applied in Firefox\n\t\t\t\t\tgetComputedStyle( this.autoAnimateStyleSheet ).fontWeight;\n\n\t\t\t\t\ttoSlide.dataset.autoAnimate = 'running';\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\tthis.Reveal.dispatchEvent({\n\t\t\t\ttype: 'autoanimate',\n\t\t\t\tdata: {\n\t\t\t\t\tfromSlide,\n\t\t\t\t\ttoSlide,\n\t\t\t\t\tsheet: this.autoAnimateStyleSheet\n\t\t\t\t}\n\t\t\t});\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Rolls back all changes that we've made to the DOM so\n\t * that as part of animating.\n\t */\n\treset() {\n\n\t\t// Reset slides\n\t\tqueryAll( this.Reveal.getRevealElement(), '[data-auto-animate]:not([data-auto-animate=\"\"])' ).forEach( element => {\n\t\t\telement.dataset.autoAnimate = '';\n\t\t} );\n\n\t\t// Reset elements\n\t\tqueryAll( this.Reveal.getRevealElement(), '[data-auto-animate-target]' ).forEach( element => {\n\t\t\tdelete element.dataset.autoAnimateTarget;\n\t\t} );\n\n\t\t// Remove the animation sheet\n\t\tif( this.autoAnimateStyleSheet && this.autoAnimateStyleSheet.parentNode ) {\n\t\t\tthis.autoAnimateStyleSheet.parentNode.removeChild( this.autoAnimateStyleSheet );\n\t\t\tthis.autoAnimateStyleSheet = null;\n\t\t}\n\n\t}\n\n\t/**\n\t * Creates a FLIP animation where the `to` element starts out\n\t * in the `from` element position and animates to its original\n\t * state.\n\t *\n\t * @param {HTMLElement} from\n\t * @param {HTMLElement} to\n\t * @param {Object} elementOptions Options for this element pair\n\t * @param {Object} animationOptions Options set at the slide level\n\t * @param {String} id Unique ID that we can use to identify this\n\t * auto-animate element in the DOM\n\t */\n\tautoAnimateElements( from, to, elementOptions, animationOptions, id ) {\n\n\t\t// 'from' elements are given a data-auto-animate-target with no value,\n\t\t// 'to' elements are are given a data-auto-animate-target with an ID\n\t\tfrom.dataset.autoAnimateTarget = '';\n\t\tto.dataset.autoAnimateTarget = id;\n\n\t\t// Each element may override any of the auto-animate options\n\t\t// like transition easing, duration and delay via data-attributes\n\t\tlet options = this.getAutoAnimateOptions( to, animationOptions );\n\n\t\t// If we're using a custom element matcher the element options\n\t\t// may contain additional transition overrides\n\t\tif( typeof elementOptions.delay !== 'undefined' ) options.delay = elementOptions.delay;\n\t\tif( typeof elementOptions.duration !== 'undefined' ) options.duration = elementOptions.duration;\n\t\tif( typeof elementOptions.easing !== 'undefined' ) options.easing = elementOptions.easing;\n\n\t\tlet fromProps = this.getAutoAnimatableProperties( 'from', from, elementOptions ),\n\t\t\ttoProps = this.getAutoAnimatableProperties( 'to', to, elementOptions );\n\n\t\t// Maintain fragment visibility for matching elements when\n\t\t// we're navigating forwards, this way the viewer won't need\n\t\t// to step through the same fragments twice\n\t\tif( to.classList.contains( 'fragment' ) ) {\n\n\t\t\t// Don't auto-animate the opacity of fragments to avoid\n\t\t\t// conflicts with fragment animations\n\t\t\tdelete toProps.styles['opacity'];\n\n\t\t\tif( from.classList.contains( 'fragment' ) ) {\n\n\t\t\t\tlet fromFragmentStyle = ( from.className.match( FRAGMENT_STYLE_REGEX ) || [''] )[0];\n\t\t\t\tlet toFragmentStyle = ( to.className.match( FRAGMENT_STYLE_REGEX ) || [''] )[0];\n\n\t\t\t\t// Only skip the fragment if the fragment animation style\n\t\t\t\t// remains unchanged\n\t\t\t\tif( fromFragmentStyle === toFragmentStyle && animationOptions.slideDirection === 'forward' ) {\n\t\t\t\t\tto.classList.add( 'visible', 'disabled' );\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// If translation and/or scaling are enabled, css transform\n\t\t// the 'to' element so that it matches the position and size\n\t\t// of the 'from' element\n\t\tif( elementOptions.translate !== false || elementOptions.scale !== false ) {\n\n\t\t\tlet presentationScale = this.Reveal.getScale();\n\n\t\t\tlet delta = {\n\t\t\t\tx: ( fromProps.x - toProps.x ) / presentationScale,\n\t\t\t\ty: ( fromProps.y - toProps.y ) / presentationScale,\n\t\t\t\tscaleX: fromProps.width / toProps.width,\n\t\t\t\tscaleY: fromProps.height / toProps.height\n\t\t\t};\n\n\t\t\t// Limit decimal points to avoid 0.0001px blur and stutter\n\t\t\tdelta.x = Math.round( delta.x * 1000 ) / 1000;\n\t\t\tdelta.y = Math.round( delta.y * 1000 ) / 1000;\n\t\t\tdelta.scaleX = Math.round( delta.scaleX * 1000 ) / 1000;\n\t\t\tdelta.scaleX = Math.round( delta.scaleX * 1000 ) / 1000;\n\n\t\t\tlet translate = elementOptions.translate !== false && ( delta.x !== 0 || delta.y !== 0 ),\n\t\t\t\tscale = elementOptions.scale !== false && ( delta.scaleX !== 0 || delta.scaleY !== 0 );\n\n\t\t\t// No need to transform if nothing's changed\n\t\t\tif( translate || scale ) {\n\n\t\t\t\tlet transform = [];\n\n\t\t\t\tif( translate ) transform.push( `translate(${delta.x}px, ${delta.y}px)` );\n\t\t\t\tif( scale ) transform.push( `scale(${delta.scaleX}, ${delta.scaleY})` );\n\n\t\t\t\tfromProps.styles['transform'] = transform.join( ' ' );\n\t\t\t\tfromProps.styles['transform-origin'] = 'top left';\n\n\t\t\t\ttoProps.styles['transform'] = 'none';\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Delete all unchanged 'to' styles\n\t\tfor( let propertyName in toProps.styles ) {\n\t\t\tconst toValue = toProps.styles[propertyName];\n\t\t\tconst fromValue = fromProps.styles[propertyName];\n\n\t\t\tif( toValue === fromValue ) {\n\t\t\t\tdelete toProps.styles[propertyName];\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// If these property values were set via a custom matcher providing\n\t\t\t\t// an explicit 'from' and/or 'to' value, we always inject those values.\n\t\t\t\tif( toValue.explicitValue === true ) {\n\t\t\t\t\ttoProps.styles[propertyName] = toValue.value;\n\t\t\t\t}\n\n\t\t\t\tif( fromValue.explicitValue === true ) {\n\t\t\t\t\tfromProps.styles[propertyName] = fromValue.value;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tlet css = '';\n\n\t\tlet toStyleProperties = Object.keys( toProps.styles );\n\n\t\t// Only create animate this element IF at least one style\n\t\t// property has changed\n\t\tif( toStyleProperties.length > 0 ) {\n\n\t\t\t// Instantly move to the 'from' state\n\t\t\tfromProps.styles['transition'] = 'none';\n\n\t\t\t// Animate towards the 'to' state\n\t\t\ttoProps.styles['transition'] = `all ${options.duration}s ${options.easing} ${options.delay}s`;\n\t\t\ttoProps.styles['transition-property'] = toStyleProperties.join( ', ' );\n\t\t\ttoProps.styles['will-change'] = toStyleProperties.join( ', ' );\n\n\t\t\t// Build up our custom CSS. We need to override inline styles\n\t\t\t// so we need to make our styles vErY IMPORTANT!1!!\n\t\t\tlet fromCSS = Object.keys( fromProps.styles ).map( propertyName => {\n\t\t\t\treturn propertyName + ': ' + fromProps.styles[propertyName] + ' !important;';\n\t\t\t} ).join( '' );\n\n\t\t\tlet toCSS = Object.keys( toProps.styles ).map( propertyName => {\n\t\t\t\treturn propertyName + ': ' + toProps.styles[propertyName] + ' !important;';\n\t\t\t} ).join( '' );\n\n\t\t\tcss = \t'[data-auto-animate-target=\"'+ id +'\"] {'+ fromCSS +'}' +\n\t\t\t\t\t'[data-auto-animate=\"running\"] [data-auto-animate-target=\"'+ id +'\"] {'+ toCSS +'}';\n\n\t\t}\n\n\t\treturn css;\n\n\t}\n\n\t/**\n\t * Returns the auto-animate options for the given element.\n\t *\n\t * @param {HTMLElement} element Element to pick up options\n\t * from, either a slide or an animation target\n\t * @param {Object} [inheritedOptions] Optional set of existing\n\t * options\n\t */\n\tgetAutoAnimateOptions( element, inheritedOptions ) {\n\n\t\tlet options = {\n\t\t\teasing: this.Reveal.getConfig().autoAnimateEasing,\n\t\t\tduration: this.Reveal.getConfig().autoAnimateDuration,\n\t\t\tdelay: 0\n\t\t};\n\n\t\toptions = extend( options, inheritedOptions );\n\n\t\t// Inherit options from parent elements\n\t\tif( element.parentNode ) {\n\t\t\tlet autoAnimatedParent = closest( element.parentNode, '[data-auto-animate-target]' );\n\t\t\tif( autoAnimatedParent ) {\n\t\t\t\toptions = this.getAutoAnimateOptions( autoAnimatedParent, options );\n\t\t\t}\n\t\t}\n\n\t\tif( element.dataset.autoAnimateEasing ) {\n\t\t\toptions.easing = element.dataset.autoAnimateEasing;\n\t\t}\n\n\t\tif( element.dataset.autoAnimateDuration ) {\n\t\t\toptions.duration = parseFloat( element.dataset.autoAnimateDuration );\n\t\t}\n\n\t\tif( element.dataset.autoAnimateDelay ) {\n\t\t\toptions.delay = parseFloat( element.dataset.autoAnimateDelay );\n\t\t}\n\n\t\treturn options;\n\n\t}\n\n\t/**\n\t * Returns an object containing all of the properties\n\t * that can be auto-animated for the given element and\n\t * their current computed values.\n\t *\n\t * @param {String} direction 'from' or 'to'\n\t */\n\tgetAutoAnimatableProperties( direction, element, elementOptions ) {\n\n\t\tlet config = this.Reveal.getConfig();\n\n\t\tlet properties = { styles: [] };\n\n\t\t// Position and size\n\t\tif( elementOptions.translate !== false || elementOptions.scale !== false ) {\n\t\t\tlet bounds;\n\n\t\t\t// Custom auto-animate may optionally return a custom tailored\n\t\t\t// measurement function\n\t\t\tif( typeof elementOptions.measure === 'function' ) {\n\t\t\t\tbounds = elementOptions.measure( element );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif( config.center ) {\n\t\t\t\t\t// More precise, but breaks when used in combination\n\t\t\t\t\t// with zoom for scaling the deck ¯\\_(ツ)_/¯\n\t\t\t\t\tbounds = element.getBoundingClientRect();\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlet scale = this.Reveal.getScale();\n\t\t\t\t\tbounds = {\n\t\t\t\t\t\tx: element.offsetLeft * scale,\n\t\t\t\t\t\ty: element.offsetTop * scale,\n\t\t\t\t\t\twidth: element.offsetWidth * scale,\n\t\t\t\t\t\theight: element.offsetHeight * scale\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tproperties.x = bounds.x;\n\t\t\tproperties.y = bounds.y;\n\t\t\tproperties.width = bounds.width;\n\t\t\tproperties.height = bounds.height;\n\t\t}\n\n\t\tconst computedStyles = getComputedStyle( element );\n\n\t\t// CSS styles\n\t\t( elementOptions.styles || config.autoAnimateStyles ).forEach( style => {\n\t\t\tlet value;\n\n\t\t\t// `style` is either the property name directly, or an object\n\t\t\t// definition of a style property\n\t\t\tif( typeof style === 'string' ) style = { property: style };\n\n\t\t\tif( typeof style.from !== 'undefined' && direction === 'from' ) {\n\t\t\t\tvalue = { value: style.from, explicitValue: true };\n\t\t\t}\n\t\t\telse if( typeof style.to !== 'undefined' && direction === 'to' ) {\n\t\t\t\tvalue = { value: style.to, explicitValue: true };\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Use a unitless value for line-height so that it inherits properly\n\t\t\t\tif( style.property === 'line-height' ) {\n\t\t\t\t\tvalue = parseFloat( computedStyles['line-height'] ) / parseFloat( computedStyles['font-size'] );\n\t\t\t\t}\n\n\t\t\t\tif( isNaN(value) ) {\n\t\t\t\t\tvalue = computedStyles[style.property];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif( value !== '' ) {\n\t\t\t\tproperties.styles[style.property] = value;\n\t\t\t}\n\t\t} );\n\n\t\treturn properties;\n\n\t}\n\n\t/**\n\t * Get a list of all element pairs that we can animate\n\t * between the given slides.\n\t *\n\t * @param {HTMLElement} fromSlide\n\t * @param {HTMLElement} toSlide\n\t *\n\t * @return {Array} Each value is an array where [0] is\n\t * the element we're animating from and [1] is the\n\t * element we're animating to\n\t */\n\tgetAutoAnimatableElements( fromSlide, toSlide ) {\n\n\t\tlet matcher = typeof this.Reveal.getConfig().autoAnimateMatcher === 'function' ? this.Reveal.getConfig().autoAnimateMatcher : this.getAutoAnimatePairs;\n\n\t\tlet pairs = matcher.call( this, fromSlide, toSlide );\n\n\t\tlet reserved = [];\n\n\t\t// Remove duplicate pairs\n\t\treturn pairs.filter( ( pair, index ) => {\n\t\t\tif( reserved.indexOf( pair.to ) === -1 ) {\n\t\t\t\treserved.push( pair.to );\n\t\t\t\treturn true;\n\t\t\t}\n\t\t} );\n\n\t}\n\n\t/**\n\t * Identifies matching elements between slides.\n\t *\n\t * You can specify a custom matcher function by using\n\t * the `autoAnimateMatcher` config option.\n\t */\n\tgetAutoAnimatePairs( fromSlide, toSlide ) {\n\n\t\tlet pairs = [];\n\n\t\tconst codeNodes = 'pre';\n\t\tconst textNodes = 'h1, h2, h3, h4, h5, h6, p, li';\n\t\tconst mediaNodes = 'img, video, iframe';\n\n\t\t// Explicit matches via data-id\n\t\tthis.findAutoAnimateMatches( pairs, fromSlide, toSlide, '[data-id]', node => {\n\t\t\treturn node.nodeName + ':::' + node.getAttribute( 'data-id' );\n\t\t} );\n\n\t\t// Text\n\t\tthis.findAutoAnimateMatches( pairs, fromSlide, toSlide, textNodes, node => {\n\t\t\treturn node.nodeName + ':::' + node.innerText;\n\t\t} );\n\n\t\t// Media\n\t\tthis.findAutoAnimateMatches( pairs, fromSlide, toSlide, mediaNodes, node => {\n\t\t\treturn node.nodeName + ':::' + ( node.getAttribute( 'src' ) || node.getAttribute( 'data-src' ) );\n\t\t} );\n\n\t\t// Code\n\t\tthis.findAutoAnimateMatches( pairs, fromSlide, toSlide, codeNodes, node => {\n\t\t\treturn node.nodeName + ':::' + node.innerText;\n\t\t} );\n\n\t\tpairs.forEach( pair => {\n\t\t\t// Disable scale transformations on text nodes, we transition\n\t\t\t// each individual text property instead\n\t\t\tif( matches( pair.from, textNodes ) ) {\n\t\t\t\tpair.options = { scale: false };\n\t\t\t}\n\t\t\t// Animate individual lines of code\n\t\t\telse if( matches( pair.from, codeNodes ) ) {\n\n\t\t\t\t// Transition the code block's width and height instead of scaling\n\t\t\t\t// to prevent its content from being squished\n\t\t\t\tpair.options = { scale: false, styles: [ 'width', 'height' ] };\n\n\t\t\t\t// Lines of code\n\t\t\t\tthis.findAutoAnimateMatches( pairs, pair.from, pair.to, '.hljs .hljs-ln-code', node => {\n\t\t\t\t\treturn node.textContent;\n\t\t\t\t}, {\n\t\t\t\t\tscale: false,\n\t\t\t\t\tstyles: [],\n\t\t\t\t\tmeasure: this.getLocalBoundingBox.bind( this )\n\t\t\t\t} );\n\n\t\t\t\t// Line numbers\n\t\t\t\tthis.findAutoAnimateMatches( pairs, pair.from, pair.to, '.hljs .hljs-ln-numbers[data-line-number]', node => {\n\t\t\t\t\treturn node.getAttribute( 'data-line-number' );\n\t\t\t\t}, {\n\t\t\t\t\tscale: false,\n\t\t\t\t\tstyles: [ 'width' ],\n\t\t\t\t\tmeasure: this.getLocalBoundingBox.bind( this )\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t}, this );\n\n\t\treturn pairs;\n\n\t}\n\n\t/**\n\t * Helper method which returns a bounding box based on\n\t * the given elements offset coordinates.\n\t *\n\t * @param {HTMLElement} element\n\t * @return {Object} x, y, width, height\n\t */\n\tgetLocalBoundingBox( element ) {\n\n\t\tconst presentationScale = this.Reveal.getScale();\n\n\t\treturn {\n\t\t\tx: Math.round( ( element.offsetLeft * presentationScale ) * 100 ) / 100,\n\t\t\ty: Math.round( ( element.offsetTop * presentationScale ) * 100 ) / 100,\n\t\t\twidth: Math.round( ( element.offsetWidth * presentationScale ) * 100 ) / 100,\n\t\t\theight: Math.round( ( element.offsetHeight * presentationScale ) * 100 ) / 100\n\t\t};\n\n\t}\n\n\t/**\n\t * Finds matching elements between two slides.\n\t *\n\t * @param {Array} pairs            \tList of pairs to push matches to\n\t * @param {HTMLElement} fromScope   Scope within the from element exists\n\t * @param {HTMLElement} toScope     Scope within the to element exists\n\t * @param {String} selector         CSS selector of the element to match\n\t * @param {Function} serializer     A function that accepts an element and returns\n\t *                                  a stringified ID based on its contents\n\t * @param {Object} animationOptions Optional config options for this pair\n\t */\n\tfindAutoAnimateMatches( pairs, fromScope, toScope, selector, serializer, animationOptions ) {\n\n\t\tlet fromMatches = {};\n\t\tlet toMatches = {};\n\n\t\t[].slice.call( fromScope.querySelectorAll( selector ) ).forEach( ( element, i ) => {\n\t\t\tconst key = serializer( element );\n\t\t\tif( typeof key === 'string' && key.length ) {\n\t\t\t\tfromMatches[key] = fromMatches[key] || [];\n\t\t\t\tfromMatches[key].push( element );\n\t\t\t}\n\t\t} );\n\n\t\t[].slice.call( toScope.querySelectorAll( selector ) ).forEach( ( element, i ) => {\n\t\t\tconst key = serializer( element );\n\t\t\ttoMatches[key] = toMatches[key] || [];\n\t\t\ttoMatches[key].push( element );\n\n\t\t\tlet fromElement;\n\n\t\t\t// Retrieve the 'from' element\n\t\t\tif( fromMatches[key] ) {\n\t\t\t\tconst primaryIndex = toMatches[key].length - 1;\n\t\t\t\tconst secondaryIndex = fromMatches[key].length - 1;\n\n\t\t\t\t// If there are multiple identical from elements, retrieve\n\t\t\t\t// the one at the same index as our to-element.\n\t\t\t\tif( fromMatches[key][ primaryIndex ] ) {\n\t\t\t\t\tfromElement = fromMatches[key][ primaryIndex ];\n\t\t\t\t\tfromMatches[key][ primaryIndex ] = null;\n\t\t\t\t}\n\t\t\t\t// If there are no matching from-elements at the same index,\n\t\t\t\t// use the last one.\n\t\t\t\telse if( fromMatches[key][ secondaryIndex ] ) {\n\t\t\t\t\tfromElement = fromMatches[key][ secondaryIndex ];\n\t\t\t\t\tfromMatches[key][ secondaryIndex ] = null;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// If we've got a matching pair, push it to the list of pairs\n\t\t\tif( fromElement ) {\n\t\t\t\tpairs.push({\n\t\t\t\t\tfrom: fromElement,\n\t\t\t\t\tto: element,\n\t\t\t\t\toptions: animationOptions\n\t\t\t\t});\n\t\t\t}\n\t\t} );\n\n\t}\n\n\t/**\n\t * Returns a all elements within the given scope that should\n\t * be considered unmatched in an auto-animate transition. If\n\t * fading of unmatched elements is turned on, these elements\n\t * will fade when going between auto-animate slides.\n\t *\n\t * Note that parents of auto-animate targets are NOT considered\n\t * unmatched since fading them would break the auto-animation.\n\t *\n\t * @param {HTMLElement} rootElement\n\t * @return {Array}\n\t */\n\tgetUnmatchedAutoAnimateElements( rootElement ) {\n\n\t\treturn [].slice.call( rootElement.children ).reduce( ( result, element ) => {\n\n\t\t\tconst containsAnimatedElements = element.querySelector( '[data-auto-animate-target]' );\n\n\t\t\t// The element is unmatched if\n\t\t\t// - It is not an auto-animate target\n\t\t\t// - It does not contain any auto-animate targets\n\t\t\tif( !element.hasAttribute( 'data-auto-animate-target' ) && !containsAnimatedElements ) {\n\t\t\t\tresult.push( element );\n\t\t\t}\n\n\t\t\tif( element.querySelector( '[data-auto-animate-target]' ) ) {\n\t\t\t\tresult = result.concat( this.getUnmatchedAutoAnimateElements( element ) );\n\t\t\t}\n\n\t\t\treturn result;\n\n\t\t}, [] );\n\n\t}\n\n}\n","import { HORIZONTAL_SLIDES_SELECTOR, HORIZONTAL_BACKGROUNDS_SELECTOR } from '../utils/constants.js'\nimport { queryAll } from '../utils/util.js'\n\nconst HIDE_SCROLLBAR_TIMEOUT = 500;\nconst MAX_PROGRESS_SPACING = 4;\nconst MIN_PROGRESS_SEGMENT_HEIGHT = 6;\nconst MIN_PLAYHEAD_HEIGHT = 8;\n\n/**\n * The scroll view lets you read a reveal.js presentation\n * as a linear scrollable page.\n */\nexport default class ScrollView {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\tthis.active = false;\n\t\tthis.activatedCallbacks = [];\n\n\t\tthis.onScroll = this.onScroll.bind( this );\n\n\t}\n\n\t/**\n\t * Activates the scroll view. This rearranges the presentation DOM\n\t * by—among other things—wrapping each slide in a page element.\n\t */\n\tactivate() {\n\n\t\tif( this.active ) return;\n\n\t\tconst stateBeforeActivation = this.Reveal.getState();\n\n\t\tthis.active = true;\n\n\t\t// Store the full presentation HTML so that we can restore it\n\t\t// when/if the scroll view is deactivated\n\t\tthis.slideHTMLBeforeActivation = this.Reveal.getSlidesElement().innerHTML;\n\n\t\tconst horizontalSlides = queryAll( this.Reveal.getRevealElement(), HORIZONTAL_SLIDES_SELECTOR );\n\t\tconst horizontalBackgrounds = queryAll( this.Reveal.getRevealElement(), HORIZONTAL_BACKGROUNDS_SELECTOR );\n\n\t\tthis.viewportElement.classList.add( 'loading-scroll-mode', 'reveal-scroll' );\n\n\t\tlet presentationBackground;\n\n\t\tconst viewportStyles = window.getComputedStyle( this.viewportElement );\n\t\tif( viewportStyles && viewportStyles.background ) {\n\t\t\tpresentationBackground = viewportStyles.background;\n\t\t}\n\n\t\tconst pageElements = [];\n\t\tconst pageContainer = horizontalSlides[0].parentNode;\n\n\t\tlet previousSlide;\n\n\t\t// Creates a new page element and appends the given slide/bg\n\t\t// to it.\n\t\tconst createPageElement = ( slide, h, v, isVertical ) => {\n\n\t\t\tlet contentContainer;\n\n\t\t\t// If this slide is part of an auto-animation sequence, we\n\t\t\t// group it under the same page element as the previous slide\n\t\t\tif( previousSlide && this.Reveal.shouldAutoAnimateBetween( previousSlide, slide ) ) {\n\t\t\t\tcontentContainer = document.createElement( 'div' );\n\t\t\t\tcontentContainer.className = 'scroll-page-content scroll-auto-animate-page';\n\t\t\t\tcontentContainer.style.display = 'none';\n\t\t\t\tpreviousSlide.closest( '.scroll-page-content' ).parentNode.appendChild( contentContainer );\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Wrap the slide in a page element and hide its overflow\n\t\t\t\t// so that no page ever flows onto another\n\t\t\t\tconst page = document.createElement( 'div' );\n\t\t\t\tpage.className = 'scroll-page';\n\t\t\t\tpageElements.push( page );\n\n\t\t\t\t// This transfers over the background of the vertical stack containing\n\t\t\t\t// the slide if it exists. Otherwise, it uses the presentation-wide\n\t\t\t\t// background.\n\t\t\t\tif( isVertical && horizontalBackgrounds.length > h ) {\n\t\t\t\t\tconst slideBackground = horizontalBackgrounds[h];\n\t\t\t\t\tconst pageBackground = window.getComputedStyle( slideBackground );\n\n\t\t\t\t\tif( pageBackground && pageBackground.background ) {\n\t\t\t\t\t\tpage.style.background = pageBackground.background;\n\t\t\t\t\t}\n\t\t\t\t\telse if( presentationBackground ) {\n\t\t\t\t\t\tpage.style.background = presentationBackground;\n\t\t\t\t\t}\n\t\t\t\t} else if( presentationBackground ) {\n\t\t\t\t\tpage.style.background = presentationBackground;\n\t\t\t\t}\n\n\t\t\t\tconst stickyContainer = document.createElement( 'div' );\n\t\t\t\tstickyContainer.className = 'scroll-page-sticky';\n\t\t\t\tpage.appendChild( stickyContainer );\n\n\t\t\t\tcontentContainer = document.createElement( 'div' );\n\t\t\t\tcontentContainer.className = 'scroll-page-content';\n\t\t\t\tstickyContainer.appendChild( contentContainer );\n\t\t\t}\n\n\t\t\tcontentContainer.appendChild( slide );\n\n\t\t\tslide.classList.remove( 'past', 'future' );\n\t\t\tslide.setAttribute( 'data-index-h', h );\n\t\t\tslide.setAttribute( 'data-index-v', v );\n\n\t\t\tif( slide.slideBackgroundElement ) {\n\t\t\t\tslide.slideBackgroundElement.remove( 'past', 'future' );\n\t\t\t\tcontentContainer.insertBefore( slide.slideBackgroundElement, slide );\n\t\t\t}\n\n\t\t\tpreviousSlide = slide;\n\n\t\t}\n\n\t\t// Slide and slide background layout\n\t\thorizontalSlides.forEach( ( horizontalSlide, h ) => {\n\n\t\t\tif( this.Reveal.isVerticalStack( horizontalSlide ) ) {\n\t\t\t\thorizontalSlide.querySelectorAll( 'section' ).forEach( ( verticalSlide, v ) => {\n\t\t\t\t\tcreatePageElement( verticalSlide, h, v, true );\n\t\t\t\t});\n\t\t\t}\n\t\t\telse {\n\t\t\t\tcreatePageElement( horizontalSlide, h, 0 );\n\t\t\t}\n\n\t\t}, this );\n\n\t\tthis.createProgressBar();\n\n\t\t// Remove leftover stacks\n\t\tqueryAll( this.Reveal.getRevealElement(), '.stack' ).forEach( stack => stack.remove() );\n\n\t\t// Add our newly created pages to the DOM\n\t\tpageElements.forEach( page => pageContainer.appendChild( page ) );\n\n\t\t// Re-run JS-based content layout after the slide is added to page DOM\n\t\tthis.Reveal.slideContent.layout( this.Reveal.getSlidesElement() );\n\n\t\tthis.Reveal.layout();\n\t\tthis.Reveal.setState( stateBeforeActivation );\n\n\t\tthis.activatedCallbacks.forEach( callback => callback() );\n\t\tthis.activatedCallbacks = [];\n\n\t\tthis.restoreScrollPosition();\n\n\t\tthis.viewportElement.classList.remove( 'loading-scroll-mode' );\n\t\tthis.viewportElement.addEventListener( 'scroll', this.onScroll, { passive: true } );\n\n\t}\n\n\t/**\n\t * Deactivates the scroll view and restores the standard slide-based\n\t * presentation.\n\t */\n\tdeactivate() {\n\n\t\tif( !this.active ) return;\n\n\t\tconst stateBeforeDeactivation = this.Reveal.getState();\n\n\t\tthis.active = false;\n\n\t\tthis.viewportElement.removeEventListener( 'scroll', this.onScroll );\n\t\tthis.viewportElement.classList.remove( 'reveal-scroll' );\n\n\t\tthis.removeProgressBar();\n\n\t\tthis.Reveal.getSlidesElement().innerHTML = this.slideHTMLBeforeActivation;\n\t\tthis.Reveal.sync();\n\t\tthis.Reveal.setState( stateBeforeDeactivation );\n\n\t\tthis.slideHTMLBeforeActivation = null;\n\n\t}\n\n\ttoggle( override ) {\n\n\t\tif( typeof override === 'boolean' ) {\n\t\t\toverride ? this.activate() : this.deactivate();\n\t\t}\n\t\telse {\n\t\t\tthis.isActive() ? this.deactivate() : this.activate();\n\t\t}\n\n\t}\n\n\t/**\n\t * Checks if the scroll view is currently active.\n\t */\n\tisActive() {\n\n\t\treturn this.active;\n\n\t}\n\n\t/**\n\t * Renders the progress bar component.\n\t */\n\tcreateProgressBar() {\n\n\t\tthis.progressBar = document.createElement( 'div' );\n\t\tthis.progressBar.className = 'scrollbar';\n\n\t\tthis.progressBarInner = document.createElement( 'div' );\n\t\tthis.progressBarInner.className = 'scrollbar-inner';\n\t\tthis.progressBar.appendChild( this.progressBarInner );\n\n\t\tthis.progressBarPlayhead = document.createElement( 'div' );\n\t\tthis.progressBarPlayhead.className = 'scrollbar-playhead';\n\t\tthis.progressBarInner.appendChild( this.progressBarPlayhead );\n\n\t\tthis.viewportElement.insertBefore( this.progressBar, this.viewportElement.firstChild );\n\n\t\tconst handleDocumentMouseMove\t= ( event ) => {\n\n\t\t\tlet progress = ( event.clientY - this.progressBarInner.getBoundingClientRect().top ) / this.progressBarHeight;\n\t\t\tprogress = Math.max( Math.min( progress, 1 ), 0 );\n\n\t\t\tthis.viewportElement.scrollTop = progress * ( this.viewportElement.scrollHeight - this.viewportElement.offsetHeight );\n\n\t\t};\n\n\t\tconst handleDocumentMouseUp = ( event ) => {\n\n\t\t\tthis.draggingProgressBar = false;\n\t\t\tthis.showProgressBar();\n\n\t\t\tdocument.removeEventListener( 'mousemove', handleDocumentMouseMove );\n\t\t\tdocument.removeEventListener( 'mouseup', handleDocumentMouseUp );\n\n\t\t};\n\n\t\tconst handleMouseDown = ( event ) => {\n\n\t\t\tevent.preventDefault();\n\n\t\t\tthis.draggingProgressBar = true;\n\n\t\t\tdocument.addEventListener( 'mousemove', handleDocumentMouseMove );\n\t\t\tdocument.addEventListener( 'mouseup', handleDocumentMouseUp );\n\n\t\t\thandleDocumentMouseMove( event );\n\n\t\t};\n\n\t\tthis.progressBarInner.addEventListener( 'mousedown', handleMouseDown );\n\n\t}\n\n\tremoveProgressBar() {\n\n\t\tif( this.progressBar ) {\n\t\t\tthis.progressBar.remove();\n\t\t\tthis.progressBar = null;\n\t\t}\n\n\t}\n\n\tlayout() {\n\n\t\tif( this.isActive() ) {\n\t\t\tthis.syncPages();\n\t\t\tthis.syncScrollPosition();\n\t\t}\n\n\t}\n\n\t/**\n\t * Updates our pages to match the latest configuration and\n\t * presentation size.\n\t */\n\tsyncPages() {\n\n\t\tconst config = this.Reveal.getConfig();\n\n\t\tconst slideSize = this.Reveal.getComputedSlideSize( window.innerWidth, window.innerHeight );\n\t\tconst scale = this.Reveal.getScale();\n\t\tconst useCompactLayout = config.scrollLayout === 'compact';\n\n\t\tconst viewportHeight = this.viewportElement.offsetHeight;\n\t\tconst compactHeight = slideSize.height * scale;\n\t\tconst pageHeight = useCompactLayout ? compactHeight : viewportHeight;\n\n\t\t// The height that needs to be scrolled between scroll triggers\n\t\tthis.scrollTriggerHeight = useCompactLayout ? compactHeight : viewportHeight;\n\n\t\tthis.viewportElement.style.setProperty( '--page-height', pageHeight + 'px' );\n\t\tthis.viewportElement.style.scrollSnapType = typeof config.scrollSnap === 'string' ? `y ${config.scrollSnap}` : '';\n\n\t\t// This will hold all scroll triggers used to show/hide slides\n\t\tthis.slideTriggers = [];\n\n\t\tconst pageElements = Array.from( this.Reveal.getRevealElement().querySelectorAll( '.scroll-page' ) );\n\n\t\tthis.pages = pageElements.map( pageElement => {\n\t\t\tconst page = this.createPage({\n\t\t\t\tpageElement,\n\t\t\t\tslideElement: pageElement.querySelector( 'section' ),\n\t\t\t\tstickyElement: pageElement.querySelector( '.scroll-page-sticky' ),\n\t\t\t\tcontentElement: pageElement.querySelector( '.scroll-page-content' ),\n\t\t\t\tbackgroundElement: pageElement.querySelector( '.slide-background' ),\n\t\t\t\tautoAnimateElements: pageElement.querySelectorAll( '.scroll-auto-animate-page' ),\n\t\t\t\tautoAnimatePages: []\n\t\t\t});\n\n\t\t\tpage.pageElement.style.setProperty( '--slide-height', config.center === true ? 'auto' : slideSize.height + 'px' );\n\n\t\t\tthis.slideTriggers.push({\n\t\t\t\tpage: page,\n\t\t\t\tactivate: () => this.activatePage( page ),\n\t\t\t\tdeactivate: () => this.deactivatePage( page )\n\t\t\t});\n\n\t\t\t// Create scroll triggers that show/hide fragments\n\t\t\tthis.createFragmentTriggersForPage( page );\n\n\t\t\t// Create scroll triggers for triggering auto-animate steps\n\t\t\tif( page.autoAnimateElements.length > 0 ) {\n\t\t\t\tthis.createAutoAnimateTriggersForPage( page );\n\t\t\t}\n\n\t\t\tlet totalScrollTriggerCount = Math.max( page.scrollTriggers.length - 1, 0 );\n\n\t\t\t// Each auto-animate step may include its own scroll triggers\n\t\t\t// for fragments, ensure we count those as well\n\t\t\ttotalScrollTriggerCount += page.autoAnimatePages.reduce( ( total, page ) => {\n\t\t\t\treturn total + Math.max( page.scrollTriggers.length - 1, 0 );\n\t\t\t}, page.autoAnimatePages.length );\n\n\t\t\t// Clean up from previous renders\n\t\t\tpage.pageElement.querySelectorAll( '.scroll-snap-point' ).forEach( el => el.remove() );\n\n\t\t\t// Create snap points for all scroll triggers\n\t\t\t// - Can't be absolute in FF\n\t\t\t// - Can't be 0-height in Safari\n\t\t\t// - Can't use snap-align on parent in Safari because then\n\t\t\t//   inner triggers won't work\n\t\t\tfor( let i = 0; i < totalScrollTriggerCount + 1; i++ ) {\n\t\t\t\tconst triggerStick = document.createElement( 'div' );\n\t\t\t\ttriggerStick.className = 'scroll-snap-point';\n\t\t\t\ttriggerStick.style.height = this.scrollTriggerHeight + 'px';\n\t\t\t\ttriggerStick.style.scrollSnapAlign = useCompactLayout ? 'center' : 'start';\n\t\t\t\tpage.pageElement.appendChild( triggerStick );\n\n\t\t\t\tif( i === 0 ) {\n\t\t\t\t\ttriggerStick.style.marginTop = -this.scrollTriggerHeight + 'px';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// In the compact layout, only slides with scroll triggers cover the\n\t\t\t// full viewport height. This helps avoid empty gaps before or after\n\t\t\t// a sticky slide.\n\t\t\tif( useCompactLayout && page.scrollTriggers.length > 0 ) {\n\t\t\t\tpage.pageHeight = viewportHeight;\n\t\t\t\tpage.pageElement.style.setProperty( '--page-height', viewportHeight + 'px' );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tpage.pageHeight = pageHeight;\n\t\t\t\tpage.pageElement.style.removeProperty( '--page-height' );\n\t\t\t}\n\n\t\t\t// Add scroll padding based on how many scroll triggers we have\n\t\t\tpage.scrollPadding = this.scrollTriggerHeight * totalScrollTriggerCount;\n\n\t\t\t// The total height including scrollable space\n\t\t\tpage.totalHeight = page.pageHeight + page.scrollPadding;\n\n\t\t\t// This is used to pad the height of our page in CSS\n\t\t\tpage.pageElement.style.setProperty( '--page-scroll-padding', page.scrollPadding + 'px' );\n\n\t\t\t// If this is a sticky page, stick it to the vertical center\n\t\t\tif( totalScrollTriggerCount > 0 ) {\n\t\t\t\tpage.stickyElement.style.position = 'sticky';\n\t\t\t\tpage.stickyElement.style.top = Math.max( ( viewportHeight - page.pageHeight ) / 2, 0 ) + 'px';\n\t\t\t}\n\t\t\telse {\n\t\t\t\tpage.stickyElement.style.position = 'relative';\n\t\t\t\tpage.pageElement.style.scrollSnapAlign = page.pageHeight < viewportHeight ? 'center' : 'start';\n\t\t\t}\n\n\t\t\treturn page;\n\t\t} );\n\n\t\tthis.setTriggerRanges();\n\n\t\t/*\n\t\tconsole.log(this.slideTriggers.map( t => {\n\t\t\treturn {\n\t\t\t\trange: `${t.range[0].toFixed(2)}-${t.range[1].toFixed(2)}`,\n\t\t\t\ttriggers: t.page.scrollTriggers.map( t => {\n\t\t\t\t\treturn `${t.range[0].toFixed(2)}-${t.range[1].toFixed(2)}`\n\t\t\t\t}).join( ', ' ),\n\t\t\t}\n\t\t}))\n\t\t*/\n\n\t\tthis.viewportElement.setAttribute( 'data-scrollbar', config.scrollProgress );\n\n\t\tif( config.scrollProgress && this.totalScrollTriggerCount > 1 ) {\n\t\t\t// Create the progress bar if it doesn't already exist\n\t\t\tif( !this.progressBar ) this.createProgressBar();\n\n\t\t\tthis.syncProgressBar();\n\t\t}\n\t\telse {\n\t\t\tthis.removeProgressBar();\n\t\t}\n\n\t}\n\n\t/**\n\t * Calculates and sets the scroll range for all of our scroll\n\t * triggers.\n\t */\n\tsetTriggerRanges() {\n\n\t\t// Calculate the total number of scroll triggers\n\t\tthis.totalScrollTriggerCount = this.slideTriggers.reduce( ( total, trigger ) => {\n\t\t\treturn total + Math.max( trigger.page.scrollTriggers.length, 1 );\n\t\t}, 0 );\n\n\t\tlet rangeStart = 0;\n\n\t\t// Calculate the scroll range of each scroll trigger on a scale\n\t\t// of 0-1\n\t\tthis.slideTriggers.forEach( ( trigger, i ) => {\n\t\t\ttrigger.range = [\n\t\t\t\trangeStart,\n\t\t\t\trangeStart + Math.max( trigger.page.scrollTriggers.length, 1 ) / this.totalScrollTriggerCount\n\t\t\t];\n\n\t\t\tconst scrollTriggerSegmentSize = ( trigger.range[1] - trigger.range[0] ) / trigger.page.scrollTriggers.length;\n\t\t\t// Set the range for each inner scroll trigger\n\t\t\ttrigger.page.scrollTriggers.forEach( ( scrollTrigger, i ) => {\n\t\t\t\tscrollTrigger.range = [\n\t\t\t\t\trangeStart + i * scrollTriggerSegmentSize,\n\t\t\t\t\trangeStart + ( i + 1 ) * scrollTriggerSegmentSize\n\t\t\t\t];\n\t\t\t} );\n\n\t\t\trangeStart = trigger.range[1];\n\t\t} );\n\n\t}\n\n\t/**\n\t * Creates one scroll trigger for each fragments in the given page.\n\t *\n\t * @param {*} page\n\t */\n\tcreateFragmentTriggersForPage( page, slideElement ) {\n\n\t\tslideElement = slideElement || page.slideElement;\n\n\t\t// Each fragment 'group' is an array containing one or more\n\t\t// fragments. Multiple fragments that appear at the same time\n\t\t// are part of the same group.\n\t\tconst fragmentGroups = this.Reveal.fragments.sort( slideElement.querySelectorAll( '.fragment' ), true );\n\n\t\t// Create scroll triggers that show/hide fragments\n\t\tif( fragmentGroups.length ) {\n\t\t\tpage.fragments = this.Reveal.fragments.sort( slideElement.querySelectorAll( '.fragment:not(.disabled)' ) );\n\t\t\tpage.scrollTriggers.push(\n\t\t\t\t// Trigger for the initial state with no fragments visible\n\t\t\t\t{\n\t\t\t\t\tactivate: () => {\n\t\t\t\t\t\tthis.Reveal.fragments.update( -1, page.fragments, slideElement );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t);\n\n\t\t\t// Triggers for each fragment group\n\t\t\tfragmentGroups.forEach( ( fragments, i ) => {\n\t\t\t\tpage.scrollTriggers.push({\n\t\t\t\t\tactivate: () => {\n\t\t\t\t\t\tthis.Reveal.fragments.update( i, page.fragments, slideElement );\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} );\n\t\t}\n\n\n\t\treturn page.scrollTriggers.length;\n\n\t}\n\n\t/**\n\t * Creates scroll triggers for the auto-animate steps in the\n\t * given page.\n\t *\n\t * @param {*} page\n\t */\n\tcreateAutoAnimateTriggersForPage( page ) {\n\n\t\tif( page.autoAnimateElements.length > 0 ) {\n\n\t\t\t// Triggers for each subsequent auto-animate slide\n\t\t\tthis.slideTriggers.push( ...Array.from( page.autoAnimateElements ).map( ( autoAnimateElement, i ) => {\n\t\t\t\tlet autoAnimatePage = this.createPage({\n\t\t\t\t\tslideElement: autoAnimateElement.querySelector( 'section' ),\n\t\t\t\t\tcontentElement: autoAnimateElement,\n\t\t\t\t\tbackgroundElement: autoAnimateElement.querySelector( '.slide-background' )\n\t\t\t\t});\n\n\t\t\t\t// Create fragment scroll triggers for the auto-animate slide\n\t\t\t\tthis.createFragmentTriggersForPage( autoAnimatePage, autoAnimatePage.slideElement );\n\n\t\t\t\tpage.autoAnimatePages.push( autoAnimatePage );\n\n\t\t\t\t// Return our slide trigger\n\t\t\t\treturn {\n\t\t\t\t\tpage: autoAnimatePage,\n\t\t\t\t\tactivate: () => this.activatePage( autoAnimatePage ),\n\t\t\t\t\tdeactivate: () => this.deactivatePage( autoAnimatePage )\n\t\t\t\t};\n\t\t\t}));\n\t\t}\n\n\t}\n\n\t/**\n\t * Helper method for creating a page definition and adding\n\t * required fields. A \"page\" is a slide or auto-animate step.\n\t */\n\tcreatePage( page ) {\n\n\t\tpage.scrollTriggers = [];\n\t\tpage.indexh = parseInt( page.slideElement.getAttribute( 'data-index-h' ), 10 );\n\t\tpage.indexv = parseInt( page.slideElement.getAttribute( 'data-index-v' ), 10 );\n\n\t\treturn page;\n\n\t}\n\n\t/**\n\t * Rerenders progress bar segments so that they match the current\n\t * reveal.js config and size.\n\t */\n\tsyncProgressBar() {\n\n\t\tthis.progressBarInner.querySelectorAll( '.scrollbar-slide' ).forEach( slide => slide.remove() );\n\n\t\tconst scrollHeight = this.viewportElement.scrollHeight;\n\t\tconst viewportHeight = this.viewportElement.offsetHeight;\n\t\tconst viewportHeightFactor = viewportHeight / scrollHeight;\n\n\t\tthis.progressBarHeight = this.progressBarInner.offsetHeight;\n\t\tthis.playheadHeight = Math.max( viewportHeightFactor * this.progressBarHeight, MIN_PLAYHEAD_HEIGHT );\n\t\tthis.progressBarScrollableHeight = this.progressBarHeight - this.playheadHeight;\n\n\t\tconst progressSegmentHeight = viewportHeight / scrollHeight * this.progressBarHeight;\n\t\tconst spacing = Math.min( progressSegmentHeight / 8, MAX_PROGRESS_SPACING );\n\n\t\tthis.progressBarPlayhead.style.height = this.playheadHeight - spacing + 'px';\n\n\t\t// Don't show individual segments if they're too small\n\t\tif( progressSegmentHeight > MIN_PROGRESS_SEGMENT_HEIGHT ) {\n\n\t\t\tthis.slideTriggers.forEach( slideTrigger => {\n\n\t\t\t\tconst { page } = slideTrigger;\n\n\t\t\t\t// Visual representation of a slide\n\t\t\t\tpage.progressBarSlide = document.createElement( 'div' );\n\t\t\t\tpage.progressBarSlide.className = 'scrollbar-slide';\n\t\t\t\tpage.progressBarSlide.style.top = slideTrigger.range[0] * this.progressBarHeight + 'px';\n\t\t\t\tpage.progressBarSlide.style.height = ( slideTrigger.range[1] - slideTrigger.range[0] ) * this.progressBarHeight - spacing + 'px';\n\t\t\t\tpage.progressBarSlide.classList.toggle( 'has-triggers', page.scrollTriggers.length > 0 );\n\t\t\t\tthis.progressBarInner.appendChild( page.progressBarSlide );\n\n\t\t\t\t// Visual representations of each scroll trigger\n\t\t\t\tpage.scrollTriggerElements = page.scrollTriggers.map( ( trigger, i ) => {\n\n\t\t\t\t\tconst triggerElement = document.createElement( 'div' );\n\t\t\t\t\ttriggerElement.className = 'scrollbar-trigger';\n\t\t\t\t\ttriggerElement.style.top = ( trigger.range[0] - slideTrigger.range[0] ) * this.progressBarHeight + 'px';\n\t\t\t\t\ttriggerElement.style.height = ( trigger.range[1] - trigger.range[0] ) * this.progressBarHeight - spacing + 'px';\n\t\t\t\t\tpage.progressBarSlide.appendChild( triggerElement );\n\n\t\t\t\t\tif( i === 0 ) triggerElement.style.display = 'none';\n\n\t\t\t\t\treturn triggerElement;\n\n\t\t\t\t} );\n\n\t\t\t} );\n\n\t\t}\n\t\telse {\n\n\t\t\tthis.pages.forEach( page => page.progressBarSlide = null );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Reads the current scroll position and updates our active\n\t * trigger states accordingly.\n\t */\n\tsyncScrollPosition() {\n\n\t\tconst viewportHeight = this.viewportElement.offsetHeight;\n\t\tconst viewportHeightFactor = viewportHeight / this.viewportElement.scrollHeight;\n\n\t\tconst scrollTop = this.viewportElement.scrollTop;\n\t\tconst scrollHeight = this.viewportElement.scrollHeight - viewportHeight\n\t\tconst scrollProgress = Math.max( Math.min( scrollTop / scrollHeight, 1 ), 0 );\n\t\tconst scrollProgressMid = Math.max( Math.min( ( scrollTop + viewportHeight / 2 ) / this.viewportElement.scrollHeight, 1 ), 0 );\n\n\t\tlet activePage;\n\n\t\tthis.slideTriggers.forEach( ( trigger ) => {\n\t\t\tconst { page } = trigger;\n\n\t\t\tconst shouldPreload = scrollProgress >= trigger.range[0] - viewportHeightFactor*2 &&\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tscrollProgress <= trigger.range[1] + viewportHeightFactor*2;\n\n\t\t\t// Load slides that are within the preload range\n\t\t\tif( shouldPreload && !page.loaded ) {\n\t\t\t\tpage.loaded = true;\n\t\t\t\tthis.Reveal.slideContent.load( page.slideElement );\n\t\t\t}\n\t\t\telse if( page.loaded ) {\n\t\t\t\tpage.loaded = false;\n\t\t\t\tthis.Reveal.slideContent.unload( page.slideElement );\n\t\t\t}\n\n\t\t\t// If we're within this trigger range, activate it\n\t\t\tif( scrollProgress >= trigger.range[0] && scrollProgress <= trigger.range[1] ) {\n\t\t\t\tthis.activateTrigger( trigger );\n\t\t\t\tactivePage = trigger.page;\n\t\t\t}\n\t\t\t// .. otherwise deactivate\n\t\t\telse if( trigger.active ) {\n\t\t\t\tthis.deactivateTrigger( trigger );\n\t\t\t}\n\t\t} );\n\n\t\t// Each page can have its own scroll triggers, check if any of those\n\t\t// need to be activated/deactivated\n\t\tif( activePage ) {\n\t\t\tactivePage.scrollTriggers.forEach( ( trigger ) => {\n\t\t\t\tif( scrollProgressMid >= trigger.range[0] && scrollProgressMid <= trigger.range[1] ) {\n\t\t\t\t\tthis.activateTrigger( trigger );\n\t\t\t\t}\n\t\t\t\telse if( trigger.active ) {\n\t\t\t\t\tthis.deactivateTrigger( trigger );\n\t\t\t\t}\n\t\t\t} );\n\t\t}\n\n\t\t// Update our visual progress indication\n\t\tthis.setProgressBarValue( scrollTop / ( this.viewportElement.scrollHeight - viewportHeight ) );\n\n\t}\n\n\t/**\n\t * Moves the progress bar playhead to the specified position.\n\t *\n\t * @param {number} progress 0-1\n\t */\n\tsetProgressBarValue( progress ) {\n\n\t\tif( this.progressBar ) {\n\n\t\t\tthis.progressBarPlayhead.style.transform = `translateY(${progress * this.progressBarScrollableHeight}px)`;\n\n\t\t\tthis.getAllPages()\n\t\t\t\t.filter( page => page.progressBarSlide )\n\t\t\t\t.forEach( ( page ) => {\n\t\t\t\t\tpage.progressBarSlide.classList.toggle( 'active', page.active === true );\n\n\t\t\t\t\tpage.scrollTriggers.forEach( ( trigger, i ) => {\n\t\t\t\t\t\tpage.scrollTriggerElements[i].classList.toggle( 'active', page.active === true && trigger.active === true );\n\t\t\t\t\t} );\n\t\t\t\t} );\n\n\t\t\tthis.showProgressBar();\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Show the progress bar and, if configured, automatically hide\n\t * it after a delay.\n\t */\n\tshowProgressBar() {\n\n\t\tthis.progressBar.classList.add( 'visible' );\n\n\t\tclearTimeout( this.hideProgressBarTimeout );\n\n\t\tif( this.Reveal.getConfig().scrollProgress === 'auto' && !this.draggingProgressBar ) {\n\n\t\t\tthis.hideProgressBarTimeout = setTimeout( () => {\n\t\t\t\tif( this.progressBar ) {\n\t\t\t\t\tthis.progressBar.classList.remove( 'visible' );\n\t\t\t\t}\n\t\t\t}, HIDE_SCROLLBAR_TIMEOUT );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Scroll to the previous page.\n\t */\n\tprev() {\n\n\t\tthis.viewportElement.scrollTop -= this.scrollTriggerHeight;\n\n\t}\n\n\t/**\n\t * Scroll to the next page.\n\t */\n\tnext() {\n\n\t\tthis.viewportElement.scrollTop += this.scrollTriggerHeight;\n\n\t}\n\n\t/**\n\t * Scrolls the given slide element into view.\n\t *\n\t * @param {HTMLElement} slideElement\n\t */\n\tscrollToSlide( slideElement ) {\n\n\t\t// If the scroll view isn't active yet, queue this action\n\t\tif( !this.active ) {\n\t\t\tthis.activatedCallbacks.push( () => this.scrollToSlide( slideElement ) );\n\t\t}\n\t\telse {\n\t\t\t// Find the trigger for this slide\n\t\t\tconst trigger = this.getScrollTriggerBySlide( slideElement );\n\n\t\t\tif( trigger ) {\n\t\t\t\t// Use the trigger's range to calculate the scroll position\n\t\t\t\tthis.viewportElement.scrollTop = trigger.range[0] * ( this.viewportElement.scrollHeight - this.viewportElement.offsetHeight );\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Persists the current scroll position to session storage\n\t * so that it can be restored.\n\t */\n\tstoreScrollPosition() {\n\n\t\tclearTimeout( this.storeScrollPositionTimeout );\n\n\t\tthis.storeScrollPositionTimeout = setTimeout( () => {\n\t\t\tsessionStorage.setItem( 'reveal-scroll-top', this.viewportElement.scrollTop );\n\t\t\tsessionStorage.setItem( 'reveal-scroll-origin', location.origin + location.pathname );\n\n\t\t\tthis.storeScrollPositionTimeout = null;\n\t\t}, 50 );\n\n\t}\n\n\t/**\n\t * Restores the scroll position when a deck is reloader.\n\t */\n\trestoreScrollPosition() {\n\n\t\tconst scrollPosition = sessionStorage.getItem( 'reveal-scroll-top' );\n\t\tconst scrollOrigin = sessionStorage.getItem( 'reveal-scroll-origin' );\n\n\t\tif( scrollPosition && scrollOrigin === location.origin + location.pathname ) {\n\t\t\tthis.viewportElement.scrollTop = parseInt( scrollPosition, 10 );\n\t\t}\n\n\t}\n\n\t/**\n\t * Activates the given page and starts its embedded content\n\t * if there is any.\n\t *\n\t * @param {object} page\n\t */\n\tactivatePage( page ) {\n\n\t\tif( !page.active ) {\n\n\t\t\tpage.active = true;\n\n\t\t\tconst { slideElement, backgroundElement, contentElement, indexh, indexv } = page;\n\n\t\t\tcontentElement.style.display = 'block';\n\n\t\t\tslideElement.classList.add( 'present' );\n\n\t\t\tif( backgroundElement ) {\n\t\t\t\tbackgroundElement.classList.add( 'present' );\n\t\t\t}\n\n\t\t\tthis.Reveal.setCurrentScrollPage( slideElement, indexh, indexv );\n\t\t\tthis.Reveal.backgrounds.bubbleSlideContrastClassToElement( slideElement, this.viewportElement );\n\n\t\t\t// If this page is part of an auto-animation there will be one\n\t\t\t// content element per auto-animated page. We need to show the\n\t\t\t// current page and hide all others.\n\t\t\tArray.from( contentElement.parentNode.querySelectorAll( '.scroll-page-content' ) ).forEach( sibling => {\n\t\t\t\tif( sibling !== contentElement ) {\n\t\t\t\t\tsibling.style.display = 'none';\n\t\t\t\t}\n\t\t\t});\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Deactivates the page after it has been visible.\n\t *\n\t * @param {object} page\n\t */\n\tdeactivatePage( page ) {\n\n\t\tif( page.active ) {\n\n\t\t\tpage.active = false;\n\t\t\tif( page.slideElement ) page.slideElement.classList.remove( 'present' );\n\t\t\tif( page.backgroundElement ) page.backgroundElement.classList.remove( 'present' );\n\n\t\t}\n\n\t}\n\n\tactivateTrigger( trigger ) {\n\n\t\tif( !trigger.active ) {\n\t\t\ttrigger.active = true;\n\t\t\ttrigger.activate();\n\t\t}\n\n\t}\n\n\tdeactivateTrigger( trigger ) {\n\n\t\tif( trigger.active ) {\n\t\t\ttrigger.active = false;\n\n\t\t\tif( trigger.deactivate ) {\n\t\t\t\ttrigger.deactivate();\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Retrieve a slide by its original h/v index (i.e. the indices the\n\t * slide had before being linearized).\n\t *\n\t * @param {number} h\n\t * @param {number} v\n\t * @returns {HTMLElement}\n\t */\n\tgetSlideByIndices( h, v ) {\n\n\t\tconst page = this.getAllPages().find( page => {\n\t\t\treturn page.indexh === h && page.indexv === v;\n\t\t} );\n\n\t\treturn page ? page.slideElement : null;\n\n\t}\n\n\t/**\n\t * Retrieve a list of all scroll triggers for the given slide\n\t * DOM element.\n\t *\n\t * @param {HTMLElement} slide\n\t * @returns {Array}\n\t */\n\tgetScrollTriggerBySlide( slide ) {\n\n\t\treturn this.slideTriggers.find( trigger => trigger.page.slideElement === slide );\n\n\t}\n\n\t/**\n\t * Get a list of all pages in the scroll view. This includes\n\t * both top-level slides and auto-animate steps.\n\t *\n\t * @returns {Array}\n\t */\n\tgetAllPages() {\n\n\t\treturn this.pages.flatMap( page => [page, ...(page.autoAnimatePages || [])] );\n\n\t}\n\n\tonScroll() {\n\n\t\tthis.syncScrollPosition();\n\t\tthis.storeScrollPosition();\n\n\t}\n\n\tget viewportElement() {\n\n\t\treturn this.Reveal.getViewportElement();\n\n\t}\n\n}\n","import { SLIDES_SELECTOR } from '../utils/constants.js'\nimport { queryAll, createStyleSheet } from '../utils/util.js'\n\n/**\n * Setups up our presentation for printing/exporting to PDF.\n */\nexport default class PrintView {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t}\n\n\t/**\n\t * Configures the presentation for printing to a static\n\t * PDF.\n\t */\n\tasync activate() {\n\n\t\tconst config = this.Reveal.getConfig();\n\t\tconst slides = queryAll( this.Reveal.getRevealElement(), SLIDES_SELECTOR )\n\n\t\t// Compute slide numbers now, before we start duplicating slides\n\t\tconst injectPageNumbers = config.slideNumber && /all|print/i.test( config.showSlideNumber );\n\n\t\tconst slideSize = this.Reveal.getComputedSlideSize( window.innerWidth, window.innerHeight );\n\n\t\t// Dimensions of the PDF pages\n\t\tconst pageWidth = Math.floor( slideSize.width * ( 1 + config.margin ) ),\n\t\t\tpageHeight = Math.floor( slideSize.height * ( 1 + config.margin ) );\n\n\t\t// Dimensions of slides within the pages\n\t\tconst slideWidth = slideSize.width,\n\t\t\tslideHeight = slideSize.height;\n\n\t\tawait new Promise( requestAnimationFrame );\n\n\t\t// Let the browser know what page size we want to print\n\t\tcreateStyleSheet( '@page{size:'+ pageWidth +'px '+ pageHeight +'px; margin: 0px;}' );\n\n\t\t// Limit the size of certain elements to the dimensions of the slide\n\t\tcreateStyleSheet( '.reveal section>img, .reveal section>video, .reveal section>iframe{max-width: '+ slideWidth +'px; max-height:'+ slideHeight +'px}' );\n\n\t\tdocument.documentElement.classList.add( 'reveal-print', 'print-pdf' );\n\t\tdocument.body.style.width = pageWidth + 'px';\n\t\tdocument.body.style.height = pageHeight + 'px';\n\n\t\tconst viewportElement = this.Reveal.getViewportElement();\n\t\tlet presentationBackground;\n\t\tif( viewportElement ) {\n\t\t\tconst viewportStyles = window.getComputedStyle( viewportElement );\n\t\t\tif( viewportStyles && viewportStyles.background ) {\n\t\t\t\tpresentationBackground = viewportStyles.background;\n\t\t\t}\n\t\t}\n\n\t\t// Make sure stretch elements fit on slide\n\t\tawait new Promise( requestAnimationFrame );\n\t\tthis.Reveal.layoutSlideContents( slideWidth, slideHeight );\n\n\t\t// Batch scrollHeight access to prevent layout thrashing\n\t\tawait new Promise( requestAnimationFrame );\n\n\t\tconst slideScrollHeights = slides.map( slide => slide.scrollHeight );\n\n\t\tconst pages = [];\n\t\tconst pageContainer = slides[0].parentNode;\n\t\tlet slideNumber = 1;\n\n\t\t// Slide and slide background layout\n\t\tslides.forEach( function( slide, index ) {\n\n\t\t\t// Vertical stacks are not centred since their section\n\t\t\t// children will be\n\t\t\tif( slide.classList.contains( 'stack' ) === false ) {\n\t\t\t\t// Center the slide inside of the page, giving the slide some margin\n\t\t\t\tlet left = ( pageWidth - slideWidth ) / 2;\n\t\t\t\tlet top = ( pageHeight - slideHeight ) / 2;\n\n\t\t\t\tconst contentHeight = slideScrollHeights[ index ];\n\t\t\t\tlet numberOfPages = Math.max( Math.ceil( contentHeight / pageHeight ), 1 );\n\n\t\t\t\t// Adhere to configured pages per slide limit\n\t\t\t\tnumberOfPages = Math.min( numberOfPages, config.pdfMaxPagesPerSlide );\n\n\t\t\t\t// Center slides vertically\n\t\t\t\tif( numberOfPages === 1 && config.center || slide.classList.contains( 'center' ) ) {\n\t\t\t\t\ttop = Math.max( ( pageHeight - contentHeight ) / 2, 0 );\n\t\t\t\t}\n\n\t\t\t\t// Wrap the slide in a page element and hide its overflow\n\t\t\t\t// so that no page ever flows onto another\n\t\t\t\tconst page = document.createElement( 'div' );\n\t\t\t\tpages.push( page );\n\n\t\t\t\tpage.className = 'pdf-page';\n\t\t\t\tpage.style.height = ( ( pageHeight + config.pdfPageHeightOffset ) * numberOfPages ) + 'px';\n\n\t\t\t\t// Copy the presentation-wide background to each individual\n\t\t\t\t// page when printing\n\t\t\t\tif( presentationBackground ) {\n\t\t\t\t\tpage.style.background = presentationBackground;\n\t\t\t\t}\n\n\t\t\t\tpage.appendChild( slide );\n\n\t\t\t\t// Position the slide inside of the page\n\t\t\t\tslide.style.left = left + 'px';\n\t\t\t\tslide.style.top = top + 'px';\n\t\t\t\tslide.style.width = slideWidth + 'px';\n\n\t\t\t\tthis.Reveal.slideContent.layout( slide );\n\n\t\t\t\tif( slide.slideBackgroundElement ) {\n\t\t\t\t\tpage.insertBefore( slide.slideBackgroundElement, slide );\n\t\t\t\t}\n\n\t\t\t\t// Inject notes if `showNotes` is enabled\n\t\t\t\tif( config.showNotes ) {\n\n\t\t\t\t\t// Are there notes for this slide?\n\t\t\t\t\tconst notes = this.Reveal.getSlideNotes( slide );\n\t\t\t\t\tif( notes ) {\n\n\t\t\t\t\t\tconst notesSpacing = 8;\n\t\t\t\t\t\tconst notesLayout = typeof config.showNotes === 'string' ? config.showNotes : 'inline';\n\t\t\t\t\t\tconst notesElement = document.createElement( 'div' );\n\t\t\t\t\t\tnotesElement.classList.add( 'speaker-notes' );\n\t\t\t\t\t\tnotesElement.classList.add( 'speaker-notes-pdf' );\n\t\t\t\t\t\tnotesElement.setAttribute( 'data-layout', notesLayout );\n\t\t\t\t\t\tnotesElement.innerHTML = notes;\n\n\t\t\t\t\t\tif( notesLayout === 'separate-page' ) {\n\t\t\t\t\t\t\tpages.push( notesElement );\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tnotesElement.style.left = notesSpacing + 'px';\n\t\t\t\t\t\t\tnotesElement.style.bottom = notesSpacing + 'px';\n\t\t\t\t\t\t\tnotesElement.style.width = ( pageWidth - notesSpacing*2 ) + 'px';\n\t\t\t\t\t\t\tpage.appendChild( notesElement );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// Inject page numbers if `slideNumbers` are enabled\n\t\t\t\tif( injectPageNumbers ) {\n\t\t\t\t\tconst numberElement = document.createElement( 'div' );\n\t\t\t\t\tnumberElement.classList.add( 'slide-number' );\n\t\t\t\t\tnumberElement.classList.add( 'slide-number-pdf' );\n\t\t\t\t\tnumberElement.innerHTML = slideNumber++;\n\t\t\t\t\tpage.appendChild( numberElement );\n\t\t\t\t}\n\n\t\t\t\t// Copy page and show fragments one after another\n\t\t\t\tif( config.pdfSeparateFragments ) {\n\n\t\t\t\t\t// Each fragment 'group' is an array containing one or more\n\t\t\t\t\t// fragments. Multiple fragments that appear at the same time\n\t\t\t\t\t// are part of the same group.\n\t\t\t\t\tconst fragmentGroups = this.Reveal.fragments.sort( page.querySelectorAll( '.fragment' ), true );\n\n\t\t\t\t\tlet previousFragmentStep;\n\n\t\t\t\t\tfragmentGroups.forEach( function( fragments, index ) {\n\n\t\t\t\t\t\t// Remove 'current-fragment' from the previous group\n\t\t\t\t\t\tif( previousFragmentStep ) {\n\t\t\t\t\t\t\tpreviousFragmentStep.forEach( function( fragment ) {\n\t\t\t\t\t\t\t\tfragment.classList.remove( 'current-fragment' );\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Show the fragments for the current index\n\t\t\t\t\t\tfragments.forEach( function( fragment ) {\n\t\t\t\t\t\t\tfragment.classList.add( 'visible', 'current-fragment' );\n\t\t\t\t\t\t}, this );\n\n\t\t\t\t\t\t// Create a separate page for the current fragment state\n\t\t\t\t\t\tconst clonedPage = page.cloneNode( true );\n\n\t\t\t\t\t\t// Inject unique page numbers for fragments\n\t\t\t\t\t\tif( injectPageNumbers ) {\n\t\t\t\t\t\t\tconst numberElement = clonedPage.querySelector( '.slide-number-pdf' );\n\t\t\t\t\t\t\tconst fragmentNumber = index + 1;\n\t\t\t\t\t\t\tnumberElement.innerHTML += '.' + fragmentNumber;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tpages.push( clonedPage );\n\n\t\t\t\t\t\tpreviousFragmentStep = fragments;\n\n\t\t\t\t\t}, this );\n\n\t\t\t\t\t// Reset the first/original page so that all fragments are hidden\n\t\t\t\t\tfragmentGroups.forEach( function( fragments ) {\n\t\t\t\t\t\tfragments.forEach( function( fragment ) {\n\t\t\t\t\t\t\tfragment.classList.remove( 'visible', 'current-fragment' );\n\t\t\t\t\t\t} );\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\t\t\t\t// Show all fragments\n\t\t\t\telse {\n\t\t\t\t\tqueryAll( page, '.fragment:not(.fade-out)' ).forEach( function( fragment ) {\n\t\t\t\t\t\tfragment.classList.add( 'visible' );\n\t\t\t\t\t} );\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}, this );\n\n\t\tawait new Promise( requestAnimationFrame );\n\n\t\tpages.forEach( page => pageContainer.appendChild( page ) );\n\n\t\t// Re-run JS-based content layout after the slide is added to page DOM\n\t\tthis.Reveal.slideContent.layout( this.Reveal.getSlidesElement() );\n\n\t\t// Notify subscribers that the PDF layout is good to go\n\t\tthis.Reveal.dispatchEvent({ type: 'pdf-ready' });\n\n\t\tviewportElement.classList.remove( 'loading-scroll-mode' );\n\n\t}\n\n\t/**\n\t * Checks if the print mode is/should be activated.\n\t */\n\tisActive() {\n\n\t\treturn this.Reveal.getConfig().view === 'print';\n\n\t}\n\n}","import { extend, queryAll } from '../utils/util.js'\n\n/**\n * Handles sorting and navigation of slide fragments.\n * Fragments are elements within a slide that are\n * revealed/animated incrementally.\n */\nexport default class Fragments {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tif( config.fragments === false ) {\n\t\t\tthis.disable();\n\t\t}\n\t\telse if( oldConfig.fragments === false ) {\n\t\t\tthis.enable();\n\t\t}\n\n\t}\n\n\t/**\n\t * If fragments are disabled in the deck, they should all be\n\t * visible rather than stepped through.\n\t */\n\tdisable() {\n\n\t\tqueryAll( this.Reveal.getSlidesElement(), '.fragment' ).forEach( element => {\n\t\t\telement.classList.add( 'visible' );\n\t\t\telement.classList.remove( 'current-fragment' );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Reverse of #disable(). Only called if fragments have\n\t * previously been disabled.\n\t */\n\tenable() {\n\n\t\tqueryAll( this.Reveal.getSlidesElement(), '.fragment' ).forEach( element => {\n\t\t\telement.classList.remove( 'visible' );\n\t\t\telement.classList.remove( 'current-fragment' );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Returns an object describing the available fragment\n\t * directions.\n\t *\n\t * @return {{prev: boolean, next: boolean}}\n\t */\n\tavailableRoutes() {\n\n\t\tlet currentSlide = this.Reveal.getCurrentSlide();\n\t\tif( currentSlide && this.Reveal.getConfig().fragments ) {\n\t\t\tlet fragments = currentSlide.querySelectorAll( '.fragment:not(.disabled)' );\n\t\t\tlet hiddenFragments = currentSlide.querySelectorAll( '.fragment:not(.disabled):not(.visible)' );\n\n\t\t\treturn {\n\t\t\t\tprev: fragments.length - hiddenFragments.length > 0,\n\t\t\t\tnext: !!hiddenFragments.length\n\t\t\t};\n\t\t}\n\t\telse {\n\t\t\treturn { prev: false, next: false };\n\t\t}\n\n\t}\n\n\t/**\n\t * Return a sorted fragments list, ordered by an increasing\n\t * \"data-fragment-index\" attribute.\n\t *\n\t * Fragments will be revealed in the order that they are returned by\n\t * this function, so you can use the index attributes to control the\n\t * order of fragment appearance.\n\t *\n\t * To maintain a sensible default fragment order, fragments are presumed\n\t * to be passed in document order. This function adds a \"fragment-index\"\n\t * attribute to each node if such an attribute is not already present,\n\t * and sets that attribute to an integer value which is the position of\n\t * the fragment within the fragments list.\n\t *\n\t * @param {object[]|*} fragments\n\t * @param {boolean} grouped If true the returned array will contain\n\t * nested arrays for all fragments with the same index\n\t * @return {object[]} sorted Sorted array of fragments\n\t */\n\tsort( fragments, grouped = false ) {\n\n\t\tfragments = Array.from( fragments );\n\n\t\tlet ordered = [],\n\t\t\tunordered = [],\n\t\t\tsorted = [];\n\n\t\t// Group ordered and unordered elements\n\t\tfragments.forEach( fragment => {\n\t\t\tif( fragment.hasAttribute( 'data-fragment-index' ) ) {\n\t\t\t\tlet index = parseInt( fragment.getAttribute( 'data-fragment-index' ), 10 );\n\n\t\t\t\tif( !ordered[index] ) {\n\t\t\t\t\tordered[index] = [];\n\t\t\t\t}\n\n\t\t\t\tordered[index].push( fragment );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tunordered.push( [ fragment ] );\n\t\t\t}\n\t\t} );\n\n\t\t// Append fragments without explicit indices in their\n\t\t// DOM order\n\t\tordered = ordered.concat( unordered );\n\n\t\t// Manually count the index up per group to ensure there\n\t\t// are no gaps\n\t\tlet index = 0;\n\n\t\t// Push all fragments in their sorted order to an array,\n\t\t// this flattens the groups\n\t\tordered.forEach( group => {\n\t\t\tgroup.forEach( fragment => {\n\t\t\t\tsorted.push( fragment );\n\t\t\t\tfragment.setAttribute( 'data-fragment-index', index );\n\t\t\t} );\n\n\t\t\tindex ++;\n\t\t} );\n\n\t\treturn grouped === true ? ordered : sorted;\n\n\t}\n\n\t/**\n\t * Sorts and formats all of fragments in the\n\t * presentation.\n\t */\n\tsortAll() {\n\n\t\tthis.Reveal.getHorizontalSlides().forEach( horizontalSlide => {\n\n\t\t\tlet verticalSlides = queryAll( horizontalSlide, 'section' );\n\t\t\tverticalSlides.forEach( ( verticalSlide, y ) => {\n\n\t\t\t\tthis.sort( verticalSlide.querySelectorAll( '.fragment' ) );\n\n\t\t\t}, this );\n\n\t\t\tif( verticalSlides.length === 0 ) this.sort( horizontalSlide.querySelectorAll( '.fragment' ) );\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * Refreshes the fragments on the current slide so that they\n\t * have the appropriate classes (.visible + .current-fragment).\n\t *\n\t * @param {number} [index] The index of the current fragment\n\t * @param {array} [fragments] Array containing all fragments\n\t * in the current slide\n\t *\n\t * @return {{shown: array, hidden: array}}\n\t */\n\tupdate( index, fragments, slide = this.Reveal.getCurrentSlide() ) {\n\n\t\tlet changedFragments = {\n\t\t\tshown: [],\n\t\t\thidden: []\n\t\t};\n\n\t\tif( slide && this.Reveal.getConfig().fragments ) {\n\n\t\t\tfragments = fragments || this.sort( slide.querySelectorAll( '.fragment' ) );\n\n\t\t\tif( fragments.length ) {\n\n\t\t\t\tlet maxIndex = 0;\n\n\t\t\t\tif( typeof index !== 'number' ) {\n\t\t\t\t\tlet currentFragment = this.sort( slide.querySelectorAll( '.fragment.visible' ) ).pop();\n\t\t\t\t\tif( currentFragment ) {\n\t\t\t\t\t\tindex = parseInt( currentFragment.getAttribute( 'data-fragment-index' ) || 0, 10 );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tArray.from( fragments ).forEach( ( el, i ) => {\n\n\t\t\t\t\tif( el.hasAttribute( 'data-fragment-index' ) ) {\n\t\t\t\t\t\ti = parseInt( el.getAttribute( 'data-fragment-index' ), 10 );\n\t\t\t\t\t}\n\n\t\t\t\t\tmaxIndex = Math.max( maxIndex, i );\n\n\t\t\t\t\t// Visible fragments\n\t\t\t\t\tif( i <= index ) {\n\t\t\t\t\t\tlet wasVisible = el.classList.contains( 'visible' )\n\t\t\t\t\t\tel.classList.add( 'visible' );\n\t\t\t\t\t\tel.classList.remove( 'current-fragment' );\n\n\t\t\t\t\t\tif( i === index ) {\n\t\t\t\t\t\t\t// Announce the fragments one by one to the Screen Reader\n\t\t\t\t\t\t\tthis.Reveal.announceStatus( this.Reveal.getStatusText( el ) );\n\n\t\t\t\t\t\t\tel.classList.add( 'current-fragment' );\n\t\t\t\t\t\t\tthis.Reveal.slideContent.startEmbeddedContent( el );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif( !wasVisible ) {\n\t\t\t\t\t\t\tchangedFragments.shown.push( el )\n\t\t\t\t\t\t\tthis.Reveal.dispatchEvent({\n\t\t\t\t\t\t\t\ttarget: el,\n\t\t\t\t\t\t\t\ttype: 'visible',\n\t\t\t\t\t\t\t\tbubbles: false\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t// Hidden fragments\n\t\t\t\t\telse {\n\t\t\t\t\t\tlet wasVisible = el.classList.contains( 'visible' )\n\t\t\t\t\t\tel.classList.remove( 'visible' );\n\t\t\t\t\t\tel.classList.remove( 'current-fragment' );\n\n\t\t\t\t\t\tif( wasVisible ) {\n\t\t\t\t\t\t\tthis.Reveal.slideContent.stopEmbeddedContent( el );\n\t\t\t\t\t\t\tchangedFragments.hidden.push( el );\n\t\t\t\t\t\t\tthis.Reveal.dispatchEvent({\n\t\t\t\t\t\t\t\ttarget: el,\n\t\t\t\t\t\t\t\ttype: 'hidden',\n\t\t\t\t\t\t\t\tbubbles: false\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t\t// Write the current fragment index to the slide <section>.\n\t\t\t\t// This can be used by end users to apply styles based on\n\t\t\t\t// the current fragment index.\n\t\t\t\tindex = typeof index === 'number' ? index : -1;\n\t\t\t\tindex = Math.max( Math.min( index, maxIndex ), -1 );\n\t\t\t\tslide.setAttribute( 'data-fragment', index );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn changedFragments;\n\n\t}\n\n\t/**\n\t * Formats the fragments on the given slide so that they have\n\t * valid indices. Call this if fragments are changed in the DOM\n\t * after reveal.js has already initialized.\n\t *\n\t * @param {HTMLElement} slide\n\t * @return {Array} a list of the HTML fragments that were synced\n\t */\n\tsync( slide = this.Reveal.getCurrentSlide() ) {\n\n\t\treturn this.sort( slide.querySelectorAll( '.fragment' ) );\n\n\t}\n\n\t/**\n\t * Navigate to the specified slide fragment.\n\t *\n\t * @param {?number} index The index of the fragment that\n\t * should be shown, -1 means all are invisible\n\t * @param {number} offset Integer offset to apply to the\n\t * fragment index\n\t *\n\t * @return {boolean} true if a change was made in any\n\t * fragments visibility as part of this call\n\t */\n\tgoto( index, offset = 0 ) {\n\n\t\tlet currentSlide = this.Reveal.getCurrentSlide();\n\t\tif( currentSlide && this.Reveal.getConfig().fragments ) {\n\n\t\t\tlet fragments = this.sort( currentSlide.querySelectorAll( '.fragment:not(.disabled)' ) );\n\t\t\tif( fragments.length ) {\n\n\t\t\t\t// If no index is specified, find the current\n\t\t\t\tif( typeof index !== 'number' ) {\n\t\t\t\t\tlet lastVisibleFragment = this.sort( currentSlide.querySelectorAll( '.fragment:not(.disabled).visible' ) ).pop();\n\n\t\t\t\t\tif( lastVisibleFragment ) {\n\t\t\t\t\t\tindex = parseInt( lastVisibleFragment.getAttribute( 'data-fragment-index' ) || 0, 10 );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tindex = -1;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Apply the offset if there is one\n\t\t\t\tindex += offset;\n\n\t\t\t\tlet changedFragments = this.update( index, fragments );\n\n\t\t\t\tif( changedFragments.hidden.length ) {\n\t\t\t\t\tthis.Reveal.dispatchEvent({\n\t\t\t\t\t\ttype: 'fragmenthidden',\n\t\t\t\t\t\tdata: {\n\t\t\t\t\t\t\tfragment: changedFragments.hidden[0],\n\t\t\t\t\t\t\tfragments: changedFragments.hidden\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tif( changedFragments.shown.length ) {\n\t\t\t\t\tthis.Reveal.dispatchEvent({\n\t\t\t\t\t\ttype: 'fragmentshown',\n\t\t\t\t\t\tdata: {\n\t\t\t\t\t\t\tfragment: changedFragments.shown[0],\n\t\t\t\t\t\t\tfragments: changedFragments.shown\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tthis.Reveal.controls.update();\n\t\t\t\tthis.Reveal.progress.update();\n\n\t\t\t\tif( this.Reveal.getConfig().fragmentInURL ) {\n\t\t\t\t\tthis.Reveal.location.writeURL();\n\t\t\t\t}\n\n\t\t\t\treturn !!( changedFragments.shown.length || changedFragments.hidden.length );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\t/**\n\t * Navigate to the next slide fragment.\n\t *\n\t * @return {boolean} true if there was a next fragment,\n\t * false otherwise\n\t */\n\tnext() {\n\n\t\treturn this.goto( null, 1 );\n\n\t}\n\n\t/**\n\t * Navigate to the previous slide fragment.\n\t *\n\t * @return {boolean} true if there was a previous fragment,\n\t * false otherwise\n\t */\n\tprev() {\n\n\t\treturn this.goto( null, -1 );\n\n\t}\n\n}","import { SLIDES_SELECTOR } from '../utils/constants.js'\nimport { extend, queryAll, transformElement } from '../utils/util.js'\n\n/**\n * Handles all logic related to the overview mode\n * (birds-eye view of all slides).\n */\nexport default class Overview {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\tthis.active = false;\n\n\t\tthis.onSlideClicked = this.onSlideClicked.bind( this );\n\n\t}\n\n\t/**\n\t * Displays the overview of slides (quick nav) by scaling\n\t * down and arranging all slide elements.\n\t */\n\tactivate() {\n\n\t\t// Only proceed if enabled in config\n\t\tif( this.Reveal.getConfig().overview && !this.Reveal.isScrollView() && !this.isActive() ) {\n\n\t\t\tthis.active = true;\n\n\t\t\tthis.Reveal.getRevealElement().classList.add( 'overview' );\n\n\t\t\t// Don't auto-slide while in overview mode\n\t\t\tthis.Reveal.cancelAutoSlide();\n\n\t\t\t// Move the backgrounds element into the slide container to\n\t\t\t// that the same scaling is applied\n\t\t\tthis.Reveal.getSlidesElement().appendChild( this.Reveal.getBackgroundsElement() );\n\n\t\t\t// Clicking on an overview slide navigates to it\n\t\t\tqueryAll( this.Reveal.getRevealElement(), SLIDES_SELECTOR ).forEach( slide => {\n\t\t\t\tif( !slide.classList.contains( 'stack' ) ) {\n\t\t\t\t\tslide.addEventListener( 'click', this.onSlideClicked, true );\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\t// Calculate slide sizes\n\t\t\tconst margin = 70;\n\t\t\tconst slideSize = this.Reveal.getComputedSlideSize();\n\t\t\tthis.overviewSlideWidth = slideSize.width + margin;\n\t\t\tthis.overviewSlideHeight = slideSize.height + margin;\n\n\t\t\t// Reverse in RTL mode\n\t\t\tif( this.Reveal.getConfig().rtl ) {\n\t\t\t\tthis.overviewSlideWidth = -this.overviewSlideWidth;\n\t\t\t}\n\n\t\t\tthis.Reveal.updateSlidesVisibility();\n\n\t\t\tthis.layout();\n\t\t\tthis.update();\n\n\t\t\tthis.Reveal.layout();\n\n\t\t\tconst indices = this.Reveal.getIndices();\n\n\t\t\t// Notify observers of the overview showing\n\t\t\tthis.Reveal.dispatchEvent({\n\t\t\t\ttype: 'overviewshown',\n\t\t\t\tdata: {\n\t\t\t\t\t'indexh': indices.h,\n\t\t\t\t\t'indexv': indices.v,\n\t\t\t\t\t'currentSlide': this.Reveal.getCurrentSlide()\n\t\t\t\t}\n\t\t\t});\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Uses CSS transforms to position all slides in a grid for\n\t * display inside of the overview mode.\n\t */\n\tlayout() {\n\n\t\t// Layout slides\n\t\tthis.Reveal.getHorizontalSlides().forEach( ( hslide, h ) => {\n\t\t\thslide.setAttribute( 'data-index-h', h );\n\t\t\ttransformElement( hslide, 'translate3d(' + ( h * this.overviewSlideWidth ) + 'px, 0, 0)' );\n\n\t\t\tif( hslide.classList.contains( 'stack' ) ) {\n\n\t\t\t\tqueryAll( hslide, 'section' ).forEach( ( vslide, v ) => {\n\t\t\t\t\tvslide.setAttribute( 'data-index-h', h );\n\t\t\t\t\tvslide.setAttribute( 'data-index-v', v );\n\n\t\t\t\t\ttransformElement( vslide, 'translate3d(0, ' + ( v * this.overviewSlideHeight ) + 'px, 0)' );\n\t\t\t\t} );\n\n\t\t\t}\n\t\t} );\n\n\t\t// Layout slide backgrounds\n\t\tArray.from( this.Reveal.getBackgroundsElement().childNodes ).forEach( ( hbackground, h ) => {\n\t\t\ttransformElement( hbackground, 'translate3d(' + ( h * this.overviewSlideWidth ) + 'px, 0, 0)' );\n\n\t\t\tqueryAll( hbackground, '.slide-background' ).forEach( ( vbackground, v ) => {\n\t\t\t\ttransformElement( vbackground, 'translate3d(0, ' + ( v * this.overviewSlideHeight ) + 'px, 0)' );\n\t\t\t} );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Moves the overview viewport to the current slides.\n\t * Called each time the current slide changes.\n\t */\n\tupdate() {\n\n\t\tconst vmin = Math.min( window.innerWidth, window.innerHeight );\n\t\tconst scale = Math.max( vmin / 5, 150 ) / vmin;\n\t\tconst indices = this.Reveal.getIndices();\n\n\t\tthis.Reveal.transformSlides( {\n\t\t\toverview: [\n\t\t\t\t'scale('+ scale +')',\n\t\t\t\t'translateX('+ ( -indices.h * this.overviewSlideWidth ) +'px)',\n\t\t\t\t'translateY('+ ( -indices.v * this.overviewSlideHeight ) +'px)'\n\t\t\t].join( ' ' )\n\t\t} );\n\n\t}\n\n\t/**\n\t * Exits the slide overview and enters the currently\n\t * active slide.\n\t */\n\tdeactivate() {\n\n\t\t// Only proceed if enabled in config\n\t\tif( this.Reveal.getConfig().overview ) {\n\n\t\t\tthis.active = false;\n\n\t\t\tthis.Reveal.getRevealElement().classList.remove( 'overview' );\n\n\t\t\t// Temporarily add a class so that transitions can do different things\n\t\t\t// depending on whether they are exiting/entering overview, or just\n\t\t\t// moving from slide to slide\n\t\t\tthis.Reveal.getRevealElement().classList.add( 'overview-deactivating' );\n\n\t\t\tsetTimeout( () => {\n\t\t\t\tthis.Reveal.getRevealElement().classList.remove( 'overview-deactivating' );\n\t\t\t}, 1 );\n\n\t\t\t// Move the background element back out\n\t\t\tthis.Reveal.getRevealElement().appendChild( this.Reveal.getBackgroundsElement() );\n\n\t\t\t// Clean up changes made to slides\n\t\t\tqueryAll( this.Reveal.getRevealElement(), SLIDES_SELECTOR ).forEach( slide => {\n\t\t\t\ttransformElement( slide, '' );\n\n\t\t\t\tslide.removeEventListener( 'click', this.onSlideClicked, true );\n\t\t\t} );\n\n\t\t\t// Clean up changes made to backgrounds\n\t\t\tqueryAll( this.Reveal.getBackgroundsElement(), '.slide-background' ).forEach( background => {\n\t\t\t\ttransformElement( background, '' );\n\t\t\t} );\n\n\t\t\tthis.Reveal.transformSlides( { overview: '' } );\n\n\t\t\tconst indices = this.Reveal.getIndices();\n\n\t\t\tthis.Reveal.slide( indices.h, indices.v );\n\t\t\tthis.Reveal.layout();\n\t\t\tthis.Reveal.cueAutoSlide();\n\n\t\t\t// Notify observers of the overview hiding\n\t\t\tthis.Reveal.dispatchEvent({\n\t\t\t\ttype: 'overviewhidden',\n\t\t\t\tdata: {\n\t\t\t\t\t'indexh': indices.h,\n\t\t\t\t\t'indexv': indices.v,\n\t\t\t\t\t'currentSlide': this.Reveal.getCurrentSlide()\n\t\t\t\t}\n\t\t\t});\n\n\t\t}\n\t}\n\n\t/**\n\t * Toggles the slide overview mode on and off.\n\t *\n\t * @param {Boolean} [override] Flag which overrides the\n\t * toggle logic and forcibly sets the desired state. True means\n\t * overview is open, false means it's closed.\n\t */\n\ttoggle( override ) {\n\n\t\tif( typeof override === 'boolean' ) {\n\t\t\toverride ? this.activate() : this.deactivate();\n\t\t}\n\t\telse {\n\t\t\tthis.isActive() ? this.deactivate() : this.activate();\n\t\t}\n\n\t}\n\n\t/**\n\t * Checks if the overview is currently active.\n\t *\n\t * @return {Boolean} true if the overview is active,\n\t * false otherwise\n\t */\n\tisActive() {\n\n\t\treturn this.active;\n\n\t}\n\n\t/**\n\t * Invoked when a slide is and we're in the overview.\n\t *\n\t * @param {object} event\n\t */\n\tonSlideClicked( event ) {\n\n\t\tif( this.isActive() ) {\n\t\t\tevent.preventDefault();\n\n\t\t\tlet element = event.target;\n\n\t\t\twhile( element && !element.nodeName.match( /section/gi ) ) {\n\t\t\t\telement = element.parentNode;\n\t\t\t}\n\n\t\t\tif( element && !element.classList.contains( 'disabled' ) ) {\n\n\t\t\t\tthis.deactivate();\n\n\t\t\t\tif( element.nodeName.match( /section/gi ) ) {\n\t\t\t\t\tlet h = parseInt( element.getAttribute( 'data-index-h' ), 10 ),\n\t\t\t\t\t\tv = parseInt( element.getAttribute( 'data-index-v' ), 10 );\n\n\t\t\t\t\tthis.Reveal.slide( h, v );\n\t\t\t\t}\n\n\t\t\t}\n\t\t}\n\n\t}\n\n}","import { enterFullscreen } from '../utils/util.js'\n\n/**\n * Handles all reveal.js keyboard interactions.\n */\nexport default class Keyboard {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\t// A key:value map of keyboard keys and descriptions of\n\t\t// the actions they trigger\n\t\tthis.shortcuts = {};\n\n\t\t// Holds custom key code mappings\n\t\tthis.bindings = {};\n\n\t\tthis.onDocumentKeyDown = this.onDocumentKeyDown.bind( this );\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tif( config.navigationMode === 'linear' ) {\n\t\t\tthis.shortcuts['&#8594;  ,  &#8595;  ,  SPACE  ,  N  ,  L  ,  J'] = 'Next slide';\n\t\t\tthis.shortcuts['&#8592;  ,  &#8593;  ,  P  ,  H  ,  K']           = 'Previous slide';\n\t\t}\n\t\telse {\n\t\t\tthis.shortcuts['N  ,  SPACE']   = 'Next slide';\n\t\t\tthis.shortcuts['P  ,  Shift SPACE']             = 'Previous slide';\n\t\t\tthis.shortcuts['&#8592;  ,  H'] = 'Navigate left';\n\t\t\tthis.shortcuts['&#8594;  ,  L'] = 'Navigate right';\n\t\t\tthis.shortcuts['&#8593;  ,  K'] = 'Navigate up';\n\t\t\tthis.shortcuts['&#8595;  ,  J'] = 'Navigate down';\n\t\t}\n\n\t\tthis.shortcuts['Alt + &#8592;/&#8593/&#8594;/&#8595;']        = 'Navigate without fragments';\n\t\tthis.shortcuts['Shift + &#8592;/&#8593/&#8594;/&#8595;']      = 'Jump to first/last slide';\n\t\tthis.shortcuts['B  ,  .']                       = 'Pause';\n\t\tthis.shortcuts['F']                             = 'Fullscreen';\n\t\tthis.shortcuts['G']                             = 'Jump to slide';\n\t\tthis.shortcuts['ESC, O']                        = 'Slide overview';\n\n\t}\n\n\t/**\n\t * Starts listening for keyboard events.\n\t */\n\tbind() {\n\n\t\tdocument.addEventListener( 'keydown', this.onDocumentKeyDown, false );\n\n\t}\n\n\t/**\n\t * Stops listening for keyboard events.\n\t */\n\tunbind() {\n\n\t\tdocument.removeEventListener( 'keydown', this.onDocumentKeyDown, false );\n\n\t}\n\n\t/**\n\t * Add a custom key binding with optional description to\n\t * be added to the help screen.\n\t */\n\taddKeyBinding( binding, callback ) {\n\n\t\tif( typeof binding === 'object' && binding.keyCode ) {\n\t\t\tthis.bindings[binding.keyCode] = {\n\t\t\t\tcallback: callback,\n\t\t\t\tkey: binding.key,\n\t\t\t\tdescription: binding.description\n\t\t\t};\n\t\t}\n\t\telse {\n\t\t\tthis.bindings[binding] = {\n\t\t\t\tcallback: callback,\n\t\t\t\tkey: null,\n\t\t\t\tdescription: null\n\t\t\t};\n\t\t}\n\n\t}\n\n\t/**\n\t * Removes the specified custom key binding.\n\t */\n\tremoveKeyBinding( keyCode ) {\n\n\t\tdelete this.bindings[keyCode];\n\n\t}\n\n\t/**\n\t * Programmatically triggers a keyboard event\n\t *\n\t * @param {int} keyCode\n\t */\n\ttriggerKey( keyCode ) {\n\n\t\tthis.onDocumentKeyDown( { keyCode } );\n\n\t}\n\n\t/**\n\t * Registers a new shortcut to include in the help overlay\n\t *\n\t * @param {String} key\n\t * @param {String} value\n\t */\n\tregisterKeyboardShortcut( key, value ) {\n\n\t\tthis.shortcuts[key] = value;\n\n\t}\n\n\tgetShortcuts() {\n\n\t\treturn this.shortcuts;\n\n\t}\n\n\tgetBindings() {\n\n\t\treturn this.bindings;\n\n\t}\n\n\t/**\n\t * Handler for the document level 'keydown' event.\n\t *\n\t * @param {object} event\n\t */\n\tonDocumentKeyDown( event ) {\n\n\t\tlet config = this.Reveal.getConfig();\n\n\t\t// If there's a condition specified and it returns false,\n\t\t// ignore this event\n\t\tif( typeof config.keyboardCondition === 'function' && config.keyboardCondition(event) === false ) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// If keyboardCondition is set, only capture keyboard events\n\t\t// for embedded decks when they are focused\n\t\tif( config.keyboardCondition === 'focused' && !this.Reveal.isFocused() ) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// Shorthand\n\t\tlet keyCode = event.keyCode;\n\n\t\t// Remember if auto-sliding was paused so we can toggle it\n\t\tlet autoSlideWasPaused = !this.Reveal.isAutoSliding();\n\n\t\tthis.Reveal.onUserInput( event );\n\n\t\t// Is there a focused element that could be using the keyboard?\n\t\tlet activeElementIsCE = document.activeElement && document.activeElement.isContentEditable === true;\n\t\tlet activeElementIsInput = document.activeElement && document.activeElement.tagName && /input|textarea/i.test( document.activeElement.tagName );\n\t\tlet activeElementIsNotes = document.activeElement && document.activeElement.className && /speaker-notes/i.test( document.activeElement.className);\n\n\t\t// Whitelist certain modifiers for slide navigation shortcuts\n\t\tlet keyCodeUsesModifier = [32, 37, 38, 39, 40, 78, 80, 191].indexOf( event.keyCode ) !== -1;\n\n\t\t// Prevent all other events when a modifier is pressed\n\t\tlet unusedModifier = \t!( keyCodeUsesModifier && event.shiftKey || event.altKey ) &&\n\t\t\t\t\t\t\t\t( event.shiftKey || event.altKey || event.ctrlKey || event.metaKey );\n\n\t\t// Disregard the event if there's a focused element or a\n\t\t// keyboard modifier key is present\n\t\tif( activeElementIsCE || activeElementIsInput || activeElementIsNotes || unusedModifier ) return;\n\n\t\t// While paused only allow resume keyboard events; 'b', 'v', '.'\n\t\tlet resumeKeyCodes = [66,86,190,191,112];\n\t\tlet key;\n\n\t\t// Custom key bindings for togglePause should be able to resume\n\t\tif( typeof config.keyboard === 'object' ) {\n\t\t\tfor( key in config.keyboard ) {\n\t\t\t\tif( config.keyboard[key] === 'togglePause' ) {\n\t\t\t\t\tresumeKeyCodes.push( parseInt( key, 10 ) );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif( this.Reveal.isPaused() && resumeKeyCodes.indexOf( keyCode ) === -1 ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Use linear navigation if we're configured to OR if\n\t\t// the presentation is one-dimensional\n\t\tlet useLinearMode = config.navigationMode === 'linear' || !this.Reveal.hasHorizontalSlides() || !this.Reveal.hasVerticalSlides();\n\n\t\tlet triggered = false;\n\n\t\t// 1. User defined key bindings\n\t\tif( typeof config.keyboard === 'object' ) {\n\n\t\t\tfor( key in config.keyboard ) {\n\n\t\t\t\t// Check if this binding matches the pressed key\n\t\t\t\tif( parseInt( key, 10 ) === keyCode ) {\n\n\t\t\t\t\tlet value = config.keyboard[ key ];\n\n\t\t\t\t\t// Callback function\n\t\t\t\t\tif( typeof value === 'function' ) {\n\t\t\t\t\t\tvalue.apply( null, [ event ] );\n\t\t\t\t\t}\n\t\t\t\t\t// String shortcuts to reveal.js API\n\t\t\t\t\telse if( typeof value === 'string' && typeof this.Reveal[ value ] === 'function' ) {\n\t\t\t\t\t\tthis.Reveal[ value ].call();\n\t\t\t\t\t}\n\n\t\t\t\t\ttriggered = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// 2. Registered custom key bindings\n\t\tif( triggered === false ) {\n\n\t\t\tfor( key in this.bindings ) {\n\n\t\t\t\t// Check if this binding matches the pressed key\n\t\t\t\tif( parseInt( key, 10 ) === keyCode ) {\n\n\t\t\t\t\tlet action = this.bindings[ key ].callback;\n\n\t\t\t\t\t// Callback function\n\t\t\t\t\tif( typeof action === 'function' ) {\n\t\t\t\t\t\taction.apply( null, [ event ] );\n\t\t\t\t\t}\n\t\t\t\t\t// String shortcuts to reveal.js API\n\t\t\t\t\telse if( typeof action === 'string' && typeof this.Reveal[ action ] === 'function' ) {\n\t\t\t\t\t\tthis.Reveal[ action ].call();\n\t\t\t\t\t}\n\n\t\t\t\t\ttriggered = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// 3. System defined key bindings\n\t\tif( triggered === false ) {\n\n\t\t\t// Assume true and try to prove false\n\t\t\ttriggered = true;\n\n\t\t\t// P, PAGE UP\n\t\t\tif( keyCode === 80 || keyCode === 33 ) {\n\t\t\t\tthis.Reveal.prev({skipFragments: event.altKey});\n\t\t\t}\n\t\t\t// N, PAGE DOWN\n\t\t\telse if( keyCode === 78 || keyCode === 34 ) {\n\t\t\t\tthis.Reveal.next({skipFragments: event.altKey});\n\t\t\t}\n\t\t\t// H, LEFT\n\t\t\telse if( keyCode === 72 || keyCode === 37 ) {\n\t\t\t\tif( event.shiftKey ) {\n\t\t\t\t\tthis.Reveal.slide( 0 );\n\t\t\t\t}\n\t\t\t\telse if( !this.Reveal.overview.isActive() && useLinearMode ) {\n\t\t\t\t\tthis.Reveal.prev({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.Reveal.left({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t}\n\t\t\t// L, RIGHT\n\t\t\telse if( keyCode === 76 || keyCode === 39 ) {\n\t\t\t\tif( event.shiftKey ) {\n\t\t\t\t\tthis.Reveal.slide( this.Reveal.getHorizontalSlides().length - 1 );\n\t\t\t\t}\n\t\t\t\telse if( !this.Reveal.overview.isActive() && useLinearMode ) {\n\t\t\t\t\tthis.Reveal.next({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.Reveal.right({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t}\n\t\t\t// K, UP\n\t\t\telse if( keyCode === 75 || keyCode === 38 ) {\n\t\t\t\tif( event.shiftKey ) {\n\t\t\t\t\tthis.Reveal.slide( undefined, 0 );\n\t\t\t\t}\n\t\t\t\telse if( !this.Reveal.overview.isActive() && useLinearMode ) {\n\t\t\t\t\tthis.Reveal.prev({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.Reveal.up({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t}\n\t\t\t// J, DOWN\n\t\t\telse if( keyCode === 74 || keyCode === 40 ) {\n\t\t\t\tif( event.shiftKey ) {\n\t\t\t\t\tthis.Reveal.slide( undefined, Number.MAX_VALUE );\n\t\t\t\t}\n\t\t\t\telse if( !this.Reveal.overview.isActive() && useLinearMode ) {\n\t\t\t\t\tthis.Reveal.next({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.Reveal.down({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t}\n\t\t\t// HOME\n\t\t\telse if( keyCode === 36 ) {\n\t\t\t\tthis.Reveal.slide( 0 );\n\t\t\t}\n\t\t\t// END\n\t\t\telse if( keyCode === 35 ) {\n\t\t\t\tthis.Reveal.slide( this.Reveal.getHorizontalSlides().length - 1 );\n\t\t\t}\n\t\t\t// SPACE\n\t\t\telse if( keyCode === 32 ) {\n\t\t\t\tif( this.Reveal.overview.isActive() ) {\n\t\t\t\t\tthis.Reveal.overview.deactivate();\n\t\t\t\t}\n\t\t\t\tif( event.shiftKey ) {\n\t\t\t\t\tthis.Reveal.prev({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.Reveal.next({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t}\n\t\t\t// TWO-SPOT, SEMICOLON, B, V, PERIOD, LOGITECH PRESENTER TOOLS \"BLACK SCREEN\" BUTTON\n\t\t\telse if( [58, 59, 66, 86, 190].includes( keyCode ) || ( keyCode === 191 && !event.shiftKey ) ) {\n\t\t\t\tthis.Reveal.togglePause();\n\t\t\t}\n\t\t\t// F\n\t\t\telse if( keyCode === 70 ) {\n\t\t\t\tenterFullscreen( config.embedded ? this.Reveal.getViewportElement() : document.documentElement );\n\t\t\t}\n\t\t\t// A\n\t\t\telse if( keyCode === 65 ) {\n\t\t\t\tif( config.autoSlideStoppable ) {\n\t\t\t\t\tthis.Reveal.toggleAutoSlide( autoSlideWasPaused );\n\t\t\t\t}\n\t\t\t}\n\t\t\t// G\n\t\t\telse if( keyCode === 71 ) {\n\t\t\t\tif( config.jumpToSlide ) {\n\t\t\t\t\tthis.Reveal.toggleJumpToSlide();\n\t\t\t\t}\n\t\t\t}\n\t\t\t// ?\n\t\t\telse if( keyCode === 191 && event.shiftKey ) {\n\t\t\t\tthis.Reveal.toggleHelp();\n\t\t\t}\n\t\t\t// F1\n\t\t\telse if( keyCode === 112 ) {\n\t\t\t\tthis.Reveal.toggleHelp();\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttriggered = false;\n\t\t\t}\n\n\t\t}\n\n\t\t// If the input resulted in a triggered action we should prevent\n\t\t// the browsers default behavior\n\t\tif( triggered ) {\n\t\t\tevent.preventDefault && event.preventDefault();\n\t\t}\n\t\t// ESC or O key\n\t\telse if( keyCode === 27 || keyCode === 79 ) {\n\t\t\tif( this.Reveal.closeOverlay() === false ) {\n\t\t\t\tthis.Reveal.overview.toggle();\n\t\t\t}\n\n\t\t\tevent.preventDefault && event.preventDefault();\n\t\t}\n\n\t\t// If auto-sliding is enabled we need to cue up\n\t\t// another timeout\n\t\tthis.Reveal.cueAutoSlide();\n\n\t}\n\n}\n","/**\n * Reads and writes the URL based on reveal.js' current state.\n */\nexport default class Location {\n\n\t// The minimum number of milliseconds that must pass between\n\t// calls to history.replaceState\n\tMAX_REPLACE_STATE_FREQUENCY = 1000\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\t// Delays updates to the URL due to a Chrome thumbnailer bug\n\t\tthis.writeURLTimeout = 0;\n\n\t\tthis.replaceStateTimestamp = 0;\n\n\t\tthis.onWindowHashChange = this.onWindowHashChange.bind( this );\n\n\t}\n\n\tbind() {\n\n\t\twindow.addEventListener( 'hashchange', this.onWindowHashChange, false );\n\n\t}\n\n\tunbind() {\n\n\t\twindow.removeEventListener( 'hashchange', this.onWindowHashChange, false );\n\n\t}\n\n\t/**\n\t * Returns the slide indices for the given hash link.\n\t *\n\t * @param {string} [hash] the hash string that we want to\n\t * find the indices for\n\t *\n\t * @returns slide indices or null\n\t */\n\tgetIndicesFromHash( hash=window.location.hash, options={} ) {\n\n\t\t// Attempt to parse the hash as either an index or name\n\t\tlet name = hash.replace( /^#\\/?/, '' );\n\t\tlet bits = name.split( '/' );\n\n\t\t// If the first bit is not fully numeric and there is a name we\n\t\t// can assume that this is a named link\n\t\tif( !/^[0-9]*$/.test( bits[0] ) && name.length ) {\n\t\t\tlet slide;\n\n\t\t\tlet f;\n\n\t\t\t// Parse named links with fragments (#/named-link/2)\n\t\t\tif( /\\/[-\\d]+$/g.test( name ) ) {\n\t\t\t\tf = parseInt( name.split( '/' ).pop(), 10 );\n\t\t\t\tf = isNaN(f) ? undefined : f;\n\t\t\t\tname = name.split( '/' ).shift();\n\t\t\t}\n\n\t\t\t// Ensure the named link is a valid HTML ID attribute\n\t\t\ttry {\n\t\t\t\tslide = document\n\t\t\t\t\t.getElementById( decodeURIComponent( name ) )\n\t\t\t\t\t.closest('.slides section');\n\t\t\t}\n\t\t\tcatch ( error ) { }\n\n\t\t\tif( slide ) {\n\t\t\t\treturn { ...this.Reveal.getIndices( slide ), f };\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tconst config = this.Reveal.getConfig();\n\t\t\tlet hashIndexBase = config.hashOneBasedIndex || options.oneBasedIndex ? 1 : 0;\n\n\t\t\t// Read the index components of the hash\n\t\t\tlet h = ( parseInt( bits[0], 10 ) - hashIndexBase ) || 0,\n\t\t\t\tv = ( parseInt( bits[1], 10 ) - hashIndexBase ) || 0,\n\t\t\t\tf;\n\n\t\t\tif( config.fragmentInURL ) {\n\t\t\t\tf = parseInt( bits[2], 10 );\n\t\t\t\tif( isNaN( f ) ) {\n\t\t\t\t\tf = undefined;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn { h, v, f };\n\t\t}\n\n\t\t// The hash couldn't be parsed or no matching named link was found\n\t\treturn null\n\n\t}\n\n\t/**\n\t * Reads the current URL (hash) and navigates accordingly.\n\t */\n\treadURL() {\n\n\t\tconst currentIndices = this.Reveal.getIndices();\n\t\tconst newIndices = this.getIndicesFromHash();\n\n\t\tif( newIndices ) {\n\t\t\tif( ( newIndices.h !== currentIndices.h || newIndices.v !== currentIndices.v || newIndices.f !== undefined ) ) {\n\t\t\t\t\tthis.Reveal.slide( newIndices.h, newIndices.v, newIndices.f );\n\t\t\t}\n\t\t}\n\t\t// If no new indices are available, we're trying to navigate to\n\t\t// a slide hash that does not exist\n\t\telse {\n\t\t\tthis.Reveal.slide( currentIndices.h || 0, currentIndices.v || 0 );\n\t\t}\n\n\t}\n\n\t/**\n\t * Updates the page URL (hash) to reflect the current\n\t * state.\n\t *\n\t * @param {number} delay The time in ms to wait before\n\t * writing the hash\n\t */\n\twriteURL( delay ) {\n\n\t\tlet config = this.Reveal.getConfig();\n\t\tlet currentSlide = this.Reveal.getCurrentSlide();\n\n\t\t// Make sure there's never more than one timeout running\n\t\tclearTimeout( this.writeURLTimeout );\n\n\t\t// If a delay is specified, timeout this call\n\t\tif( typeof delay === 'number' ) {\n\t\t\tthis.writeURLTimeout = setTimeout( this.writeURL, delay );\n\t\t}\n\t\telse if( currentSlide ) {\n\n\t\t\tlet hash = this.getHash();\n\n\t\t\t// If we're configured to push to history OR the history\n\t\t\t// API is not available.\n\t\t\tif( config.history ) {\n\t\t\t\twindow.location.hash = hash;\n\t\t\t}\n\t\t\t// If we're configured to reflect the current slide in the\n\t\t\t// URL without pushing to history.\n\t\t\telse if( config.hash ) {\n\t\t\t\t// If the hash is empty, don't add it to the URL\n\t\t\t\tif( hash === '/' ) {\n\t\t\t\t\tthis.debouncedReplaceState( window.location.pathname + window.location.search );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.debouncedReplaceState( '#' + hash );\n\t\t\t\t}\n\t\t\t}\n\t\t\t// UPDATE: The below nuking of all hash changes breaks\n\t\t\t// anchors on pages where reveal.js is running. Removed\n\t\t\t// in 4.0. Why was it here in the first place? ¯\\_(ツ)_/¯\n\t\t\t//\n\t\t\t// If history and hash are both disabled, a hash may still\n\t\t\t// be added to the URL by clicking on a href with a hash\n\t\t\t// target. Counter this by always removing the hash.\n\t\t\t// else {\n\t\t\t// \twindow.history.replaceState( null, null, window.location.pathname + window.location.search );\n\t\t\t// }\n\n\t\t}\n\n\t}\n\n\treplaceState( url ) {\n\n\t\twindow.history.replaceState( null, null, url );\n\t\tthis.replaceStateTimestamp = Date.now();\n\n\t}\n\n\tdebouncedReplaceState( url ) {\n\n\t\tclearTimeout( this.replaceStateTimeout );\n\n\t\tif( Date.now() - this.replaceStateTimestamp > this.MAX_REPLACE_STATE_FREQUENCY ) {\n\t\t\tthis.replaceState( url );\n\t\t}\n\t\telse {\n\t\t\tthis.replaceStateTimeout = setTimeout( () => this.replaceState( url ), this.MAX_REPLACE_STATE_FREQUENCY );\n\t\t}\n\n\t}\n\n\t/**\n\t * Return a hash URL that will resolve to the given slide location.\n\t *\n\t * @param {HTMLElement} [slide=currentSlide] The slide to link to\n\t */\n\tgetHash( slide ) {\n\n\t\tlet url = '/';\n\n\t\t// Attempt to create a named link based on the slide's ID\n\t\tlet s = slide || this.Reveal.getCurrentSlide();\n\t\tlet id = s ? s.getAttribute( 'id' ) : null;\n\t\tif( id ) {\n\t\t\tid = encodeURIComponent( id );\n\t\t}\n\n\t\tlet index = this.Reveal.getIndices( slide );\n\t\tif( !this.Reveal.getConfig().fragmentInURL ) {\n\t\t\tindex.f = undefined;\n\t\t}\n\n\t\t// If the current slide has an ID, use that as a named link,\n\t\t// but we don't support named links with a fragment index\n\t\tif( typeof id === 'string' && id.length ) {\n\t\t\turl = '/' + id;\n\n\t\t\t// If there is also a fragment, append that at the end\n\t\t\t// of the named link, like: #/named-link/2\n\t\t\tif( index.f >= 0 ) url += '/' + index.f;\n\t\t}\n\t\t// Otherwise use the /h/v index\n\t\telse {\n\t\t\tlet hashIndexBase = this.Reveal.getConfig().hashOneBasedIndex ? 1 : 0;\n\t\t\tif( index.h > 0 || index.v > 0 || index.f >= 0 ) url += index.h + hashIndexBase;\n\t\t\tif( index.v > 0 || index.f >= 0 ) url += '/' + (index.v + hashIndexBase );\n\t\t\tif( index.f >= 0 ) url += '/' + index.f;\n\t\t}\n\n\t\treturn url;\n\n\t}\n\n\t/**\n\t * Handler for the window level 'hashchange' event.\n\t *\n\t * @param {object} [event]\n\t */\n\tonWindowHashChange( event ) {\n\n\t\tthis.readURL();\n\n\t}\n\n}","import { queryAll } from '../utils/util.js'\nimport { isAndroid } from '../utils/device.js'\n\n/**\n * Manages our presentation controls. This includes both\n * the built-in control arrows as well as event monitoring\n * of any elements within the presentation with either of the\n * following helper classes:\n * - .navigate-up\n * - .navigate-right\n * - .navigate-down\n * - .navigate-left\n * - .navigate-next\n * - .navigate-prev\n */\nexport default class Controls {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\tthis.onNavigateLeftClicked = this.onNavigateLeftClicked.bind( this );\n\t\tthis.onNavigateRightClicked = this.onNavigateRightClicked.bind( this );\n\t\tthis.onNavigateUpClicked = this.onNavigateUpClicked.bind( this );\n\t\tthis.onNavigateDownClicked = this.onNavigateDownClicked.bind( this );\n\t\tthis.onNavigatePrevClicked = this.onNavigatePrevClicked.bind( this );\n\t\tthis.onNavigateNextClicked = this.onNavigateNextClicked.bind( this );\n\n\t}\n\n\trender() {\n\n\t\tconst rtl = this.Reveal.getConfig().rtl;\n\t\tconst revealElement = this.Reveal.getRevealElement();\n\n\t\tthis.element = document.createElement( 'aside' );\n\t\tthis.element.className = 'controls';\n\t\tthis.element.innerHTML =\n\t\t\t`<button class=\"navigate-left\" aria-label=\"${ rtl ? 'next slide' : 'previous slide' }\"><div class=\"controls-arrow\"></div></button>\n\t\t\t<button class=\"navigate-right\" aria-label=\"${ rtl ? 'previous slide' : 'next slide' }\"><div class=\"controls-arrow\"></div></button>\n\t\t\t<button class=\"navigate-up\" aria-label=\"above slide\"><div class=\"controls-arrow\"></div></button>\n\t\t\t<button class=\"navigate-down\" aria-label=\"below slide\"><div class=\"controls-arrow\"></div></button>`;\n\n\t\tthis.Reveal.getRevealElement().appendChild( this.element );\n\n\t\t// There can be multiple instances of controls throughout the page\n\t\tthis.controlsLeft = queryAll( revealElement, '.navigate-left' );\n\t\tthis.controlsRight = queryAll( revealElement, '.navigate-right' );\n\t\tthis.controlsUp = queryAll( revealElement, '.navigate-up' );\n\t\tthis.controlsDown = queryAll( revealElement, '.navigate-down' );\n\t\tthis.controlsPrev = queryAll( revealElement, '.navigate-prev' );\n\t\tthis.controlsNext = queryAll( revealElement, '.navigate-next' );\n\n\t\t// The left, right and down arrows in the standard reveal.js controls\n\t\tthis.controlsRightArrow = this.element.querySelector( '.navigate-right' );\n\t\tthis.controlsLeftArrow = this.element.querySelector( '.navigate-left' );\n\t\tthis.controlsDownArrow = this.element.querySelector( '.navigate-down' );\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tthis.element.style.display = config.controls ? 'block' : 'none';\n\n\t\tthis.element.setAttribute( 'data-controls-layout', config.controlsLayout );\n\t\tthis.element.setAttribute( 'data-controls-back-arrows', config.controlsBackArrows );\n\n\t}\n\n\tbind() {\n\n\t\t// Listen to both touch and click events, in case the device\n\t\t// supports both\n\t\tlet pointerEvents = [ 'touchstart', 'click' ];\n\n\t\t// Only support touch for Android, fixes double navigations in\n\t\t// stock browser\n\t\tif( isAndroid ) {\n\t\t\tpointerEvents = [ 'touchstart' ];\n\t\t}\n\n\t\tpointerEvents.forEach( eventName => {\n\t\t\tthis.controlsLeft.forEach( el => el.addEventListener( eventName, this.onNavigateLeftClicked, false ) );\n\t\t\tthis.controlsRight.forEach( el => el.addEventListener( eventName, this.onNavigateRightClicked, false ) );\n\t\t\tthis.controlsUp.forEach( el => el.addEventListener( eventName, this.onNavigateUpClicked, false ) );\n\t\t\tthis.controlsDown.forEach( el => el.addEventListener( eventName, this.onNavigateDownClicked, false ) );\n\t\t\tthis.controlsPrev.forEach( el => el.addEventListener( eventName, this.onNavigatePrevClicked, false ) );\n\t\t\tthis.controlsNext.forEach( el => el.addEventListener( eventName, this.onNavigateNextClicked, false ) );\n\t\t} );\n\n\t}\n\n\tunbind() {\n\n\t\t[ 'touchstart', 'click' ].forEach( eventName => {\n\t\t\tthis.controlsLeft.forEach( el => el.removeEventListener( eventName, this.onNavigateLeftClicked, false ) );\n\t\t\tthis.controlsRight.forEach( el => el.removeEventListener( eventName, this.onNavigateRightClicked, false ) );\n\t\t\tthis.controlsUp.forEach( el => el.removeEventListener( eventName, this.onNavigateUpClicked, false ) );\n\t\t\tthis.controlsDown.forEach( el => el.removeEventListener( eventName, this.onNavigateDownClicked, false ) );\n\t\t\tthis.controlsPrev.forEach( el => el.removeEventListener( eventName, this.onNavigatePrevClicked, false ) );\n\t\t\tthis.controlsNext.forEach( el => el.removeEventListener( eventName, this.onNavigateNextClicked, false ) );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Updates the state of all control/navigation arrows.\n\t */\n\tupdate() {\n\n\t\tlet routes = this.Reveal.availableRoutes();\n\n\t\t// Remove the 'enabled' class from all directions\n\t\t[...this.controlsLeft, ...this.controlsRight, ...this.controlsUp, ...this.controlsDown, ...this.controlsPrev, ...this.controlsNext].forEach( node => {\n\t\t\tnode.classList.remove( 'enabled', 'fragmented' );\n\n\t\t\t// Set 'disabled' attribute on all directions\n\t\t\tnode.setAttribute( 'disabled', 'disabled' );\n\t\t} );\n\n\t\t// Add the 'enabled' class to the available routes; remove 'disabled' attribute to enable buttons\n\t\tif( routes.left ) this.controlsLeft.forEach( el => { el.classList.add( 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\tif( routes.right ) this.controlsRight.forEach( el => { el.classList.add( 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\tif( routes.up ) this.controlsUp.forEach( el => { el.classList.add( 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\tif( routes.down ) this.controlsDown.forEach( el => { el.classList.add( 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\n\t\t// Prev/next buttons\n\t\tif( routes.left || routes.up ) this.controlsPrev.forEach( el => { el.classList.add( 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\tif( routes.right || routes.down ) this.controlsNext.forEach( el => { el.classList.add( 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\n\t\t// Highlight fragment directions\n\t\tlet currentSlide = this.Reveal.getCurrentSlide();\n\t\tif( currentSlide ) {\n\n\t\t\tlet fragmentsRoutes = this.Reveal.fragments.availableRoutes();\n\n\t\t\t// Always apply fragment decorator to prev/next buttons\n\t\t\tif( fragmentsRoutes.prev ) this.controlsPrev.forEach( el => { el.classList.add( 'fragmented', 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\t\tif( fragmentsRoutes.next ) this.controlsNext.forEach( el => { el.classList.add( 'fragmented', 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\n\t\t\t// Apply fragment decorators to directional buttons based on\n\t\t\t// what slide axis they are in\n\t\t\tif( this.Reveal.isVerticalSlide( currentSlide ) ) {\n\t\t\t\tif( fragmentsRoutes.prev ) this.controlsUp.forEach( el => { el.classList.add( 'fragmented', 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\t\t\tif( fragmentsRoutes.next ) this.controlsDown.forEach( el => { el.classList.add( 'fragmented', 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif( fragmentsRoutes.prev ) this.controlsLeft.forEach( el => { el.classList.add( 'fragmented', 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\t\t\tif( fragmentsRoutes.next ) this.controlsRight.forEach( el => { el.classList.add( 'fragmented', 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\t\t}\n\n\t\t}\n\n\t\tif( this.Reveal.getConfig().controlsTutorial ) {\n\n\t\t\tlet indices = this.Reveal.getIndices();\n\n\t\t\t// Highlight control arrows with an animation to ensure\n\t\t\t// that the viewer knows how to navigate\n\t\t\tif( !this.Reveal.hasNavigatedVertically() && routes.down ) {\n\t\t\t\tthis.controlsDownArrow.classList.add( 'highlight' );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.controlsDownArrow.classList.remove( 'highlight' );\n\n\t\t\t\tif( this.Reveal.getConfig().rtl ) {\n\n\t\t\t\t\tif( !this.Reveal.hasNavigatedHorizontally() && routes.left && indices.v === 0 ) {\n\t\t\t\t\t\tthis.controlsLeftArrow.classList.add( 'highlight' );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.controlsLeftArrow.classList.remove( 'highlight' );\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif( !this.Reveal.hasNavigatedHorizontally() && routes.right && indices.v === 0 ) {\n\t\t\t\t\t\tthis.controlsRightArrow.classList.add( 'highlight' );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.controlsRightArrow.classList.remove( 'highlight' );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tdestroy() {\n\n\t\tthis.unbind();\n\t\tthis.element.remove();\n\n\t}\n\n\t/**\n\t * Event handlers for navigation control buttons.\n\t */\n\tonNavigateLeftClicked( event ) {\n\n\t\tevent.preventDefault();\n\t\tthis.Reveal.onUserInput();\n\n\t\tif( this.Reveal.getConfig().navigationMode === 'linear' ) {\n\t\t\tthis.Reveal.prev();\n\t\t}\n\t\telse {\n\t\t\tthis.Reveal.left();\n\t\t}\n\n\t}\n\n\tonNavigateRightClicked( event ) {\n\n\t\tevent.preventDefault();\n\t\tthis.Reveal.onUserInput();\n\n\t\tif( this.Reveal.getConfig().navigationMode === 'linear' ) {\n\t\t\tthis.Reveal.next();\n\t\t}\n\t\telse {\n\t\t\tthis.Reveal.right();\n\t\t}\n\n\t}\n\n\tonNavigateUpClicked( event ) {\n\n\t\tevent.preventDefault();\n\t\tthis.Reveal.onUserInput();\n\n\t\tthis.Reveal.up();\n\n\t}\n\n\tonNavigateDownClicked( event ) {\n\n\t\tevent.preventDefault();\n\t\tthis.Reveal.onUserInput();\n\n\t\tthis.Reveal.down();\n\n\t}\n\n\tonNavigatePrevClicked( event ) {\n\n\t\tevent.preventDefault();\n\t\tthis.Reveal.onUserInput();\n\n\t\tthis.Reveal.prev();\n\n\t}\n\n\tonNavigateNextClicked( event ) {\n\n\t\tevent.preventDefault();\n\t\tthis.Reveal.onUserInput();\n\n\t\tthis.Reveal.next();\n\n\t}\n\n\n}","/**\n * Creates a visual progress bar for the presentation.\n */\nexport default class Progress {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\tthis.onProgressClicked = this.onProgressClicked.bind( this );\n\n\t}\n\n\trender() {\n\n\t\tthis.element = document.createElement( 'div' );\n\t\tthis.element.className = 'progress';\n\t\tthis.Reveal.getRevealElement().appendChild( this.element );\n\n\t\tthis.bar = document.createElement( 'span' );\n\t\tthis.element.appendChild( this.bar );\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tthis.element.style.display = config.progress ? 'block' : 'none';\n\n\t}\n\n\tbind() {\n\n\t\tif( this.Reveal.getConfig().progress && this.element ) {\n\t\t\tthis.element.addEventListener( 'click', this.onProgressClicked, false );\n\t\t}\n\n\t}\n\n\tunbind() {\n\n\t\tif ( this.Reveal.getConfig().progress && this.element ) {\n\t\t\tthis.element.removeEventListener( 'click', this.onProgressClicked, false );\n\t\t}\n\n\t}\n\n\t/**\n\t * Updates the progress bar to reflect the current slide.\n\t */\n\tupdate() {\n\n\t\t// Update progress if enabled\n\t\tif( this.Reveal.getConfig().progress && this.bar ) {\n\n\t\t\tlet scale = this.Reveal.getProgress();\n\n\t\t\t// Don't fill the progress bar if there's only one slide\n\t\t\tif( this.Reveal.getTotalSlides() < 2 ) {\n\t\t\t\tscale = 0;\n\t\t\t}\n\n\t\t\tthis.bar.style.transform = 'scaleX('+ scale +')';\n\n\t\t}\n\n\t}\n\n\tgetMaxWidth() {\n\n\t\treturn this.Reveal.getRevealElement().offsetWidth;\n\n\t}\n\n\t/**\n\t * Clicking on the progress bar results in a navigation to the\n\t * closest approximate horizontal slide using this equation:\n\t *\n\t * ( clickX / presentationWidth ) * numberOfSlides\n\t *\n\t * @param {object} event\n\t */\n\tonProgressClicked( event ) {\n\n\t\tthis.Reveal.onUserInput( event );\n\n\t\tevent.preventDefault();\n\n\t\tlet slides = this.Reveal.getSlides();\n\t\tlet slidesTotal = slides.length;\n\t\tlet slideIndex = Math.floor( ( event.clientX / this.getMaxWidth() ) * slidesTotal );\n\n\t\tif( this.Reveal.getConfig().rtl ) {\n\t\t\tslideIndex = slidesTotal - slideIndex;\n\t\t}\n\n\t\tlet targetIndices = this.Reveal.getIndices(slides[slideIndex]);\n\t\tthis.Reveal.slide( targetIndices.h, targetIndices.v );\n\n\t}\n\n\tdestroy() {\n\n\t\tthis.element.remove();\n\n\t}\n\n}","/**\n * Handles hiding of the pointer/cursor when inactive.\n */\nexport default class Pointer {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\t// Throttles mouse wheel navigation\n\t\tthis.lastMouseWheelStep = 0;\n\n\t\t// Is the mouse pointer currently hidden from view\n\t\tthis.cursorHidden = false;\n\n\t\t// Timeout used to determine when the cursor is inactive\n\t\tthis.cursorInactiveTimeout = 0;\n\n\t\tthis.onDocumentCursorActive = this.onDocumentCursorActive.bind( this );\n\t\tthis.onDocumentMouseScroll = this.onDocumentMouseScroll.bind( this );\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tif( config.mouseWheel ) {\n\t\t\tdocument.addEventListener( 'wheel', this.onDocumentMouseScroll, false );\n\t\t}\n\t\telse {\n\t\t\tdocument.removeEventListener( 'wheel', this.onDocumentMouseScroll, false );\n\t\t}\n\n\t\t// Auto-hide the mouse pointer when its inactive\n\t\tif( config.hideInactiveCursor ) {\n\t\t\tdocument.addEventListener( 'mousemove', this.onDocumentCursorActive, false );\n\t\t\tdocument.addEventListener( 'mousedown', this.onDocumentCursorActive, false );\n\t\t}\n\t\telse {\n\t\t\tthis.showCursor();\n\n\t\t\tdocument.removeEventListener( 'mousemove', this.onDocumentCursorActive, false );\n\t\t\tdocument.removeEventListener( 'mousedown', this.onDocumentCursorActive, false );\n\t\t}\n\n\t}\n\n\t/**\n\t * Shows the mouse pointer after it has been hidden with\n\t * #hideCursor.\n\t */\n\tshowCursor() {\n\n\t\tif( this.cursorHidden ) {\n\t\t\tthis.cursorHidden = false;\n\t\t\tthis.Reveal.getRevealElement().style.cursor = '';\n\t\t}\n\n\t}\n\n\t/**\n\t * Hides the mouse pointer when it's on top of the .reveal\n\t * container.\n\t */\n\thideCursor() {\n\n\t\tif( this.cursorHidden === false ) {\n\t\t\tthis.cursorHidden = true;\n\t\t\tthis.Reveal.getRevealElement().style.cursor = 'none';\n\t\t}\n\n\t}\n\n\tdestroy() {\n\n\t\tthis.showCursor();\n\n\t\tdocument.removeEventListener( 'wheel', this.onDocumentMouseScroll, false );\n\t\tdocument.removeEventListener( 'mousemove', this.onDocumentCursorActive, false );\n\t\tdocument.removeEventListener( 'mousedown', this.onDocumentCursorActive, false );\n\n\t}\n\n\t/**\n\t * Called whenever there is mouse input at the document level\n\t * to determine if the cursor is active or not.\n\t *\n\t * @param {object} event\n\t */\n\tonDocumentCursorActive( event ) {\n\n\t\tthis.showCursor();\n\n\t\tclearTimeout( this.cursorInactiveTimeout );\n\n\t\tthis.cursorInactiveTimeout = setTimeout( this.hideCursor.bind( this ), this.Reveal.getConfig().hideCursorTime );\n\n\t}\n\n\t/**\n\t * Handles mouse wheel scrolling, throttled to avoid skipping\n\t * multiple slides.\n\t *\n\t * @param {object} event\n\t */\n\tonDocumentMouseScroll( event ) {\n\n\t\tif( Date.now() - this.lastMouseWheelStep > 1000 ) {\n\n\t\t\tthis.lastMouseWheelStep = Date.now();\n\n\t\t\tlet delta = event.detail || -event.wheelDelta;\n\t\t\tif( delta > 0 ) {\n\t\t\t\tthis.Reveal.next();\n\t\t\t}\n\t\t\telse if( delta < 0 ) {\n\t\t\t\tthis.Reveal.prev();\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n","/**\n * Loads a JavaScript file from the given URL and executes it.\n *\n * @param {string} url Address of the .js file to load\n * @param {function} callback Method to invoke when the script\n * has loaded and executed\n */\nexport const loadScript = ( url, callback ) => {\n\n\tconst script = document.createElement( 'script' );\n\tscript.type = 'text/javascript';\n\tscript.async = false;\n\tscript.defer = false;\n\tscript.src = url;\n\n\tif( typeof callback === 'function' ) {\n\n\t\t// Success callback\n\t\tscript.onload = script.onreadystatechange = event => {\n\t\t\tif( event.type === 'load' || /loaded|complete/.test( script.readyState ) ) {\n\n\t\t\t\t// Kill event listeners\n\t\t\t\tscript.onload = script.onreadystatechange = script.onerror = null;\n\n\t\t\t\tcallback();\n\n\t\t\t}\n\t\t};\n\n\t\t// Error callback\n\t\tscript.onerror = err => {\n\n\t\t\t// Kill event listeners\n\t\t\tscript.onload = script.onreadystatechange = script.onerror = null;\n\n\t\t\tcallback( new Error( 'Failed loading script: ' + script.src + '\\n' + err ) );\n\n\t\t};\n\n\t}\n\n\t// Append the script at the end of <head>\n\tconst head = document.querySelector( 'head' );\n\thead.insertBefore( script, head.lastChild );\n\n}","import { loadScript } from '../utils/loader.js'\n\n/**\n * Manages loading and registering of reveal.js plugins.\n */\nexport default class Plugins {\n\n\tconstructor( reveal ) {\n\n\t\tthis.Reveal = reveal;\n\n\t\t// Flags our current state (idle -> loading -> loaded)\n\t\tthis.state = 'idle';\n\n\t\t// An id:instance map of currently registered plugins\n\t\tthis.registeredPlugins = {};\n\n\t\tthis.asyncDependencies = [];\n\n\t}\n\n\t/**\n\t * Loads reveal.js dependencies, registers and\n\t * initializes plugins.\n\t *\n\t * Plugins are direct references to a reveal.js plugin\n\t * object that we register and initialize after any\n\t * synchronous dependencies have loaded.\n\t *\n\t * Dependencies are defined via the 'dependencies' config\n\t * option and will be loaded prior to starting reveal.js.\n\t * Some dependencies may have an 'async' flag, if so they\n\t * will load after reveal.js has been started up.\n\t */\n\tload( plugins, dependencies ) {\n\n\t\tthis.state = 'loading';\n\n\t\tplugins.forEach( this.registerPlugin.bind( this ) );\n\n\t\treturn new Promise( resolve => {\n\n\t\t\tlet scripts = [],\n\t\t\t\tscriptsToLoad = 0;\n\n\t\t\tdependencies.forEach( s => {\n\t\t\t\t// Load if there's no condition or the condition is truthy\n\t\t\t\tif( !s.condition || s.condition() ) {\n\t\t\t\t\tif( s.async ) {\n\t\t\t\t\t\tthis.asyncDependencies.push( s );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tscripts.push( s );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\tif( scripts.length ) {\n\t\t\t\tscriptsToLoad = scripts.length;\n\n\t\t\t\tconst scriptLoadedCallback = (s) => {\n\t\t\t\t\tif( s && typeof s.callback === 'function' ) s.callback();\n\n\t\t\t\t\tif( --scriptsToLoad === 0 ) {\n\t\t\t\t\t\tthis.initPlugins().then( resolve );\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\t// Load synchronous scripts\n\t\t\t\tscripts.forEach( s => {\n\t\t\t\t\tif( typeof s.id === 'string' ) {\n\t\t\t\t\t\tthis.registerPlugin( s );\n\t\t\t\t\t\tscriptLoadedCallback( s );\n\t\t\t\t\t}\n\t\t\t\t\telse if( typeof s.src === 'string' ) {\n\t\t\t\t\t\tloadScript( s.src, () => scriptLoadedCallback(s) );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tconsole.warn( 'Unrecognized plugin format', s );\n\t\t\t\t\t\tscriptLoadedCallback();\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.initPlugins().then( resolve );\n\t\t\t}\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * Initializes our plugins and waits for them to be ready\n\t * before proceeding.\n\t */\n\tinitPlugins() {\n\n\t\treturn new Promise( resolve => {\n\n\t\t\tlet pluginValues = Object.values( this.registeredPlugins );\n\t\t\tlet pluginsToInitialize = pluginValues.length;\n\n\t\t\t// If there are no plugins, skip this step\n\t\t\tif( pluginsToInitialize === 0 ) {\n\t\t\t\tthis.loadAsync().then( resolve );\n\t\t\t}\n\t\t\t// ... otherwise initialize plugins\n\t\t\telse {\n\n\t\t\t\tlet initNextPlugin;\n\n\t\t\t\tlet afterPlugInitialized = () => {\n\t\t\t\t\tif( --pluginsToInitialize === 0 ) {\n\t\t\t\t\t\tthis.loadAsync().then( resolve );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tinitNextPlugin();\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tlet i = 0;\n\n\t\t\t\t// Initialize plugins serially\n\t\t\t\tinitNextPlugin = () => {\n\n\t\t\t\t\tlet plugin = pluginValues[i++];\n\n\t\t\t\t\t// If the plugin has an 'init' method, invoke it\n\t\t\t\t\tif( typeof plugin.init === 'function' ) {\n\t\t\t\t\t\tlet promise = plugin.init( this.Reveal );\n\n\t\t\t\t\t\t// If the plugin returned a Promise, wait for it\n\t\t\t\t\t\tif( promise && typeof promise.then === 'function' ) {\n\t\t\t\t\t\t\tpromise.then( afterPlugInitialized );\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tafterPlugInitialized();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tafterPlugInitialized();\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tinitNextPlugin();\n\n\t\t\t}\n\n\t\t} )\n\n\t}\n\n\t/**\n\t * Loads all async reveal.js dependencies.\n\t */\n\tloadAsync() {\n\n\t\tthis.state = 'loaded';\n\n\t\tif( this.asyncDependencies.length ) {\n\t\t\tthis.asyncDependencies.forEach( s => {\n\t\t\t\tloadScript( s.src, s.callback );\n\t\t\t} );\n\t\t}\n\n\t\treturn Promise.resolve();\n\n\t}\n\n\t/**\n\t * Registers a new plugin with this reveal.js instance.\n\t *\n\t * reveal.js waits for all registered plugins to initialize\n\t * before considering itself ready, as long as the plugin\n\t * is registered before calling `Reveal.initialize()`.\n\t */\n\tregisterPlugin( plugin ) {\n\n\t\t// Backwards compatibility to make reveal.js ~3.9.0\n\t\t// plugins work with reveal.js 4.0.0\n\t\tif( arguments.length === 2 && typeof arguments[0] === 'string' ) {\n\t\t\tplugin = arguments[1];\n\t\t\tplugin.id = arguments[0];\n\t\t}\n\t\t// Plugin can optionally be a function which we call\n\t\t// to create an instance of the plugin\n\t\telse if( typeof plugin === 'function' ) {\n\t\t\tplugin = plugin();\n\t\t}\n\n\t\tlet id = plugin.id;\n\n\t\tif( typeof id !== 'string' ) {\n\t\t\tconsole.warn( 'Unrecognized plugin format; can\\'t find plugin.id', plugin );\n\t\t}\n\t\telse if( this.registeredPlugins[id] === undefined ) {\n\t\t\tthis.registeredPlugins[id] = plugin;\n\n\t\t\t// If a plugin is registered after reveal.js is loaded,\n\t\t\t// initialize it right away\n\t\t\tif( this.state === 'loaded' && typeof plugin.init === 'function' ) {\n\t\t\t\tplugin.init( this.Reveal );\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tconsole.warn( 'reveal.js: \"'+ id +'\" plugin has already been registered' );\n\t\t}\n\n\t}\n\n\t/**\n\t * Checks if a specific plugin has been registered.\n\t *\n\t * @param {String} id Unique plugin identifier\n\t */\n\thasPlugin( id ) {\n\n\t\treturn !!this.registeredPlugins[id];\n\n\t}\n\n\t/**\n\t * Returns the specific plugin instance, if a plugin\n\t * with the given ID has been registered.\n\t *\n\t * @param {String} id Unique plugin identifier\n\t */\n\tgetPlugin( id ) {\n\n\t\treturn this.registeredPlugins[id];\n\n\t}\n\n\tgetRegisteredPlugins() {\n\n\t\treturn this.registeredPlugins;\n\n\t}\n\n\tdestroy() {\n\n\t\tObject.values( this.registeredPlugins ).forEach( plugin => {\n\t\t\tif( typeof plugin.destroy === 'function' ) {\n\t\t\t\tplugin.destroy();\n\t\t\t}\n\t\t} );\n\n\t\tthis.registeredPlugins = {};\n\t\tthis.asyncDependencies = [];\n\n\t}\n\n}\n","import { isAndroid } from '../utils/device.js'\nimport { matches } from '../utils/util.js'\n\nconst SWIPE_THRESHOLD = 40;\n\n/**\n * Controls all touch interactions and navigations for\n * a presentation.\n */\nexport default class Touch {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\t// Holds information about the currently ongoing touch interaction\n\t\tthis.touchStartX = 0;\n\t\tthis.touchStartY = 0;\n\t\tthis.touchStartCount = 0;\n\t\tthis.touchCaptured = false;\n\n\t\tthis.onPointerDown = this.onPointerDown.bind( this );\n\t\tthis.onPointerMove = this.onPointerMove.bind( this );\n\t\tthis.onPointerUp = this.onPointerUp.bind( this );\n\t\tthis.onTouchStart = this.onTouchStart.bind( this );\n\t\tthis.onTouchMove = this.onTouchMove.bind( this );\n\t\tthis.onTouchEnd = this.onTouchEnd.bind( this );\n\n\t}\n\n\t/**\n\t *\n\t */\n\tbind() {\n\n\t\tlet revealElement = this.Reveal.getRevealElement();\n\n\t\tif( 'onpointerdown' in window ) {\n\t\t\t// Use W3C pointer events\n\t\t\trevealElement.addEventListener( 'pointerdown', this.onPointerDown, false );\n\t\t\trevealElement.addEventListener( 'pointermove', this.onPointerMove, false );\n\t\t\trevealElement.addEventListener( 'pointerup', this.onPointerUp, false );\n\t\t}\n\t\telse if( window.navigator.msPointerEnabled ) {\n\t\t\t// IE 10 uses prefixed version of pointer events\n\t\t\trevealElement.addEventListener( 'MSPointerDown', this.onPointerDown, false );\n\t\t\trevealElement.addEventListener( 'MSPointerMove', this.onPointerMove, false );\n\t\t\trevealElement.addEventListener( 'MSPointerUp', this.onPointerUp, false );\n\t\t}\n\t\telse {\n\t\t\t// Fall back to touch events\n\t\t\trevealElement.addEventListener( 'touchstart', this.onTouchStart, false );\n\t\t\trevealElement.addEventListener( 'touchmove', this.onTouchMove, false );\n\t\t\trevealElement.addEventListener( 'touchend', this.onTouchEnd, false );\n\t\t}\n\n\t}\n\n\t/**\n\t *\n\t */\n\tunbind() {\n\n\t\tlet revealElement = this.Reveal.getRevealElement();\n\n\t\trevealElement.removeEventListener( 'pointerdown', this.onPointerDown, false );\n\t\trevealElement.removeEventListener( 'pointermove', this.onPointerMove, false );\n\t\trevealElement.removeEventListener( 'pointerup', this.onPointerUp, false );\n\n\t\trevealElement.removeEventListener( 'MSPointerDown', this.onPointerDown, false );\n\t\trevealElement.removeEventListener( 'MSPointerMove', this.onPointerMove, false );\n\t\trevealElement.removeEventListener( 'MSPointerUp', this.onPointerUp, false );\n\n\t\trevealElement.removeEventListener( 'touchstart', this.onTouchStart, false );\n\t\trevealElement.removeEventListener( 'touchmove', this.onTouchMove, false );\n\t\trevealElement.removeEventListener( 'touchend', this.onTouchEnd, false );\n\n\t}\n\n\t/**\n\t * Checks if the target element prevents the triggering of\n\t * swipe navigation.\n\t */\n\tisSwipePrevented( target ) {\n\n\t\t// Prevent accidental swipes when scrubbing timelines\n\t\tif( matches( target, 'video, audio' ) ) return true;\n\n\t\twhile( target && typeof target.hasAttribute === 'function' ) {\n\t\t\tif( target.hasAttribute( 'data-prevent-swipe' ) ) return true;\n\t\t\ttarget = target.parentNode;\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\t/**\n\t * Handler for the 'touchstart' event, enables support for\n\t * swipe and pinch gestures.\n\t *\n\t * @param {object} event\n\t */\n\tonTouchStart( event ) {\n\n\t\tif( this.isSwipePrevented( event.target ) ) return true;\n\n\t\tthis.touchStartX = event.touches[0].clientX;\n\t\tthis.touchStartY = event.touches[0].clientY;\n\t\tthis.touchStartCount = event.touches.length;\n\n\t}\n\n\t/**\n\t * Handler for the 'touchmove' event.\n\t *\n\t * @param {object} event\n\t */\n\tonTouchMove( event ) {\n\n\t\tif( this.isSwipePrevented( event.target ) ) return true;\n\n\t\tlet config = this.Reveal.getConfig();\n\n\t\t// Each touch should only trigger one action\n\t\tif( !this.touchCaptured ) {\n\t\t\tthis.Reveal.onUserInput( event );\n\n\t\t\tlet currentX = event.touches[0].clientX;\n\t\t\tlet currentY = event.touches[0].clientY;\n\n\t\t\t// There was only one touch point, look for a swipe\n\t\t\tif( event.touches.length === 1 && this.touchStartCount !== 2 ) {\n\n\t\t\t\tlet availableRoutes = this.Reveal.availableRoutes({ includeFragments: true });\n\n\t\t\t\tlet deltaX = currentX - this.touchStartX,\n\t\t\t\t\tdeltaY = currentY - this.touchStartY;\n\n\t\t\t\tif( deltaX > SWIPE_THRESHOLD && Math.abs( deltaX ) > Math.abs( deltaY ) ) {\n\t\t\t\t\tthis.touchCaptured = true;\n\t\t\t\t\tif( config.navigationMode === 'linear' ) {\n\t\t\t\t\t\tif( config.rtl ) {\n\t\t\t\t\t\t\tthis.Reveal.next();\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tthis.Reveal.prev();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.Reveal.left();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if( deltaX < -SWIPE_THRESHOLD && Math.abs( deltaX ) > Math.abs( deltaY ) ) {\n\t\t\t\t\tthis.touchCaptured = true;\n\t\t\t\t\tif( config.navigationMode === 'linear' ) {\n\t\t\t\t\t\tif( config.rtl ) {\n\t\t\t\t\t\t\tthis.Reveal.prev();\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tthis.Reveal.next();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.Reveal.right();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if( deltaY > SWIPE_THRESHOLD && availableRoutes.up ) {\n\t\t\t\t\tthis.touchCaptured = true;\n\t\t\t\t\tif( config.navigationMode === 'linear' ) {\n\t\t\t\t\t\tthis.Reveal.prev();\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.Reveal.up();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if( deltaY < -SWIPE_THRESHOLD && availableRoutes.down ) {\n\t\t\t\t\tthis.touchCaptured = true;\n\t\t\t\t\tif( config.navigationMode === 'linear' ) {\n\t\t\t\t\t\tthis.Reveal.next();\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.Reveal.down();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// If we're embedded, only block touch events if they have\n\t\t\t\t// triggered an action\n\t\t\t\tif( config.embedded ) {\n\t\t\t\t\tif( this.touchCaptured || this.Reveal.isVerticalSlide() ) {\n\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// Not embedded? Block them all to avoid needless tossing\n\t\t\t\t// around of the viewport in iOS\n\t\t\t\telse {\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t}\n\n\t\t\t}\n\t\t}\n\t\t// There's a bug with swiping on some Android devices unless\n\t\t// the default action is always prevented\n\t\telse if( isAndroid ) {\n\t\t\tevent.preventDefault();\n\t\t}\n\n\t}\n\n\t/**\n\t * Handler for the 'touchend' event.\n\t *\n\t * @param {object} event\n\t */\n\tonTouchEnd( event ) {\n\n\t\tthis.touchCaptured = false;\n\n\t}\n\n\t/**\n\t * Convert pointer down to touch start.\n\t *\n\t * @param {object} event\n\t */\n\tonPointerDown( event ) {\n\n\t\tif( event.pointerType === event.MSPOINTER_TYPE_TOUCH || event.pointerType === \"touch\" ) {\n\t\t\tevent.touches = [{ clientX: event.clientX, clientY: event.clientY }];\n\t\t\tthis.onTouchStart( event );\n\t\t}\n\n\t}\n\n\t/**\n\t * Convert pointer move to touch move.\n\t *\n\t * @param {object} event\n\t */\n\tonPointerMove( event ) {\n\n\t\tif( event.pointerType === event.MSPOINTER_TYPE_TOUCH || event.pointerType === \"touch\" )  {\n\t\t\tevent.touches = [{ clientX: event.clientX, clientY: event.clientY }];\n\t\t\tthis.onTouchMove( event );\n\t\t}\n\n\t}\n\n\t/**\n\t * Convert pointer up to touch end.\n\t *\n\t * @param {object} event\n\t */\n\tonPointerUp( event ) {\n\n\t\tif( event.pointerType === event.MSPOINTER_TYPE_TOUCH || event.pointerType === \"touch\" )  {\n\t\t\tevent.touches = [{ clientX: event.clientX, clientY: event.clientY }];\n\t\t\tthis.onTouchEnd( event );\n\t\t}\n\n\t}\n\n}","import { closest } from '../utils/util.js'\n\n/**\n * Manages focus when a presentation is embedded. This\n * helps us only capture keyboard from the presentation\n * a user is currently interacting with in a page where\n * multiple presentations are embedded.\n */\n\nconst STATE_FOCUS = 'focus';\nconst STATE_BLUR = 'blur';\n\nexport default class Focus {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\tthis.onRevealPointerDown = this.onRevealPointerDown.bind( this );\n\t\tthis.onDocumentPointerDown = this.onDocumentPointerDown.bind( this );\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tif( config.embedded ) {\n\t\t\tthis.blur();\n\t\t}\n\t\telse {\n\t\t\tthis.focus();\n\t\t\tthis.unbind();\n\t\t}\n\n\t}\n\n\tbind() {\n\n\t\tif( this.Reveal.getConfig().embedded ) {\n\t\t\tthis.Reveal.getRevealElement().addEventListener( 'pointerdown', this.onRevealPointerDown, false );\n\t\t}\n\n\t}\n\n\tunbind() {\n\n\t\tthis.Reveal.getRevealElement().removeEventListener( 'pointerdown', this.onRevealPointerDown, false );\n\t\tdocument.removeEventListener( 'pointerdown', this.onDocumentPointerDown, false );\n\n\t}\n\n\tfocus() {\n\n\t\tif( this.state !== STATE_FOCUS ) {\n\t\t\tthis.Reveal.getRevealElement().classList.add( 'focused' );\n\t\t\tdocument.addEventListener( 'pointerdown', this.onDocumentPointerDown, false );\n\t\t}\n\n\t\tthis.state = STATE_FOCUS;\n\n\t}\n\n\tblur() {\n\n\t\tif( this.state !== STATE_BLUR ) {\n\t\t\tthis.Reveal.getRevealElement().classList.remove( 'focused' );\n\t\t\tdocument.removeEventListener( 'pointerdown', this.onDocumentPointerDown, false );\n\t\t}\n\n\t\tthis.state = STATE_BLUR;\n\n\t}\n\n\tisFocused() {\n\n\t\treturn this.state === STATE_FOCUS;\n\n\t}\n\n\tdestroy() {\n\n\t\tthis.Reveal.getRevealElement().classList.remove( 'focused' );\n\n\t}\n\n\tonRevealPointerDown( event ) {\n\n\t\tthis.focus();\n\n\t}\n\n\tonDocumentPointerDown( event ) {\n\n\t\tlet revealElement = closest( event.target, '.reveal' );\n\t\tif( !revealElement || revealElement !== this.Reveal.getRevealElement() ) {\n\t\t\tthis.blur();\n\t\t}\n\n\t}\n\n}","/**\n * Handles the showing of speaker notes\n */\nexport default class Notes {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t}\n\n\trender() {\n\n\t\tthis.element = document.createElement( 'div' );\n\t\tthis.element.className = 'speaker-notes';\n\t\tthis.element.setAttribute( 'data-prevent-swipe', '' );\n\t\tthis.element.setAttribute( 'tabindex', '0' );\n\t\tthis.Reveal.getRevealElement().appendChild( this.element );\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tif( config.showNotes ) {\n\t\t\tthis.element.setAttribute( 'data-layout', typeof config.showNotes === 'string' ? config.showNotes : 'inline' );\n\t\t}\n\n\t}\n\n\t/**\n\t * Pick up notes from the current slide and display them\n\t * to the viewer.\n\t *\n\t * @see {@link config.showNotes}\n\t */\n\tupdate() {\n\n\t\tif( this.Reveal.getConfig().showNotes &&\n\t\t\tthis.element && this.Reveal.getCurrentSlide() &&\n\t\t\t!this.Reveal.isScrollView() &&\n\t\t\t!this.Reveal.isPrintView()\n\t\t) {\n\t\t\tthis.element.innerHTML = this.getSlideNotes() || '<span class=\"notes-placeholder\">No notes on this slide.</span>';\n\t\t}\n\n\t}\n\n\t/**\n\t * Updates the visibility of the speaker notes sidebar that\n\t * is used to share annotated slides. The notes sidebar is\n\t * only visible if showNotes is true and there are notes on\n\t * one or more slides in the deck.\n\t */\n\tupdateVisibility() {\n\n\t\tif( this.Reveal.getConfig().showNotes &&\n\t\t\tthis.hasNotes() &&\n\t\t\t!this.Reveal.isScrollView() &&\n\t\t\t!this.Reveal.isPrintView()\n\t\t) {\n\t\t\tthis.Reveal.getRevealElement().classList.add( 'show-notes' );\n\t\t}\n\t\telse {\n\t\t\tthis.Reveal.getRevealElement().classList.remove( 'show-notes' );\n\t\t}\n\n\t}\n\n\t/**\n\t * Checks if there are speaker notes for ANY slide in the\n\t * presentation.\n\t */\n\thasNotes() {\n\n\t\treturn this.Reveal.getSlidesElement().querySelectorAll( '[data-notes], aside.notes' ).length > 0;\n\n\t}\n\n\t/**\n\t * Checks if this presentation is running inside of the\n\t * speaker notes window.\n\t *\n\t * @return {boolean}\n\t */\n\tisSpeakerNotesWindow() {\n\n\t\treturn !!window.location.search.match( /receiver/gi );\n\n\t}\n\n\t/**\n\t * Retrieves the speaker notes from a slide. Notes can be\n\t * defined in two ways:\n\t * 1. As a data-notes attribute on the slide <section>\n\t * 2. With <aside class=\"notes\"> elements inside the slide\n\t *\n\t * @param {HTMLElement} [slide=currentSlide]\n\t * @return {(string|null)}\n\t */\n\tgetSlideNotes( slide = this.Reveal.getCurrentSlide() ) {\n\n\t\t// Notes can be specified via the data-notes attribute...\n\t\tif( slide.hasAttribute( 'data-notes' ) ) {\n\t\t\treturn slide.getAttribute( 'data-notes' );\n\t\t}\n\n\t\t// ... or using <aside class=\"notes\"> elements\n\t\tlet notesElements = slide.querySelectorAll( 'aside.notes' );\n\t\tif( notesElements ) {\n\t\t\treturn Array.from(notesElements).map( notesElement => notesElement.innerHTML ).join( '\\n' );\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\tdestroy() {\n\n\t\tthis.element.remove();\n\n\t}\n\n}","/**\n * UI component that lets the use control auto-slide\n * playback via play/pause.\n */\nexport default class Playback {\n\n\t/**\n\t * @param {HTMLElement} container The component will append\n\t * itself to this\n\t * @param {function} progressCheck A method which will be\n\t * called frequently to get the current playback progress on\n\t * a range of 0-1\n\t */\n\tconstructor( container, progressCheck ) {\n\n\t\t// Cosmetics\n\t\tthis.diameter = 100;\n\t\tthis.diameter2 = this.diameter/2;\n\t\tthis.thickness = 6;\n\n\t\t// Flags if we are currently playing\n\t\tthis.playing = false;\n\n\t\t// Current progress on a 0-1 range\n\t\tthis.progress = 0;\n\n\t\t// Used to loop the animation smoothly\n\t\tthis.progressOffset = 1;\n\n\t\tthis.container = container;\n\t\tthis.progressCheck = progressCheck;\n\n\t\tthis.canvas = document.createElement( 'canvas' );\n\t\tthis.canvas.className = 'playback';\n\t\tthis.canvas.width = this.diameter;\n\t\tthis.canvas.height = this.diameter;\n\t\tthis.canvas.style.width = this.diameter2 + 'px';\n\t\tthis.canvas.style.height = this.diameter2 + 'px';\n\t\tthis.context = this.canvas.getContext( '2d' );\n\n\t\tthis.container.appendChild( this.canvas );\n\n\t\tthis.render();\n\n\t}\n\n\tsetPlaying( value ) {\n\n\t\tconst wasPlaying = this.playing;\n\n\t\tthis.playing = value;\n\n\t\t// Start repainting if we weren't already\n\t\tif( !wasPlaying && this.playing ) {\n\t\t\tthis.animate();\n\t\t}\n\t\telse {\n\t\t\tthis.render();\n\t\t}\n\n\t}\n\n\tanimate() {\n\n\t\tconst progressBefore = this.progress;\n\n\t\tthis.progress = this.progressCheck();\n\n\t\t// When we loop, offset the progress so that it eases\n\t\t// smoothly rather than immediately resetting\n\t\tif( progressBefore > 0.8 && this.progress < 0.2 ) {\n\t\t\tthis.progressOffset = this.progress;\n\t\t}\n\n\t\tthis.render();\n\n\t\tif( this.playing ) {\n\t\t\trequestAnimationFrame( this.animate.bind( this ) );\n\t\t}\n\n\t}\n\n\t/**\n\t * Renders the current progress and playback state.\n\t */\n\trender() {\n\n\t\tlet progress = this.playing ? this.progress : 0,\n\t\t\tradius = ( this.diameter2 ) - this.thickness,\n\t\t\tx = this.diameter2,\n\t\t\ty = this.diameter2,\n\t\t\ticonSize = 28;\n\n\t\t// Ease towards 1\n\t\tthis.progressOffset += ( 1 - this.progressOffset ) * 0.1;\n\n\t\tconst endAngle = ( - Math.PI / 2 ) + ( progress * ( Math.PI * 2 ) );\n\t\tconst startAngle = ( - Math.PI / 2 ) + ( this.progressOffset * ( Math.PI * 2 ) );\n\n\t\tthis.context.save();\n\t\tthis.context.clearRect( 0, 0, this.diameter, this.diameter );\n\n\t\t// Solid background color\n\t\tthis.context.beginPath();\n\t\tthis.context.arc( x, y, radius + 4, 0, Math.PI * 2, false );\n\t\tthis.context.fillStyle = 'rgba( 0, 0, 0, 0.4 )';\n\t\tthis.context.fill();\n\n\t\t// Draw progress track\n\t\tthis.context.beginPath();\n\t\tthis.context.arc( x, y, radius, 0, Math.PI * 2, false );\n\t\tthis.context.lineWidth = this.thickness;\n\t\tthis.context.strokeStyle = 'rgba( 255, 255, 255, 0.2 )';\n\t\tthis.context.stroke();\n\n\t\tif( this.playing ) {\n\t\t\t// Draw progress on top of track\n\t\t\tthis.context.beginPath();\n\t\t\tthis.context.arc( x, y, radius, startAngle, endAngle, false );\n\t\t\tthis.context.lineWidth = this.thickness;\n\t\t\tthis.context.strokeStyle = '#fff';\n\t\t\tthis.context.stroke();\n\t\t}\n\n\t\tthis.context.translate( x - ( iconSize / 2 ), y - ( iconSize / 2 ) );\n\n\t\t// Draw play/pause icons\n\t\tif( this.playing ) {\n\t\t\tthis.context.fillStyle = '#fff';\n\t\t\tthis.context.fillRect( 0, 0, iconSize / 2 - 4, iconSize );\n\t\t\tthis.context.fillRect( iconSize / 2 + 4, 0, iconSize / 2 - 4, iconSize );\n\t\t}\n\t\telse {\n\t\t\tthis.context.beginPath();\n\t\t\tthis.context.translate( 4, 0 );\n\t\t\tthis.context.moveTo( 0, 0 );\n\t\t\tthis.context.lineTo( iconSize - 4, iconSize / 2 );\n\t\t\tthis.context.lineTo( 0, iconSize );\n\t\t\tthis.context.fillStyle = '#fff';\n\t\t\tthis.context.fill();\n\t\t}\n\n\t\tthis.context.restore();\n\n\t}\n\n\ton( type, listener ) {\n\t\tthis.canvas.addEventListener( type, listener, false );\n\t}\n\n\toff( type, listener ) {\n\t\tthis.canvas.removeEventListener( type, listener, false );\n\t}\n\n\tdestroy() {\n\n\t\tthis.playing = false;\n\n\t\tif( this.canvas.parentNode ) {\n\t\t\tthis.container.removeChild( this.canvas );\n\t\t}\n\n\t}\n\n}","/**\n * The default reveal.js config object.\n */\nexport default {\n\n\t// The \"normal\" size of the presentation, aspect ratio will be preserved\n\t// when the presentation is scaled to fit different resolutions\n\twidth: 960,\n\theight: 700,\n\n\t// Factor of the display size that should remain empty around the content\n\tmargin: 0.04,\n\n\t// Bounds for smallest/largest possible scale to apply to content\n\tminScale: 0.2,\n\tmaxScale: 2.0,\n\n\t// Display presentation control arrows\n\tcontrols: true,\n\n\t// Help the user learn the controls by providing hints, for example by\n\t// bouncing the down arrow when they first encounter a vertical slide\n\tcontrolsTutorial: true,\n\n\t// Determines where controls appear, \"edges\" or \"bottom-right\"\n\tcontrolsLayout: 'bottom-right',\n\n\t// Visibility rule for backwards navigation arrows; \"faded\", \"hidden\"\n\t// or \"visible\"\n\tcontrolsBackArrows: 'faded',\n\n\t// Display a presentation progress bar\n\tprogress: true,\n\n\t// Display the page number of the current slide\n\t// - true:    Show slide number\n\t// - false:   Hide slide number\n\t//\n\t// Can optionally be set as a string that specifies the number formatting:\n\t// - \"h.v\":\t  Horizontal . vertical slide number (default)\n\t// - \"h/v\":\t  Horizontal / vertical slide number\n\t// - \"c\":\t  Flattened slide number\n\t// - \"c/t\":\t  Flattened slide number / total slides\n\t//\n\t// Alternatively, you can provide a function that returns the slide\n\t// number for the current slide. The function should take in a slide\n\t// object and return an array with one string [slideNumber] or\n\t// three strings [n1,delimiter,n2]. See #formatSlideNumber().\n\tslideNumber: false,\n\n\t// Can be used to limit the contexts in which the slide number appears\n\t// - \"all\":      Always show the slide number\n\t// - \"print\":    Only when printing to PDF\n\t// - \"speaker\":  Only in the speaker view\n\tshowSlideNumber: 'all',\n\n\t// Use 1 based indexing for # links to match slide number (default is zero\n\t// based)\n\thashOneBasedIndex: false,\n\n\t// Add the current slide number to the URL hash so that reloading the\n\t// page/copying the URL will return you to the same slide\n\thash: false,\n\n\t// Flags if we should monitor the hash and change slides accordingly\n\trespondToHashChanges: true,\n\n\t// Enable support for jump-to-slide navigation shortcuts\n\tjumpToSlide: true,\n\n\t// Push each slide change to the browser history.  Implies `hash: true`\n\thistory: false,\n\n\t// Enable keyboard shortcuts for navigation\n\tkeyboard: true,\n\n\t// Optional function that blocks keyboard events when retuning false\n\t//\n\t// If you set this to 'focused', we will only capture keyboard events\n\t// for embedded decks when they are in focus\n\tkeyboardCondition: null,\n\n\t// Disables the default reveal.js slide layout (scaling and centering)\n\t// so that you can use custom CSS layout\n\tdisableLayout: false,\n\n\t// Enable the slide overview mode\n\toverview: true,\n\n\t// Vertical centering of slides\n\tcenter: true,\n\n\t// Enables touch navigation on devices with touch input\n\ttouch: true,\n\n\t// Loop the presentation\n\tloop: false,\n\n\t// Change the presentation direction to be RTL\n\trtl: false,\n\n\t// Changes the behavior of our navigation directions.\n\t//\n\t// \"default\"\n\t// Left/right arrow keys step between horizontal slides, up/down\n\t// arrow keys step between vertical slides. Space key steps through\n\t// all slides (both horizontal and vertical).\n\t//\n\t// \"linear\"\n\t// Removes the up/down arrows. Left/right arrows step through all\n\t// slides (both horizontal and vertical).\n\t//\n\t// \"grid\"\n\t// When this is enabled, stepping left/right from a vertical stack\n\t// to an adjacent vertical stack will land you at the same vertical\n\t// index.\n\t//\n\t// Consider a deck with six slides ordered in two vertical stacks:\n\t// 1.1    2.1\n\t// 1.2    2.2\n\t// 1.3    2.3\n\t//\n\t// If you're on slide 1.3 and navigate right, you will normally move\n\t// from 1.3 -> 2.1. If \"grid\" is used, the same navigation takes you\n\t// from 1.3 -> 2.3.\n\tnavigationMode: 'default',\n\n\t// Randomizes the order of slides each time the presentation loads\n\tshuffle: false,\n\n\t// Turns fragments on and off globally\n\tfragments: true,\n\n\t// Flags whether to include the current fragment in the URL,\n\t// so that reloading brings you to the same fragment position\n\tfragmentInURL: true,\n\n\t// Flags if the presentation is running in an embedded mode,\n\t// i.e. contained within a limited portion of the screen\n\tembedded: false,\n\n\t// Flags if we should show a help overlay when the question-mark\n\t// key is pressed\n\thelp: true,\n\n\t// Flags if it should be possible to pause the presentation (blackout)\n\tpause: true,\n\n\t// Flags if speaker notes should be visible to all viewers\n\tshowNotes: false,\n\n\t// Flags if slides with data-visibility=\"hidden\" should be kep visible\n\tshowHiddenSlides: false,\n\n\t// Global override for autoplaying embedded media (video/audio/iframe)\n\t// - null:   Media will only autoplay if data-autoplay is present\n\t// - true:   All media will autoplay, regardless of individual setting\n\t// - false:  No media will autoplay, regardless of individual setting\n\tautoPlayMedia: null,\n\n\t// Global override for preloading lazy-loaded iframes\n\t// - null:   Iframes with data-src AND data-preload will be loaded when within\n\t//           the viewDistance, iframes with only data-src will be loaded when visible\n\t// - true:   All iframes with data-src will be loaded when within the viewDistance\n\t// - false:  All iframes with data-src will be loaded only when visible\n\tpreloadIframes: null,\n\n\t// Can be used to globally disable auto-animation\n\tautoAnimate: true,\n\n\t// Optionally provide a custom element matcher that will be\n\t// used to dictate which elements we can animate between.\n\tautoAnimateMatcher: null,\n\n\t// Default settings for our auto-animate transitions, can be\n\t// overridden per-slide or per-element via data arguments\n\tautoAnimateEasing: 'ease',\n\tautoAnimateDuration: 1.0,\n\tautoAnimateUnmatched: true,\n\n\t// CSS properties that can be auto-animated. Position & scale\n\t// is matched separately so there's no need to include styles\n\t// like top/right/bottom/left, width/height or margin.\n\tautoAnimateStyles: [\n\t\t'opacity',\n\t\t'color',\n\t\t'background-color',\n\t\t'padding',\n\t\t'font-size',\n\t\t'line-height',\n\t\t'letter-spacing',\n\t\t'border-width',\n\t\t'border-color',\n\t\t'border-radius',\n\t\t'outline',\n\t\t'outline-offset'\n\t],\n\n\t// Controls automatic progression to the next slide\n\t// - 0:      Auto-sliding only happens if the data-autoslide HTML attribute\n\t//           is present on the current slide or fragment\n\t// - 1+:     All slides will progress automatically at the given interval\n\t// - false:  No auto-sliding, even if data-autoslide is present\n\tautoSlide: 0,\n\n\t// Stop auto-sliding after user input\n\tautoSlideStoppable: true,\n\n\t// Use this method for navigation when auto-sliding (defaults to navigateNext)\n\tautoSlideMethod: null,\n\n\t// Specify the average time in seconds that you think you will spend\n\t// presenting each slide. This is used to show a pacing timer in the\n\t// speaker view\n\tdefaultTiming: null,\n\n\t// Enable slide navigation via mouse wheel\n\tmouseWheel: false,\n\n\t// Opens links in an iframe preview overlay\n\t// Add `data-preview-link` and `data-preview-link=\"false\"` to customise each link\n\t// individually\n\tpreviewLinks: false,\n\n\t// Exposes the reveal.js API through window.postMessage\n\tpostMessage: true,\n\n\t// Dispatches all reveal.js events to the parent window through postMessage\n\tpostMessageEvents: false,\n\n\t// Focuses body when page changes visibility to ensure keyboard shortcuts work\n\tfocusBodyOnPageVisibilityChange: true,\n\n\t// Transition style\n\ttransition: 'slide', // none/fade/slide/convex/concave/zoom\n\n\t// Transition speed\n\ttransitionSpeed: 'default', // default/fast/slow\n\n\t// Transition style for full page slide backgrounds\n\tbackgroundTransition: 'fade', // none/fade/slide/convex/concave/zoom\n\n\t// Parallax background image\n\tparallaxBackgroundImage: '', // CSS syntax, e.g. \"a.jpg\"\n\n\t// Parallax background size\n\tparallaxBackgroundSize: '', // CSS syntax, e.g. \"3000px 2000px\"\n\n\t// Parallax background repeat\n\tparallaxBackgroundRepeat: '', // repeat/repeat-x/repeat-y/no-repeat/initial/inherit\n\n\t// Parallax background position\n\tparallaxBackgroundPosition: '', // CSS syntax, e.g. \"top left\"\n\n\t// Amount of pixels to move the parallax background per slide step\n\tparallaxBackgroundHorizontal: null,\n\tparallaxBackgroundVertical: null,\n\n\t// Can be used to initialize reveal.js in one of the following views:\n\t// - print:   Render the presentation so that it can be printed to PDF\n\t// - scroll:  Show the presentation as a tall scrollable page with scroll\n\t//            triggered animations\n\tview: null,\n\n\t// Adjusts the height of each slide in the scroll view.\n\t// - full:       Each slide is as tall as the viewport\n\t// - compact:    Slides are as small as possible, allowing multiple slides\n\t//               to be visible in parallel on tall devices\n\tscrollLayout: 'full',\n\n\t// Control how scroll snapping works in the scroll view.\n\t// - false:   \tNo snapping, scrolling is continuous\n\t// - proximity:  Snap when close to a slide\n\t// - mandatory:  Always snap to the closest slide\n\t//\n\t// Only applies to presentations in scroll view.\n\tscrollSnap: 'mandatory',\n\n\t// Enables and configure the scroll view progress bar.\n\t// - 'auto':    Show the scrollbar while scrolling, hide while idle\n\t// - true:      Always show the scrollbar\n\t// - false:     Never show the scrollbar\n\tscrollProgress: 'auto',\n\n\t// Automatically activate the scroll view when we the viewport falls\n\t// below the given width.\n\tscrollActivationWidth: 435,\n\n\t// The maximum number of pages a single slide can expand onto when printing\n\t// to PDF, unlimited by default\n\tpdfMaxPagesPerSlide: Number.POSITIVE_INFINITY,\n\n\t// Prints each fragment on a separate slide\n\tpdfSeparateFragments: true,\n\n\t// Offset used to reduce the height of content within exported PDF pages.\n\t// This exists to account for environment differences based on how you\n\t// print to PDF. CLI printing options, like phantomjs and wkpdf, can end\n\t// on precisely the total height of the document whereas in-browser\n\t// printing has to end one pixel before.\n\tpdfPageHeightOffset: -1,\n\n\t// Number of slides away from the current that are visible\n\tviewDistance: 3,\n\n\t// Number of slides away from the current that are visible on mobile\n\t// devices. It is advisable to set this to a lower number than\n\t// viewDistance in order to save resources.\n\tmobileViewDistance: 2,\n\n\t// The display mode that will be used to show slides\n\tdisplay: 'block',\n\n\t// Hide cursor if inactive\n\thideInactiveCursor: true,\n\n\t// Time before the cursor is hidden (in ms)\n\thideCursorTime: 5000,\n\n\t// Should we automatically sort and set indices for fragments\n\t// at each sync? (See Reveal.sync)\n\tsortFragmentsOnSync: true,\n\n\t// Script dependencies to load\n\tdependencies: [],\n\n\t// Plugin objects to register and use for this presentation\n\tplugins: []\n\n}","import SlideContent from \"./controllers/slidecontent.js\"\nimport SlideNumber from \"./controllers/slidenumber.js\"\nimport JumpToSlide from \"./controllers/jumptoslide.js\"\nimport Backgrounds from \"./controllers/backgrounds.js\"\nimport AutoAnimate from \"./controllers/autoanimate.js\"\nimport ScrollView from \"./controllers/scrollview.js\"\nimport PrintView from \"./controllers/printview.js\"\nimport Fragments from \"./controllers/fragments.js\"\nimport Overview from \"./controllers/overview.js\"\nimport Keyboard from \"./controllers/keyboard.js\"\nimport Location from \"./controllers/location.js\"\nimport Controls from \"./controllers/controls.js\"\nimport Progress from \"./controllers/progress.js\"\nimport Pointer from \"./controllers/pointer.js\"\nimport Plugins from \"./controllers/plugins.js\"\nimport Touch from \"./controllers/touch.js\"\nimport Focus from \"./controllers/focus.js\"\nimport Notes from \"./controllers/notes.js\"\nimport Playback from \"./components/playback.js\"\nimport defaultConfig from \"./config.js\"\nimport * as Util from \"./utils/util.js\"\nimport * as Device from \"./utils/device.js\"\nimport {\n  SLIDES_SELECTOR,\n  HORIZONTAL_SLIDES_SELECTOR,\n  VERTICAL_SLIDES_SELECTOR,\n  POST_MESSAGE_METHOD_BLACKLIST,\n} from \"./utils/constants.js\"\n\n// The reveal.js version\nexport const VERSION = \"5.0.1\"\n\n/**\n * reveal.js\n * https://revealjs.com\n * MIT licensed\n *\n * Copyright (C) 2011-2022 Hakim El Hattab, https://hakim.se\n */\nexport default function (revealElement, options) {\n  // Support initialization with no args, one arg\n  // [options] or two args [revealElement, options]\n  if (arguments.length < 2) {\n    options = arguments[0]\n    revealElement = document.querySelector(\".reveal\")\n  }\n\n  const Reveal = {}\n\n  // Configuration defaults, can be overridden at initialization time\n  let config = {},\n    // Flags if reveal.js is loaded (has dispatched the 'ready' event)\n    ready = false,\n    // The horizontal and vertical index of the currently active slide\n    indexh,\n    indexv,\n    // The previous and current slide HTML elements\n    previousSlide,\n    currentSlide,\n    // Remember which directions that the user has navigated towards\n    navigationHistory = {\n      hasNavigatedHorizontally: false,\n      hasNavigatedVertically: false,\n    },\n    // Slides may have a data-state attribute which we pick up and apply\n    // as a class to the body. This list contains the combined state of\n    // all current slides.\n    state = [],\n    // The current scale of the presentation (see width/height config)\n    scale = 1,\n    // CSS transform that is currently applied to the slides container,\n    // split into two groups\n    slidesTransform = { layout: \"\", overview: \"\" },\n    // Cached references to DOM elements\n    dom = {},\n    // Flags if the interaction event listeners are bound\n    eventsAreBound = false,\n    // The current slide transition state; idle or running\n    transition = \"idle\",\n    // The current auto-slide duration\n    autoSlide = 0,\n    // Auto slide properties\n    autoSlidePlayer,\n    autoSlideTimeout = 0,\n    autoSlideStartTime = -1,\n    autoSlidePaused = false,\n    // Controllers for different aspects of our presentation. They're\n    // all given direct references to this Reveal instance since there\n    // may be multiple presentations running in parallel.\n    slideContent = new SlideContent(Reveal),\n    slideNumber = new SlideNumber(Reveal),\n    jumpToSlide = new JumpToSlide(Reveal),\n    autoAnimate = new AutoAnimate(Reveal),\n    backgrounds = new Backgrounds(Reveal),\n    scrollView = new ScrollView(Reveal),\n    printView = new PrintView(Reveal),\n    fragments = new Fragments(Reveal),\n    overview = new Overview(Reveal),\n    keyboard = new Keyboard(Reveal),\n    location = new Location(Reveal),\n    controls = new Controls(Reveal),\n    progress = new Progress(Reveal),\n    pointer = new Pointer(Reveal),\n    plugins = new Plugins(Reveal),\n    focus = new Focus(Reveal),\n    touch = new Touch(Reveal),\n    notes = new Notes(Reveal)\n\n  /**\n   * Starts up the presentation.\n   */\n  function initialize(initOptions) {\n    if (!revealElement)\n      throw 'Unable to find presentation root (<div class=\"reveal\">).'\n\n    // Cache references to key DOM elements\n    dom.wrapper = revealElement\n    dom.slides = revealElement.querySelector(\".slides\")\n\n    if (!dom.slides)\n      throw 'Unable to find slides container (<div class=\"slides\">).'\n\n    // Compose our config object in order of increasing precedence:\n    // 1. Default reveal.js options\n    // 2. Options provided via Reveal.configure() prior to\n    //    initialization\n    // 3. Options passed to the Reveal constructor\n    // 4. Options passed to Reveal.initialize\n    // 5. Query params\n    config = {\n      ...defaultConfig,\n      ...config,\n      ...options,\n      ...initOptions,\n      ...Util.getQueryHash(),\n    }\n\n    // Legacy support for the ?print-pdf query\n    if (/print-pdf/gi.test(window.location.search)) {\n      config.view = \"print\"\n    }\n\n    setViewport()\n\n    // Force a layout when the whole page, incl fonts, has loaded\n    window.addEventListener(\"load\", layout, false)\n\n    // Register plugins and load dependencies, then move on to #start()\n    plugins.load(config.plugins, config.dependencies).then(start)\n\n    return new Promise(resolve => Reveal.on(\"ready\", resolve))\n  }\n\n  /**\n   * Encase the presentation in a reveal.js viewport. The\n   * extent of the viewport differs based on configuration.\n   */\n  function setViewport() {\n    // Embedded decks use the reveal element as their viewport\n    if (config.embedded === true) {\n      dom.viewport =\n        Util.closest(revealElement, \".reveal-viewport\") || revealElement\n    }\n    // Full-page decks use the body as their viewport\n    else {\n      dom.viewport = document.body\n      document.documentElement.classList.add(\"reveal-full-page\")\n    }\n\n    dom.viewport.classList.add(\"reveal-viewport\")\n  }\n\n  /**\n   * Starts up reveal.js by binding input events and navigating\n   * to the current URL deeplink if there is one.\n   */\n  function start() {\n    ready = true\n\n    // Remove slides hidden with data-visibility\n    removeHiddenSlides()\n\n    // Make sure we've got all the DOM elements we need\n    setupDOM()\n\n    // Listen to messages posted to this window\n    setupPostMessage()\n\n    // Prevent the slides from being scrolled out of view\n    setupScrollPrevention()\n\n    // Adds bindings for fullscreen mode\n    setupFullscreen()\n\n    // Resets all vertical slides so that only the first is visible\n    resetVerticalSlides()\n\n    // Updates the presentation to match the current configuration values\n    configure()\n\n    // Create slide backgrounds\n    backgrounds.update(true)\n\n    // Activate the print/scroll view if configured\n    activateInitialView()\n\n    // Read the initial hash\n    location.readURL()\n\n    // Notify listeners that the presentation is ready but use a 1ms\n    // timeout to ensure it's not fired synchronously after #initialize()\n    setTimeout(() => {\n      // Enable transitions now that we're loaded\n      dom.slides.classList.remove(\"no-transition\")\n\n      dom.wrapper.classList.add(\"ready\")\n\n      dispatchEvent({\n        type: \"ready\",\n        data: {\n          indexh,\n          indexv,\n          currentSlide,\n        },\n      })\n    }, 1)\n  }\n\n  /**\n   * Activates the correct reveal.js view based on our config.\n   * This is only invoked once during initialization.\n   */\n  function activateInitialView() {\n    const activatePrintView = config.view === \"print\"\n    const activateScrollView =\n      config.view === \"scroll\" || config.view === \"reader\"\n\n    if (activatePrintView || activateScrollView) {\n      if (activatePrintView) {\n        removeEventListeners()\n      } else {\n        touch.unbind()\n      }\n\n      // Avoid content flickering during layout\n      dom.viewport.classList.add(\"loading-scroll-mode\")\n\n      if (activatePrintView) {\n        // The document needs to have loaded for the PDF layout\n        // measurements to be accurate\n        if (document.readyState === \"complete\") {\n          printView.activate()\n        } else {\n          window.addEventListener(\"load\", () => printView.activate())\n        }\n      } else {\n        scrollView.activate()\n      }\n    }\n  }\n\n  /**\n   * Removes all slides with data-visibility=\"hidden\". This\n   * is done right before the rest of the presentation is\n   * initialized.\n   *\n   * If you want to show all hidden slides, initialize\n   * reveal.js with showHiddenSlides set to true.\n   */\n  function removeHiddenSlides() {\n    if (!config.showHiddenSlides) {\n      Util.queryAll(dom.wrapper, 'section[data-visibility=\"hidden\"]').forEach(\n        slide => {\n          const parent = slide.parentNode\n\n          // If this slide is part of a stack and that stack will be\n          // empty after removing the hidden slide, remove the entire\n          // stack\n          if (\n            parent.childElementCount === 1 &&\n            /section/i.test(parent.nodeName)\n          ) {\n            parent.remove()\n          } else {\n            slide.remove()\n          }\n        },\n      )\n    }\n  }\n\n  /**\n   * Finds and stores references to DOM elements which are\n   * required by the presentation. If a required element is\n   * not found, it is created.\n   */\n  function setupDOM() {\n    // Prevent transitions while we're loading\n    dom.slides.classList.add(\"no-transition\")\n\n    if (Device.isMobile) {\n      dom.wrapper.classList.add(\"no-hover\")\n    } else {\n      dom.wrapper.classList.remove(\"no-hover\")\n    }\n\n    backgrounds.render()\n    slideNumber.render()\n    jumpToSlide.render()\n    controls.render()\n    progress.render()\n    notes.render()\n\n    // Overlay graphic which is displayed during the paused mode\n    dom.pauseOverlay = Util.createSingletonNode(\n      dom.wrapper,\n      \"div\",\n      \"pause-overlay\",\n      config.controls\n        ? '<button class=\"resume-button\">Resume presentation</button>'\n        : null,\n    )\n\n    dom.statusElement = createStatusElement()\n\n    dom.wrapper.setAttribute(\"role\", \"application\")\n  }\n\n  /**\n   * Creates a hidden div with role aria-live to announce the\n   * current slide content. Hide the div off-screen to make it\n   * available only to Assistive Technologies.\n   *\n   * @return {HTMLElement}\n   */\n  function createStatusElement() {\n    let statusElement = dom.wrapper.querySelector(\".aria-status\")\n    if (!statusElement) {\n      statusElement = document.createElement(\"div\")\n      statusElement.style.position = \"absolute\"\n      statusElement.style.height = \"1px\"\n      statusElement.style.width = \"1px\"\n      statusElement.style.overflow = \"hidden\"\n      statusElement.style.clip = \"rect( 1px, 1px, 1px, 1px )\"\n      statusElement.classList.add(\"aria-status\")\n      statusElement.setAttribute(\"aria-live\", \"polite\")\n      statusElement.setAttribute(\"aria-atomic\", \"true\")\n      dom.wrapper.appendChild(statusElement)\n    }\n    return statusElement\n  }\n\n  /**\n   * Announces the given text to screen readers.\n   */\n  function announceStatus(value) {\n    dom.statusElement.textContent = value\n  }\n\n  /**\n   * Converts the given HTML element into a string of text\n   * that can be announced to a screen reader. Hidden\n   * elements are excluded.\n   */\n  function getStatusText(node) {\n    let text = \"\"\n\n    // Text node\n    if (node.nodeType === 3) {\n      text += node.textContent\n    }\n    // Element node\n    else if (node.nodeType === 1) {\n      let isAriaHidden = node.getAttribute(\"aria-hidden\")\n      let isDisplayHidden = window.getComputedStyle(node)[\"display\"] === \"none\"\n      if (isAriaHidden !== \"true\" && !isDisplayHidden) {\n        Array.from(node.childNodes).forEach(child => {\n          text += getStatusText(child)\n        })\n      }\n    }\n\n    text = text.trim()\n\n    return text === \"\" ? \"\" : text + \" \"\n  }\n\n  /**\n   * This is an unfortunate necessity. Some actions – such as\n   * an input field being focused in an iframe or using the\n   * keyboard to expand text selection beyond the bounds of\n   * a slide – can trigger our content to be pushed out of view.\n   * This scrolling can not be prevented by hiding overflow in\n   * CSS (we already do) so we have to resort to repeatedly\n   * checking if the slides have been offset :(\n   */\n  function setupScrollPrevention() {\n    setInterval(() => {\n      if (\n        (!scrollView.isActive() && dom.wrapper.scrollTop !== 0) ||\n        dom.wrapper.scrollLeft !== 0\n      ) {\n        dom.wrapper.scrollTop = 0\n        dom.wrapper.scrollLeft = 0\n      }\n    }, 1000)\n  }\n\n  /**\n   * After entering fullscreen we need to force a layout to\n   * get our presentations to scale correctly. This behavior\n   * is inconsistent across browsers but a force layout seems\n   * to normalize it.\n   */\n  function setupFullscreen() {\n    document.addEventListener(\"fullscreenchange\", onFullscreenChange)\n    document.addEventListener(\"webkitfullscreenchange\", onFullscreenChange)\n  }\n\n  /**\n   * Registers a listener to postMessage events, this makes it\n   * possible to call all reveal.js API methods from another\n   * window. For example:\n   *\n   * revealWindow.postMessage( JSON.stringify({\n   *   method: 'slide',\n   *   args: [ 2 ]\n   * }), '*' );\n   */\n  function setupPostMessage() {\n    if (config.postMessage) {\n      window.addEventListener(\"message\", onPostMessage, false)\n    }\n  }\n\n  /**\n   * Applies the configuration settings from the config\n   * object. May be called multiple times.\n   *\n   * @param {object} options\n   */\n  function configure(options) {\n    const oldConfig = { ...config }\n\n    // New config options may be passed when this method\n    // is invoked through the API after initialization\n    if (typeof options === \"object\") Util.extend(config, options)\n\n    // Abort if reveal.js hasn't finished loading, config\n    // changes will be applied automatically once ready\n    if (Reveal.isReady() === false) return\n\n    const numberOfSlides = dom.wrapper.querySelectorAll(SLIDES_SELECTOR).length\n\n    // The transition is added as a class on the .reveal element\n    dom.wrapper.classList.remove(oldConfig.transition)\n    dom.wrapper.classList.add(config.transition)\n\n    dom.wrapper.setAttribute(\"data-transition-speed\", config.transitionSpeed)\n    dom.wrapper.setAttribute(\n      \"data-background-transition\",\n      config.backgroundTransition,\n    )\n\n    // Expose our configured slide dimensions as custom props\n    dom.viewport.style.setProperty(\n      \"--slide-width\",\n      typeof config.width === \"string\" ? config.width : config.width + \"px\",\n    )\n    dom.viewport.style.setProperty(\n      \"--slide-height\",\n      typeof config.height === \"string\" ? config.height : config.height + \"px\",\n    )\n\n    if (config.shuffle) {\n      shuffle()\n    }\n\n    Util.toggleClass(dom.wrapper, \"embedded\", config.embedded)\n    Util.toggleClass(dom.wrapper, \"rtl\", config.rtl)\n    Util.toggleClass(dom.wrapper, \"center\", config.center)\n\n    // Exit the paused mode if it was configured off\n    if (config.pause === false) {\n      resume()\n    }\n\n    // Iframe link previews\n    if (config.previewLinks) {\n      enablePreviewLinks()\n      disablePreviewLinks(\"[data-preview-link=false]\")\n    } else {\n      disablePreviewLinks()\n      enablePreviewLinks(\"[data-preview-link]:not([data-preview-link=false])\")\n    }\n\n    // Reset all changes made by auto-animations\n    autoAnimate.reset()\n\n    // Remove existing auto-slide controls\n    if (autoSlidePlayer) {\n      autoSlidePlayer.destroy()\n      autoSlidePlayer = null\n    }\n\n    // Generate auto-slide controls if needed\n    if (numberOfSlides > 1 && config.autoSlide && config.autoSlideStoppable) {\n      autoSlidePlayer = new Playback(dom.wrapper, () => {\n        return Math.min(\n          Math.max((Date.now() - autoSlideStartTime) / autoSlide, 0),\n          1,\n        )\n      })\n\n      autoSlidePlayer.on(\"click\", onAutoSlidePlayerClick)\n      autoSlidePaused = false\n    }\n\n    // Add the navigation mode to the DOM so we can adjust styling\n    if (config.navigationMode !== \"default\") {\n      dom.wrapper.setAttribute(\"data-navigation-mode\", config.navigationMode)\n    } else {\n      dom.wrapper.removeAttribute(\"data-navigation-mode\")\n    }\n\n    notes.configure(config, oldConfig)\n    focus.configure(config, oldConfig)\n    pointer.configure(config, oldConfig)\n    controls.configure(config, oldConfig)\n    progress.configure(config, oldConfig)\n    keyboard.configure(config, oldConfig)\n    fragments.configure(config, oldConfig)\n    slideNumber.configure(config, oldConfig)\n\n    sync()\n  }\n\n  /**\n   * Binds all event listeners.\n   */\n  function addEventListeners() {\n    eventsAreBound = true\n\n    window.addEventListener(\"resize\", onWindowResize, false)\n\n    if (config.touch) touch.bind()\n    if (config.keyboard) keyboard.bind()\n    if (config.progress) progress.bind()\n    if (config.respondToHashChanges) location.bind()\n    controls.bind()\n    focus.bind()\n\n    dom.slides.addEventListener(\"click\", onSlidesClicked, false)\n    dom.slides.addEventListener(\"transitionend\", onTransitionEnd, false)\n    dom.pauseOverlay.addEventListener(\"click\", resume, false)\n\n    if (config.focusBodyOnPageVisibilityChange) {\n      document.addEventListener(\n        \"visibilitychange\",\n        onPageVisibilityChange,\n        false,\n      )\n    }\n  }\n\n  /**\n   * Unbinds all event listeners.\n   */\n  function removeEventListeners() {\n    eventsAreBound = false\n\n    touch.unbind()\n    focus.unbind()\n    keyboard.unbind()\n    controls.unbind()\n    progress.unbind()\n    location.unbind()\n\n    window.removeEventListener(\"resize\", onWindowResize, false)\n\n    dom.slides.removeEventListener(\"click\", onSlidesClicked, false)\n    dom.slides.removeEventListener(\"transitionend\", onTransitionEnd, false)\n    dom.pauseOverlay.removeEventListener(\"click\", resume, false)\n  }\n\n  /**\n   * Uninitializes reveal.js by undoing changes made to the\n   * DOM and removing all event listeners.\n   */\n  function destroy() {\n    removeEventListeners()\n    cancelAutoSlide()\n    disablePreviewLinks()\n\n    // Destroy controllers\n    notes.destroy()\n    focus.destroy()\n    plugins.destroy()\n    pointer.destroy()\n    controls.destroy()\n    progress.destroy()\n    backgrounds.destroy()\n    slideNumber.destroy()\n    jumpToSlide.destroy()\n\n    // Remove event listeners\n    document.removeEventListener(\"fullscreenchange\", onFullscreenChange)\n    document.removeEventListener(\"webkitfullscreenchange\", onFullscreenChange)\n    document.removeEventListener(\n      \"visibilitychange\",\n      onPageVisibilityChange,\n      false,\n    )\n    window.removeEventListener(\"message\", onPostMessage, false)\n    window.removeEventListener(\"load\", layout, false)\n\n    // Undo DOM changes\n    if (dom.pauseOverlay) dom.pauseOverlay.remove()\n    if (dom.statusElement) dom.statusElement.remove()\n\n    document.documentElement.classList.remove(\"reveal-full-page\")\n\n    dom.wrapper.classList.remove(\n      \"ready\",\n      \"center\",\n      \"has-horizontal-slides\",\n      \"has-vertical-slides\",\n    )\n    dom.wrapper.removeAttribute(\"data-transition-speed\")\n    dom.wrapper.removeAttribute(\"data-background-transition\")\n\n    dom.viewport.classList.remove(\"reveal-viewport\")\n    dom.viewport.style.removeProperty(\"--slide-width\")\n    dom.viewport.style.removeProperty(\"--slide-height\")\n\n    dom.slides.style.removeProperty(\"width\")\n    dom.slides.style.removeProperty(\"height\")\n    dom.slides.style.removeProperty(\"zoom\")\n    dom.slides.style.removeProperty(\"left\")\n    dom.slides.style.removeProperty(\"top\")\n    dom.slides.style.removeProperty(\"bottom\")\n    dom.slides.style.removeProperty(\"right\")\n    dom.slides.style.removeProperty(\"transform\")\n\n    Array.from(dom.wrapper.querySelectorAll(SLIDES_SELECTOR)).forEach(slide => {\n      slide.style.removeProperty(\"display\")\n      slide.style.removeProperty(\"top\")\n      slide.removeAttribute(\"hidden\")\n      slide.removeAttribute(\"aria-hidden\")\n    })\n  }\n\n  /**\n   * Adds a listener to one of our custom reveal.js events,\n   * like slidechanged.\n   */\n  function on(type, listener, useCapture) {\n    revealElement.addEventListener(type, listener, useCapture)\n  }\n\n  /**\n   * Unsubscribes from a reveal.js event.\n   */\n  function off(type, listener, useCapture) {\n    revealElement.removeEventListener(type, listener, useCapture)\n  }\n\n  /**\n   * Applies CSS transforms to the slides container. The container\n   * is transformed from two separate sources: layout and the overview\n   * mode.\n   *\n   * @param {object} transforms\n   */\n  function transformSlides(transforms) {\n    // Pick up new transforms from arguments\n    if (typeof transforms.layout === \"string\")\n      slidesTransform.layout = transforms.layout\n    if (typeof transforms.overview === \"string\")\n      slidesTransform.overview = transforms.overview\n\n    // Apply the transforms to the slides container\n    if (slidesTransform.layout) {\n      Util.transformElement(\n        dom.slides,\n        slidesTransform.layout + \" \" + slidesTransform.overview,\n      )\n    } else {\n      Util.transformElement(dom.slides, slidesTransform.overview)\n    }\n  }\n\n  /**\n   * Dispatches an event of the specified type from the\n   * reveal DOM element.\n   */\n  function dispatchEvent({ target = dom.wrapper, type, data, bubbles = true }) {\n    let event = document.createEvent(\"HTMLEvents\", 1, 2)\n    event.initEvent(type, bubbles, true)\n    Util.extend(event, data)\n    target.dispatchEvent(event)\n\n    if (target === dom.wrapper) {\n      // If we're in an iframe, post each reveal.js event to the\n      // parent window. Used by the notes plugin\n      dispatchPostMessage(type)\n    }\n\n    return event\n  }\n\n  /**\n   * Dispatches a slidechanged event.\n   *\n   * @param {string} origin Used to identify multiplex clients\n   */\n  function dispatchSlideChanged(origin) {\n    dispatchEvent({\n      type: \"slidechanged\",\n      data: {\n        indexh,\n        indexv,\n        previousSlide,\n        currentSlide,\n        origin,\n      },\n    })\n  }\n\n  /**\n   * Dispatched a postMessage of the given type from our window.\n   */\n  function dispatchPostMessage(type, data) {\n    if (config.postMessageEvents && window.parent !== window.self) {\n      let message = {\n        namespace: \"reveal\",\n        eventName: type,\n        state: getState(),\n      }\n\n      Util.extend(message, data)\n\n      window.parent.postMessage(JSON.stringify(message), \"*\")\n    }\n  }\n\n  /**\n   * Bind preview frame links.\n   *\n   * @param {string} [selector=a] - selector for anchors\n   */\n  function enablePreviewLinks(selector = \"a\") {\n    Array.from(dom.wrapper.querySelectorAll(selector)).forEach(element => {\n      if (/^(http|www)/gi.test(element.getAttribute(\"href\"))) {\n        element.addEventListener(\"click\", onPreviewLinkClicked, false)\n      }\n    })\n  }\n\n  /**\n   * Unbind preview frame links.\n   */\n  function disablePreviewLinks(selector = \"a\") {\n    Array.from(dom.wrapper.querySelectorAll(selector)).forEach(element => {\n      if (/^(http|www)/gi.test(element.getAttribute(\"href\"))) {\n        element.removeEventListener(\"click\", onPreviewLinkClicked, false)\n      }\n    })\n  }\n\n  /**\n   * Opens a preview window for the target URL.\n   *\n   * @param {string} url - url for preview iframe src\n   */\n  function showPreview(url) {\n    closeOverlay()\n\n    dom.overlay = document.createElement(\"div\")\n    dom.overlay.classList.add(\"overlay\")\n    dom.overlay.classList.add(\"overlay-preview\")\n    dom.wrapper.appendChild(dom.overlay)\n\n    dom.overlay.innerHTML = `<header>\n\t\t\t\t<a class=\"close\" href=\"#\"><span class=\"icon\"></span></a>\n\t\t\t\t<a class=\"external\" href=\"${url}\" target=\"_blank\"><span class=\"icon\"></span></a>\n\t\t\t</header>\n\t\t\t<div class=\"spinner\"></div>\n\t\t\t<div class=\"viewport\">\n\t\t\t\t<iframe src=\"${url}\"></iframe>\n\t\t\t\t<small class=\"viewport-inner\">\n\t\t\t\t\t<span class=\"x-frame-error\">Unable to load iframe. This is likely due to the site's policy (x-frame-options).</span>\n\t\t\t\t</small>\n\t\t\t</div>`\n\n    dom.overlay.querySelector(\"iframe\").addEventListener(\n      \"load\",\n      event => {\n        dom.overlay.classList.add(\"loaded\")\n      },\n      false,\n    )\n\n    dom.overlay.querySelector(\".close\").addEventListener(\n      \"click\",\n      event => {\n        closeOverlay()\n        event.preventDefault()\n      },\n      false,\n    )\n\n    dom.overlay.querySelector(\".external\").addEventListener(\n      \"click\",\n      event => {\n        closeOverlay()\n      },\n      false,\n    )\n  }\n\n  /**\n   * Open or close help overlay window.\n   *\n   * @param {Boolean} [override] Flag which overrides the\n   * toggle logic and forcibly sets the desired state. True means\n   * help is open, false means it's closed.\n   */\n  function toggleHelp(override) {\n    if (typeof override === \"boolean\") {\n      override ? showHelp() : closeOverlay()\n    } else {\n      if (dom.overlay) {\n        closeOverlay()\n      } else {\n        showHelp()\n      }\n    }\n  }\n\n  /**\n   * Opens an overlay window with help material.\n   */\n  function showHelp() {\n    if (config.help) {\n      closeOverlay()\n\n      dom.overlay = document.createElement(\"div\")\n      dom.overlay.classList.add(\"overlay\")\n      dom.overlay.classList.add(\"overlay-help\")\n      dom.wrapper.appendChild(dom.overlay)\n\n      let html = '<p class=\"title\">Keyboard Shortcuts</p><br/>'\n\n      let shortcuts = keyboard.getShortcuts(),\n        bindings = keyboard.getBindings()\n\n      html += \"<table><th>KEY</th><th>ACTION</th>\"\n      for (let key in shortcuts) {\n        html += `<tr><td>${key}</td><td>${shortcuts[key]}</td></tr>`\n      }\n\n      // Add custom key bindings that have associated descriptions\n      for (let binding in bindings) {\n        if (bindings[binding].key && bindings[binding].description) {\n          html += `<tr><td>${bindings[binding].key}</td><td>${bindings[binding].description}</td></tr>`\n        }\n      }\n\n      html += \"</table>\"\n\n      dom.overlay.innerHTML = `\n\t\t\t\t<header>\n\t\t\t\t\t<a class=\"close\" href=\"#\"><span class=\"icon\"></span></a>\n\t\t\t\t</header>\n\t\t\t\t<div class=\"viewport\">\n\t\t\t\t\t<div class=\"viewport-inner\">${html}</div>\n\t\t\t\t</div>\n\t\t\t`\n\n      dom.overlay.querySelector(\".close\").addEventListener(\n        \"click\",\n        event => {\n          closeOverlay()\n          event.preventDefault()\n        },\n        false,\n      )\n    }\n  }\n\n  /**\n   * Closes any currently open overlay.\n   */\n  function closeOverlay() {\n    if (dom.overlay) {\n      dom.overlay.parentNode.removeChild(dom.overlay)\n      dom.overlay = null\n      return true\n    }\n\n    return false\n  }\n\n  /**\n   * Applies JavaScript-controlled layout rules to the\n   * presentation.\n   */\n  function layout() {\n    if (dom.wrapper && !printView.isActive()) {\n      const viewportWidth = dom.viewport.offsetWidth\n      const viewportHeight = dom.viewport.offsetHeight\n\n      if (!config.disableLayout) {\n        // On some mobile devices '100vh' is taller than the visible\n        // viewport which leads to part of the presentation being\n        // cut off. To work around this we define our own '--vh' custom\n        // property where 100x adds up to the correct height.\n        //\n        // https://css-tricks.com/the-trick-to-viewport-units-on-mobile/\n        if (Device.isMobile && !config.embedded) {\n          document.documentElement.style.setProperty(\n            \"--vh\",\n            window.innerHeight * 0.01 + \"px\",\n          )\n        }\n\n        const size = scrollView.isActive()\n          ? getComputedSlideSize(viewportWidth, viewportHeight)\n          : getComputedSlideSize()\n\n        const oldScale = scale\n\n        // Layout the contents of the slides\n        layoutSlideContents(config.width, config.height)\n\n        dom.slides.style.width = size.width + \"px\"\n        dom.slides.style.height = size.height + \"px\"\n\n        // Determine scale of content to fit within available space\n        scale = Math.min(\n          size.presentationWidth / size.width,\n          size.presentationHeight / size.height,\n        )\n\n        // Respect max/min scale settings\n        scale = Math.max(scale, config.minScale)\n        scale = Math.min(scale, config.maxScale)\n\n        // Don't apply any scaling styles if scale is 1 or we're\n        // in the scroll view\n        if (scale === 1 || scrollView.isActive()) {\n          dom.slides.style.zoom = \"\"\n          dom.slides.style.left = \"\"\n          dom.slides.style.top = \"\"\n          dom.slides.style.bottom = \"\"\n          dom.slides.style.right = \"\"\n          transformSlides({ layout: \"\" })\n        } else {\n          dom.slides.style.zoom = \"\"\n          dom.slides.style.left = \"50%\"\n          dom.slides.style.top = \"50%\"\n          dom.slides.style.bottom = \"auto\"\n          dom.slides.style.right = \"auto\"\n          transformSlides({\n            layout: \"translate(-50%, -50%) scale(\" + scale + \")\",\n          })\n        }\n\n        // Select all slides, vertical and horizontal\n        const slides = Array.from(dom.wrapper.querySelectorAll(SLIDES_SELECTOR))\n\n        for (let i = 0, len = slides.length; i < len; i++) {\n          const slide = slides[i]\n\n          // Don't bother updating invisible slides\n          if (slide.style.display === \"none\") {\n            continue\n          }\n\n          if (config.center || slide.classList.contains(\"center\")) {\n            // Vertical stacks are not centred since their section\n            // children will be\n            if (slide.classList.contains(\"stack\")) {\n              slide.style.top = 0\n            } else {\n              slide.style.top =\n                Math.max((size.height - slide.scrollHeight) / 2, 0) + \"px\"\n            }\n          } else {\n            slide.style.top = \"\"\n          }\n        }\n\n        if (oldScale !== scale) {\n          dispatchEvent({\n            type: \"resize\",\n            data: {\n              oldScale,\n              scale,\n              size,\n            },\n          })\n        }\n      }\n\n      checkResponsiveScrollView()\n\n      dom.viewport.style.setProperty(\"--slide-scale\", scale)\n      dom.viewport.style.setProperty(\"--viewport-width\", viewportWidth + \"px\")\n      dom.viewport.style.setProperty(\"--viewport-height\", viewportHeight + \"px\")\n\n      scrollView.layout()\n\n      progress.update()\n      backgrounds.updateParallax()\n\n      if (overview.isActive()) {\n        overview.update()\n      }\n    }\n  }\n\n  /**\n   * Applies layout logic to the contents of all slides in\n   * the presentation.\n   *\n   * @param {string|number} width\n   * @param {string|number} height\n   */\n  function layoutSlideContents(width, height) {\n    // Handle sizing of elements with the 'r-stretch' class\n    Util.queryAll(\n      dom.slides,\n      \"section > .stretch, section > .r-stretch\",\n    ).forEach(element => {\n      // Determine how much vertical space we can use\n      let remainingHeight = Util.getRemainingHeight(element, height)\n\n      // Consider the aspect ratio of media elements\n      if (/(img|video)/gi.test(element.nodeName)) {\n        const nw = element.naturalWidth || element.videoWidth,\n          nh = element.naturalHeight || element.videoHeight\n\n        const es = Math.min(width / nw, remainingHeight / nh)\n\n        element.style.width = nw * es + \"px\"\n        element.style.height = nh * es + \"px\"\n      } else {\n        element.style.width = width + \"px\"\n        element.style.height = remainingHeight + \"px\"\n      }\n    })\n  }\n\n  /**\n   * Responsively activates the scroll mode when we reach the configured\n   * activation width.\n   */\n  function checkResponsiveScrollView() {\n    // Only proceed if...\n    // 1. The DOM is ready\n    // 2. Layouts aren't disabled via config\n    // 3. We're not currently printing\n    // 4. There is a scrollActivationWidth set\n    // 5. The deck isn't configured to always use the scroll view\n    if (\n      dom.wrapper &&\n      !config.disableLayout &&\n      !printView.isActive() &&\n      typeof config.scrollActivationWidth === \"number\" &&\n      config.view !== \"scroll\"\n    ) {\n      const size = getComputedSlideSize()\n\n      if (\n        size.presentationWidth > 0 &&\n        size.presentationWidth <= config.scrollActivationWidth\n      ) {\n        if (!scrollView.isActive()) {\n          backgrounds.create()\n          scrollView.activate()\n        }\n      } else {\n        if (scrollView.isActive()) scrollView.deactivate()\n      }\n    }\n  }\n\n  /**\n   * Calculates the computed pixel size of our slides. These\n   * values are based on the width and height configuration\n   * options.\n   *\n   * @param {number} [presentationWidth=dom.wrapper.offsetWidth]\n   * @param {number} [presentationHeight=dom.wrapper.offsetHeight]\n   */\n  function getComputedSlideSize(presentationWidth, presentationHeight) {\n    let width = config.width\n    let height = config.height\n\n    if (config.disableLayout) {\n      width = dom.slides.offsetWidth\n      height = dom.slides.offsetHeight\n    }\n\n    const size = {\n      // Slide size\n      width: width,\n      height: height,\n\n      // Presentation size\n      presentationWidth: presentationWidth || dom.wrapper.offsetWidth,\n      presentationHeight: presentationHeight || dom.wrapper.offsetHeight,\n    }\n\n    // Reduce available space by margin\n    size.presentationWidth -= size.presentationWidth * config.margin\n    size.presentationHeight -= size.presentationHeight * config.margin\n\n    // Slide width may be a percentage of available width\n    if (typeof size.width === \"string\" && /%$/.test(size.width)) {\n      size.width = (parseInt(size.width, 10) / 100) * size.presentationWidth\n    }\n\n    // Slide height may be a percentage of available height\n    if (typeof size.height === \"string\" && /%$/.test(size.height)) {\n      size.height = (parseInt(size.height, 10) / 100) * size.presentationHeight\n    }\n\n    return size\n  }\n\n  /**\n   * Stores the vertical index of a stack so that the same\n   * vertical slide can be selected when navigating to and\n   * from the stack.\n   *\n   * @param {HTMLElement} stack The vertical stack element\n   * @param {string|number} [v=0] Index to memorize\n   */\n  function setPreviousVerticalIndex(stack, v) {\n    if (typeof stack === \"object\" && typeof stack.setAttribute === \"function\") {\n      stack.setAttribute(\"data-previous-indexv\", v || 0)\n    }\n  }\n\n  /**\n   * Retrieves the vertical index which was stored using\n   * #setPreviousVerticalIndex() or 0 if no previous index\n   * exists.\n   *\n   * @param {HTMLElement} stack The vertical stack element\n   */\n  function getPreviousVerticalIndex(stack) {\n    if (\n      typeof stack === \"object\" &&\n      typeof stack.setAttribute === \"function\" &&\n      stack.classList.contains(\"stack\")\n    ) {\n      // Prefer manually defined start-indexv\n      const attributeName = stack.hasAttribute(\"data-start-indexv\")\n        ? \"data-start-indexv\"\n        : \"data-previous-indexv\"\n\n      return parseInt(stack.getAttribute(attributeName) || 0, 10)\n    }\n\n    return 0\n  }\n\n  /**\n   * Checks if the current or specified slide is vertical\n   * (nested within another slide).\n   *\n   * @param {HTMLElement} [slide=currentSlide] The slide to check\n   * orientation of\n   * @return {Boolean}\n   */\n  function isVerticalSlide(slide = currentSlide) {\n    return (\n      slide && slide.parentNode && !!slide.parentNode.nodeName.match(/section/i)\n    )\n  }\n\n  /**\n   * Checks if the current or specified slide is a stack containing\n   * vertical slides.\n   *\n   * @param {HTMLElement} [slide=currentSlide]\n   * @return {Boolean}\n   */\n  function isVerticalStack(slide = currentSlide) {\n    return (\n      slide.classList.contains(\".stack\") ||\n      slide.querySelector(\"section\") !== null\n    )\n  }\n\n  /**\n   * Returns true if we're on the last slide in the current\n   * vertical stack.\n   */\n  function isLastVerticalSlide() {\n    if (currentSlide && isVerticalSlide(currentSlide)) {\n      // Does this slide have a next sibling?\n      if (currentSlide.nextElementSibling) return false\n\n      return true\n    }\n\n    return false\n  }\n\n  /**\n   * Returns true if we're currently on the first slide in\n   * the presentation.\n   */\n  function isFirstSlide() {\n    return indexh === 0 && indexv === 0\n  }\n\n  /**\n   * Returns true if we're currently on the last slide in\n   * the presenation. If the last slide is a stack, we only\n   * consider this the last slide if it's at the end of the\n   * stack.\n   */\n  function isLastSlide() {\n    if (currentSlide) {\n      // Does this slide have a next sibling?\n      if (currentSlide.nextElementSibling) return false\n\n      // If it's vertical, does its parent have a next sibling?\n      if (\n        isVerticalSlide(currentSlide) &&\n        currentSlide.parentNode.nextElementSibling\n      )\n        return false\n\n      return true\n    }\n\n    return false\n  }\n\n  /**\n   * Enters the paused mode which fades everything on screen to\n   * black.\n   */\n  function pause() {\n    if (config.pause) {\n      const wasPaused = dom.wrapper.classList.contains(\"paused\")\n\n      cancelAutoSlide()\n      dom.wrapper.classList.add(\"paused\")\n\n      if (wasPaused === false) {\n        dispatchEvent({ type: \"paused\" })\n      }\n    }\n  }\n\n  /**\n   * Exits from the paused mode.\n   */\n  function resume() {\n    const wasPaused = dom.wrapper.classList.contains(\"paused\")\n    dom.wrapper.classList.remove(\"paused\")\n\n    cueAutoSlide()\n\n    if (wasPaused) {\n      dispatchEvent({ type: \"resumed\" })\n    }\n  }\n\n  /**\n   * Toggles the paused mode on and off.\n   */\n  function togglePause(override) {\n    if (typeof override === \"boolean\") {\n      override ? pause() : resume()\n    } else {\n      isPaused() ? resume() : pause()\n    }\n  }\n\n  /**\n   * Checks if we are currently in the paused mode.\n   *\n   * @return {Boolean}\n   */\n  function isPaused() {\n    return dom.wrapper.classList.contains(\"paused\")\n  }\n\n  /**\n   * Toggles visibility of the jump-to-slide UI.\n   */\n  function toggleJumpToSlide(override) {\n    if (typeof override === \"boolean\") {\n      override ? jumpToSlide.show() : jumpToSlide.hide()\n    } else {\n      jumpToSlide.isVisible() ? jumpToSlide.hide() : jumpToSlide.show()\n    }\n  }\n\n  /**\n   * Toggles the auto slide mode on and off.\n   *\n   * @param {Boolean} [override] Flag which sets the desired state.\n   * True means autoplay starts, false means it stops.\n   */\n\n  function toggleAutoSlide(override) {\n    if (typeof override === \"boolean\") {\n      override ? resumeAutoSlide() : pauseAutoSlide()\n    } else {\n      autoSlidePaused ? resumeAutoSlide() : pauseAutoSlide()\n    }\n  }\n\n  /**\n   * Checks if the auto slide mode is currently on.\n   *\n   * @return {Boolean}\n   */\n  function isAutoSliding() {\n    return !!(autoSlide && !autoSlidePaused)\n  }\n\n  /**\n   * Steps from the current point in the presentation to the\n   * slide which matches the specified horizontal and vertical\n   * indices.\n   *\n   * @param {number} [h=indexh] Horizontal index of the target slide\n   * @param {number} [v=indexv] Vertical index of the target slide\n   * @param {number} [f] Index of a fragment within the\n   * target slide to activate\n   * @param {number} [origin] Origin for use in multimaster environments\n   */\n  function slide(h, v, f, origin) {\n    // Dispatch an event before the slide\n    const slidechange = dispatchEvent({\n      type: \"beforeslidechange\",\n      data: {\n        indexh: h === undefined ? indexh : h,\n        indexv: v === undefined ? indexv : v,\n        origin,\n      },\n    })\n\n    // Abort if this slide change was prevented by an event listener\n    if (slidechange.defaultPrevented) return\n\n    // Remember where we were at before\n    previousSlide = currentSlide\n\n    // Query all horizontal slides in the deck\n    const horizontalSlides = dom.wrapper.querySelectorAll(\n      HORIZONTAL_SLIDES_SELECTOR,\n    )\n\n    // If we're in scroll mode, we scroll the target slide into view\n    // instead of running our standard slide transition\n    if (scrollView.isActive()) {\n      const scrollToSlide = scrollView.getSlideByIndices(h, v)\n      if (scrollToSlide) scrollView.scrollToSlide(scrollToSlide)\n      return\n    }\n\n    // Abort if there are no slides\n    if (horizontalSlides.length === 0) return\n\n    // If no vertical index is specified and the upcoming slide is a\n    // stack, resume at its previous vertical index\n    if (v === undefined && !overview.isActive()) {\n      v = getPreviousVerticalIndex(horizontalSlides[h])\n    }\n\n    // If we were on a vertical stack, remember what vertical index\n    // it was on so we can resume at the same position when returning\n    if (\n      previousSlide &&\n      previousSlide.parentNode &&\n      previousSlide.parentNode.classList.contains(\"stack\")\n    ) {\n      setPreviousVerticalIndex(previousSlide.parentNode, indexv)\n    }\n\n    // Remember the state before this slide\n    const stateBefore = state.concat()\n\n    // Reset the state array\n    state.length = 0\n\n    let indexhBefore = indexh || 0,\n      indexvBefore = indexv || 0\n\n    // Activate and transition to the new slide\n    indexh = updateSlides(\n      HORIZONTAL_SLIDES_SELECTOR,\n      h === undefined ? indexh : h,\n    )\n    indexv = updateSlides(\n      VERTICAL_SLIDES_SELECTOR,\n      v === undefined ? indexv : v,\n    )\n\n    // Dispatch an event if the slide changed\n    let slideChanged = indexh !== indexhBefore || indexv !== indexvBefore\n\n    // Ensure that the previous slide is never the same as the current\n    if (!slideChanged) previousSlide = null\n\n    // Find the current horizontal slide and any possible vertical slides\n    // within it\n    let currentHorizontalSlide = horizontalSlides[indexh],\n      currentVerticalSlides = currentHorizontalSlide.querySelectorAll(\"section\")\n\n    // Store references to the previous and current slides\n    currentSlide = currentVerticalSlides[indexv] || currentHorizontalSlide\n\n    let autoAnimateTransition = false\n\n    // Detect if we're moving between two auto-animated slides\n    if (slideChanged && previousSlide && currentSlide && !overview.isActive()) {\n      transition = \"running\"\n\n      autoAnimateTransition = shouldAutoAnimateBetween(\n        previousSlide,\n        currentSlide,\n        indexhBefore,\n        indexvBefore,\n      )\n\n      // If this is an auto-animated transition, we disable the\n      // regular slide transition\n      //\n      // Note 20-03-2020:\n      // This needs to happen before we update slide visibility,\n      // otherwise transitions will still run in Safari.\n      if (autoAnimateTransition) {\n        dom.slides.classList.add(\"disable-slide-transitions\")\n      }\n    }\n\n    // Update the visibility of slides now that the indices have changed\n    updateSlidesVisibility()\n\n    layout()\n\n    // Update the overview if it's currently active\n    if (overview.isActive()) {\n      overview.update()\n    }\n\n    // Show fragment, if specified\n    if (typeof f !== \"undefined\") {\n      fragments.goto(f)\n    }\n\n    // Solves an edge case where the previous slide maintains the\n    // 'present' class when navigating between adjacent vertical\n    // stacks\n    if (previousSlide && previousSlide !== currentSlide) {\n      previousSlide.classList.remove(\"present\")\n      previousSlide.setAttribute(\"aria-hidden\", \"true\")\n\n      // Reset all slides upon navigate to home\n      if (isFirstSlide()) {\n        // Launch async task\n        setTimeout(() => {\n          getVerticalStacks().forEach(slide => {\n            setPreviousVerticalIndex(slide, 0)\n          })\n        }, 0)\n      }\n    }\n\n    // Apply the new state\n    stateLoop: for (let i = 0, len = state.length; i < len; i++) {\n      // Check if this state existed on the previous slide. If it\n      // did, we will avoid adding it repeatedly\n      for (let j = 0; j < stateBefore.length; j++) {\n        if (stateBefore[j] === state[i]) {\n          stateBefore.splice(j, 1)\n          continue stateLoop\n        }\n      }\n\n      dom.viewport.classList.add(state[i])\n\n      // Dispatch custom event matching the state's name\n      dispatchEvent({ type: state[i] })\n    }\n\n    // Clean up the remains of the previous state\n    while (stateBefore.length) {\n      dom.viewport.classList.remove(stateBefore.pop())\n    }\n\n    if (slideChanged) {\n      dispatchSlideChanged(origin)\n    }\n\n    // Handle embedded content\n    if (slideChanged || !previousSlide) {\n      slideContent.stopEmbeddedContent(previousSlide)\n      slideContent.startEmbeddedContent(currentSlide)\n    }\n\n    // Announce the current slide contents to screen readers\n    // Use animation frame to prevent getComputedStyle in getStatusText\n    // from triggering layout mid-frame\n    requestAnimationFrame(() => {\n      announceStatus(getStatusText(currentSlide))\n    })\n\n    progress.update()\n    controls.update()\n    notes.update()\n    backgrounds.update()\n    backgrounds.updateParallax()\n    slideNumber.update()\n    fragments.update()\n\n    // Update the URL hash\n    location.writeURL()\n\n    cueAutoSlide()\n\n    // Auto-animation\n    if (autoAnimateTransition) {\n      setTimeout(() => {\n        dom.slides.classList.remove(\"disable-slide-transitions\")\n      }, 0)\n\n      if (config.autoAnimate) {\n        // Run the auto-animation between our slides\n        autoAnimate.run(previousSlide, currentSlide)\n      }\n    }\n  }\n\n  /**\n   * Checks whether or not an auto-animation should take place between\n   * the two given slides.\n   *\n   * @param {HTMLElement} fromSlide\n   * @param {HTMLElement} toSlide\n   * @param {number} indexhBefore\n   * @param {number} indexvBefore\n   *\n   * @returns {boolean}\n   */\n  function shouldAutoAnimateBetween(\n    fromSlide,\n    toSlide,\n    indexhBefore,\n    indexvBefore,\n  ) {\n    return (\n      fromSlide.hasAttribute(\"data-auto-animate\") &&\n      toSlide.hasAttribute(\"data-auto-animate\") &&\n      fromSlide.getAttribute(\"data-auto-animate-id\") ===\n        toSlide.getAttribute(\"data-auto-animate-id\") &&\n      !(\n        indexh > indexhBefore || indexv > indexvBefore ? toSlide : fromSlide\n      ).hasAttribute(\"data-auto-animate-restart\")\n    )\n  }\n\n  /**\n   * Called anytime a new slide should be activated while in the scroll\n   * view. The active slide is the page that occupies the most space in\n   * the scrollable viewport.\n   *\n   * @param {number} pageIndex\n   * @param {HTMLElement} slideElement\n   */\n  function setCurrentScrollPage(slideElement, h, v) {\n    let indexhBefore = indexh || 0\n\n    indexh = h\n    indexv = v\n\n    const slideChanged = currentSlide !== slideElement\n\n    previousSlide = currentSlide\n    currentSlide = slideElement\n\n    if (currentSlide && previousSlide) {\n      if (\n        config.autoAnimate &&\n        shouldAutoAnimateBetween(\n          previousSlide,\n          currentSlide,\n          indexhBefore,\n          indexv,\n        )\n      ) {\n        // Run the auto-animation between our slides\n        autoAnimate.run(previousSlide, currentSlide)\n      }\n    }\n\n    // Start or stop embedded content like videos and iframes\n    if (slideChanged) {\n      if (previousSlide) {\n        slideContent.stopEmbeddedContent(previousSlide)\n        slideContent.stopEmbeddedContent(previousSlide.slideBackgroundElement)\n      }\n\n      slideContent.startEmbeddedContent(currentSlide)\n      slideContent.startEmbeddedContent(currentSlide.slideBackgroundElement)\n    }\n\n    requestAnimationFrame(() => {\n      announceStatus(getStatusText(currentSlide))\n    })\n\n    dispatchSlideChanged()\n  }\n\n  /**\n   * Syncs the presentation with the current DOM. Useful\n   * when new slides or control elements are added or when\n   * the configuration has changed.\n   */\n  function sync() {\n    // Subscribe to input\n    removeEventListeners()\n    addEventListeners()\n\n    // Force a layout to make sure the current config is accounted for\n    layout()\n\n    // Reflect the current autoSlide value\n    autoSlide = config.autoSlide\n\n    // Start auto-sliding if it's enabled\n    cueAutoSlide()\n\n    // Re-create all slide backgrounds\n    backgrounds.create()\n\n    // Write the current hash to the URL\n    location.writeURL()\n\n    if (config.sortFragmentsOnSync === true) {\n      fragments.sortAll()\n    }\n\n    controls.update()\n    progress.update()\n\n    updateSlidesVisibility()\n\n    notes.update()\n    notes.updateVisibility()\n    backgrounds.update(true)\n    slideNumber.update()\n    slideContent.formatEmbeddedContent()\n\n    // Start or stop embedded content depending on global config\n    if (config.autoPlayMedia === false) {\n      slideContent.stopEmbeddedContent(currentSlide, { unloadIframes: false })\n    } else {\n      slideContent.startEmbeddedContent(currentSlide)\n    }\n\n    if (overview.isActive()) {\n      overview.layout()\n    }\n  }\n\n  /**\n   * Updates reveal.js to keep in sync with new slide attributes. For\n   * example, if you add a new `data-background-image` you can call\n   * this to have reveal.js render the new background image.\n   *\n   * Similar to #sync() but more efficient when you only need to\n   * refresh a specific slide.\n   *\n   * @param {HTMLElement} slide\n   */\n  function syncSlide(slide = currentSlide) {\n    backgrounds.sync(slide)\n    fragments.sync(slide)\n\n    slideContent.load(slide)\n\n    backgrounds.update()\n    notes.update()\n  }\n\n  /**\n   * Resets all vertical slides so that only the first\n   * is visible.\n   */\n  function resetVerticalSlides() {\n    getHorizontalSlides().forEach(horizontalSlide => {\n      Util.queryAll(horizontalSlide, \"section\").forEach((verticalSlide, y) => {\n        if (y > 0) {\n          verticalSlide.classList.remove(\"present\")\n          verticalSlide.classList.remove(\"past\")\n          verticalSlide.classList.add(\"future\")\n          verticalSlide.setAttribute(\"aria-hidden\", \"true\")\n        }\n      })\n    })\n  }\n\n  /**\n   * Randomly shuffles all slides in the deck.\n   */\n  function shuffle(slides = getHorizontalSlides()) {\n    slides.forEach((slide, i) => {\n      // Insert the slide next to a randomly picked sibling slide\n      // slide. This may cause the slide to insert before itself,\n      // but that's not an issue.\n      let beforeSlide = slides[Math.floor(Math.random() * slides.length)]\n      if (beforeSlide.parentNode === slide.parentNode) {\n        slide.parentNode.insertBefore(slide, beforeSlide)\n      }\n\n      // Randomize the order of vertical slides (if there are any)\n      let verticalSlides = slide.querySelectorAll(\"section\")\n      if (verticalSlides.length) {\n        shuffle(verticalSlides)\n      }\n    })\n  }\n\n  /**\n   * Updates one dimension of slides by showing the slide\n   * with the specified index.\n   *\n   * @param {string} selector A CSS selector that will fetch\n   * the group of slides we are working with\n   * @param {number} index The index of the slide that should be\n   * shown\n   *\n   * @return {number} The index of the slide that is now shown,\n   * might differ from the passed in index if it was out of\n   * bounds.\n   */\n  function updateSlides(selector, index) {\n    // Select all slides and convert the NodeList result to\n    // an array\n    let slides = Util.queryAll(dom.wrapper, selector),\n      slidesLength = slides.length\n\n    let printMode = scrollView.isActive() || printView.isActive()\n    let loopedForwards = false\n    let loopedBackwards = false\n\n    if (slidesLength) {\n      // Should the index loop?\n      if (config.loop) {\n        if (index >= slidesLength) loopedForwards = true\n\n        index %= slidesLength\n\n        if (index < 0) {\n          index = slidesLength + index\n          loopedBackwards = true\n        }\n      }\n\n      // Enforce max and minimum index bounds\n      index = Math.max(Math.min(index, slidesLength - 1), 0)\n\n      for (let i = 0; i < slidesLength; i++) {\n        let element = slides[i]\n\n        let reverse = config.rtl && !isVerticalSlide(element)\n\n        // Avoid .remove() with multiple args for IE11 support\n        element.classList.remove(\"past\")\n        element.classList.remove(\"present\")\n        element.classList.remove(\"future\")\n\n        // http://www.w3.org/html/wg/drafts/html/master/editing.html#the-hidden-attribute\n        element.setAttribute(\"hidden\", \"\")\n        element.setAttribute(\"aria-hidden\", \"true\")\n\n        // If this element contains vertical slides\n        if (element.querySelector(\"section\")) {\n          element.classList.add(\"stack\")\n        }\n\n        // If we're printing static slides, all slides are \"present\"\n        if (printMode) {\n          element.classList.add(\"present\")\n          continue\n        }\n\n        if (i < index) {\n          // Any element previous to index is given the 'past' class\n          element.classList.add(reverse ? \"future\" : \"past\")\n\n          if (config.fragments) {\n            // Show all fragments in prior slides\n            showFragmentsIn(element)\n          }\n        } else if (i > index) {\n          // Any element subsequent to index is given the 'future' class\n          element.classList.add(reverse ? \"past\" : \"future\")\n\n          if (config.fragments) {\n            // Hide all fragments in future slides\n            hideFragmentsIn(element)\n          }\n        }\n        // Update the visibility of fragments when a presentation loops\n        // in either direction\n        else if (i === index && config.fragments) {\n          if (loopedForwards) {\n            hideFragmentsIn(element)\n          } else if (loopedBackwards) {\n            showFragmentsIn(element)\n          }\n        }\n      }\n\n      let slide = slides[index]\n      let wasPresent = slide.classList.contains(\"present\")\n\n      // Mark the current slide as present\n      slide.classList.add(\"present\")\n      slide.removeAttribute(\"hidden\")\n      slide.removeAttribute(\"aria-hidden\")\n\n      if (!wasPresent) {\n        // Dispatch an event indicating the slide is now visible\n        dispatchEvent({\n          target: slide,\n          type: \"visible\",\n          bubbles: false,\n        })\n      }\n\n      // If this slide has a state associated with it, add it\n      // onto the current state of the deck\n      let slideState = slide.getAttribute(\"data-state\")\n      if (slideState) {\n        state = state.concat(slideState.split(\" \"))\n      }\n    } else {\n      // Since there are no slides we can't be anywhere beyond the\n      // zeroth index\n      index = 0\n    }\n\n    return index\n  }\n\n  /**\n   * Shows all fragment elements within the given container.\n   */\n  function showFragmentsIn(container) {\n    Util.queryAll(container, \".fragment\").forEach(fragment => {\n      fragment.classList.add(\"visible\")\n      fragment.classList.remove(\"current-fragment\")\n    })\n  }\n\n  /**\n   * Hides all fragment elements within the given container.\n   */\n  function hideFragmentsIn(container) {\n    Util.queryAll(container, \".fragment.visible\").forEach(fragment => {\n      fragment.classList.remove(\"visible\", \"current-fragment\")\n    })\n  }\n\n  /**\n   * Optimization method; hide all slides that are far away\n   * from the present slide.\n   */\n  function updateSlidesVisibility() {\n    // Select all slides and convert the NodeList result to\n    // an array\n    let horizontalSlides = getHorizontalSlides(),\n      horizontalSlidesLength = horizontalSlides.length,\n      distanceX,\n      distanceY\n\n    if (horizontalSlidesLength && typeof indexh !== \"undefined\") {\n      // The number of steps away from the present slide that will\n      // be visible\n      let viewDistance = overview.isActive() ? 10 : config.viewDistance\n\n      // Shorten the view distance on devices that typically have\n      // less resources\n      if (Device.isMobile) {\n        viewDistance = overview.isActive() ? 6 : config.mobileViewDistance\n      }\n\n      // All slides need to be visible when exporting to PDF\n      if (printView.isActive()) {\n        viewDistance = Number.MAX_VALUE\n      }\n\n      for (let x = 0; x < horizontalSlidesLength; x++) {\n        let horizontalSlide = horizontalSlides[x]\n\n        let verticalSlides = Util.queryAll(horizontalSlide, \"section\"),\n          verticalSlidesLength = verticalSlides.length\n\n        // Determine how far away this slide is from the present\n        distanceX = Math.abs((indexh || 0) - x) || 0\n\n        // If the presentation is looped, distance should measure\n        // 1 between the first and last slides\n        if (config.loop) {\n          distanceX =\n            Math.abs(\n              ((indexh || 0) - x) % (horizontalSlidesLength - viewDistance),\n            ) || 0\n        }\n\n        // Show the horizontal slide if it's within the view distance\n        if (distanceX < viewDistance) {\n          slideContent.load(horizontalSlide)\n        } else {\n          slideContent.unload(horizontalSlide)\n        }\n\n        if (verticalSlidesLength) {\n          let oy = getPreviousVerticalIndex(horizontalSlide)\n\n          for (let y = 0; y < verticalSlidesLength; y++) {\n            let verticalSlide = verticalSlides[y]\n\n            distanceY =\n              x === (indexh || 0)\n                ? Math.abs((indexv || 0) - y)\n                : Math.abs(y - oy)\n\n            if (distanceX + distanceY < viewDistance) {\n              slideContent.load(verticalSlide)\n            } else {\n              slideContent.unload(verticalSlide)\n            }\n          }\n        }\n      }\n\n      // Flag if there are ANY vertical slides, anywhere in the deck\n      if (hasVerticalSlides()) {\n        dom.wrapper.classList.add(\"has-vertical-slides\")\n      } else {\n        dom.wrapper.classList.remove(\"has-vertical-slides\")\n      }\n\n      // Flag if there are ANY horizontal slides, anywhere in the deck\n      if (hasHorizontalSlides()) {\n        dom.wrapper.classList.add(\"has-horizontal-slides\")\n      } else {\n        dom.wrapper.classList.remove(\"has-horizontal-slides\")\n      }\n    }\n  }\n\n  /**\n   * Determine what available routes there are for navigation.\n   *\n   * @return {{left: boolean, right: boolean, up: boolean, down: boolean}}\n   */\n  function availableRoutes({ includeFragments = false } = {}) {\n    let horizontalSlides = dom.wrapper.querySelectorAll(\n        HORIZONTAL_SLIDES_SELECTOR,\n      ),\n      verticalSlides = dom.wrapper.querySelectorAll(VERTICAL_SLIDES_SELECTOR)\n\n    let routes = {\n      left: indexh > 0,\n      right: indexh < horizontalSlides.length - 1,\n      up: indexv > 0,\n      down: indexv < verticalSlides.length - 1,\n    }\n\n    // Looped presentations can always be navigated as long as\n    // there are slides available\n    if (config.loop) {\n      if (horizontalSlides.length > 1) {\n        routes.left = true\n        routes.right = true\n      }\n\n      if (verticalSlides.length > 1) {\n        routes.up = true\n        routes.down = true\n      }\n    }\n\n    if (horizontalSlides.length > 1 && config.navigationMode === \"linear\") {\n      routes.right = routes.right || routes.down\n      routes.left = routes.left || routes.up\n    }\n\n    // If includeFragments is set, a route will be considered\n    // available if either a slid OR fragment is available in\n    // the given direction\n    if (includeFragments === true) {\n      let fragmentRoutes = fragments.availableRoutes()\n      routes.left = routes.left || fragmentRoutes.prev\n      routes.up = routes.up || fragmentRoutes.prev\n      routes.down = routes.down || fragmentRoutes.next\n      routes.right = routes.right || fragmentRoutes.next\n    }\n\n    // Reverse horizontal controls for rtl\n    if (config.rtl) {\n      let left = routes.left\n      routes.left = routes.right\n      routes.right = left\n    }\n\n    return routes\n  }\n\n  /**\n   * Returns the number of past slides. This can be used as a global\n   * flattened index for slides.\n   *\n   * @param {HTMLElement} [slide=currentSlide] The slide we're counting before\n   *\n   * @return {number} Past slide count\n   */\n  function getSlidePastCount(slide = currentSlide) {\n    let horizontalSlides = getHorizontalSlides()\n\n    // The number of past slides\n    let pastCount = 0\n\n    // Step through all slides and count the past ones\n    mainLoop: for (let i = 0; i < horizontalSlides.length; i++) {\n      let horizontalSlide = horizontalSlides[i]\n      let verticalSlides = horizontalSlide.querySelectorAll(\"section\")\n\n      for (let j = 0; j < verticalSlides.length; j++) {\n        // Stop as soon as we arrive at the present\n        if (verticalSlides[j] === slide) {\n          break mainLoop\n        }\n\n        // Don't count slides with the \"uncounted\" class\n        if (verticalSlides[j].dataset.visibility !== \"uncounted\") {\n          pastCount++\n        }\n      }\n\n      // Stop as soon as we arrive at the present\n      if (horizontalSlide === slide) {\n        break\n      }\n\n      // Don't count the wrapping section for vertical slides and\n      // slides marked as uncounted\n      if (\n        horizontalSlide.classList.contains(\"stack\") === false &&\n        horizontalSlide.dataset.visibility !== \"uncounted\"\n      ) {\n        pastCount++\n      }\n    }\n\n    return pastCount\n  }\n\n  /**\n   * Returns a value ranging from 0-1 that represents\n   * how far into the presentation we have navigated.\n   *\n   * @return {number}\n   */\n  function getProgress() {\n    // The number of past and total slides\n    let totalCount = getTotalSlides()\n    let pastCount = getSlidePastCount()\n\n    if (currentSlide) {\n      let allFragments = currentSlide.querySelectorAll(\".fragment\")\n\n      // If there are fragments in the current slide those should be\n      // accounted for in the progress.\n      if (allFragments.length > 0) {\n        let visibleFragments =\n          currentSlide.querySelectorAll(\".fragment.visible\")\n\n        // This value represents how big a portion of the slide progress\n        // that is made up by its fragments (0-1)\n        let fragmentWeight = 0.9\n\n        // Add fragment progress to the past slide count\n        pastCount +=\n          (visibleFragments.length / allFragments.length) * fragmentWeight\n      }\n    }\n\n    return Math.min(pastCount / (totalCount - 1), 1)\n  }\n\n  /**\n   * Retrieves the h/v location and fragment of the current,\n   * or specified, slide.\n   *\n   * @param {HTMLElement} [slide] If specified, the returned\n   * index will be for this slide rather than the currently\n   * active one\n   *\n   * @return {{h: number, v: number, f: number}}\n   */\n  function getIndices(slide) {\n    // By default, return the current indices\n    let h = indexh,\n      v = indexv,\n      f\n\n    // If a slide is specified, return the indices of that slide\n    if (slide) {\n      // In scroll mode the original h/x index is stored on the slide\n      if (scrollView.isActive()) {\n        h = parseInt(slide.getAttribute(\"data-index-h\"), 10)\n\n        if (slide.getAttribute(\"data-index-v\")) {\n          v = parseInt(slide.getAttribute(\"data-index-v\"), 10)\n        }\n      } else {\n        let isVertical = isVerticalSlide(slide)\n        let slideh = isVertical ? slide.parentNode : slide\n\n        // Select all horizontal slides\n        let horizontalSlides = getHorizontalSlides()\n\n        // Now that we know which the horizontal slide is, get its index\n        h = Math.max(horizontalSlides.indexOf(slideh), 0)\n\n        // Assume we're not vertical\n        v = undefined\n\n        // If this is a vertical slide, grab the vertical index\n        if (isVertical) {\n          v = Math.max(\n            Util.queryAll(slide.parentNode, \"section\").indexOf(slide),\n            0,\n          )\n        }\n      }\n    }\n\n    if (!slide && currentSlide) {\n      let hasFragments = currentSlide.querySelectorAll(\".fragment\").length > 0\n      if (hasFragments) {\n        let currentFragment = currentSlide.querySelector(\".current-fragment\")\n        if (\n          currentFragment &&\n          currentFragment.hasAttribute(\"data-fragment-index\")\n        ) {\n          f = parseInt(currentFragment.getAttribute(\"data-fragment-index\"), 10)\n        } else {\n          f = currentSlide.querySelectorAll(\".fragment.visible\").length - 1\n        }\n      }\n    }\n\n    return { h, v, f }\n  }\n\n  /**\n   * Retrieves all slides in this presentation.\n   */\n  function getSlides() {\n    return Util.queryAll(\n      dom.wrapper,\n      SLIDES_SELECTOR + ':not(.stack):not([data-visibility=\"uncounted\"])',\n    )\n  }\n\n  /**\n   * Returns a list of all horizontal slides in the deck. Each\n   * vertical stack is included as one horizontal slide in the\n   * resulting array.\n   */\n  function getHorizontalSlides() {\n    return Util.queryAll(dom.wrapper, HORIZONTAL_SLIDES_SELECTOR)\n  }\n\n  /**\n   * Returns all vertical slides that exist within this deck.\n   */\n  function getVerticalSlides() {\n    return Util.queryAll(dom.wrapper, \".slides>section>section\")\n  }\n\n  /**\n   * Returns all vertical stacks (each stack can contain multiple slides).\n   */\n  function getVerticalStacks() {\n    return Util.queryAll(dom.wrapper, HORIZONTAL_SLIDES_SELECTOR + \".stack\")\n  }\n\n  /**\n   * Returns true if there are at least two horizontal slides.\n   */\n  function hasHorizontalSlides() {\n    return getHorizontalSlides().length > 1\n  }\n\n  /**\n   * Returns true if there are at least two vertical slides.\n   */\n  function hasVerticalSlides() {\n    return getVerticalSlides().length > 1\n  }\n\n  /**\n   * Returns an array of objects where each object represents the\n   * attributes on its respective slide.\n   */\n  function getSlidesAttributes() {\n    return getSlides().map(slide => {\n      let attributes = {}\n      for (let i = 0; i < slide.attributes.length; i++) {\n        let attribute = slide.attributes[i]\n        attributes[attribute.name] = attribute.value\n      }\n      return attributes\n    })\n  }\n\n  /**\n   * Retrieves the total number of slides in this presentation.\n   *\n   * @return {number}\n   */\n  function getTotalSlides() {\n    return getSlides().length\n  }\n\n  /**\n   * Returns the slide element matching the specified index.\n   *\n   * @return {HTMLElement}\n   */\n  function getSlide(x, y) {\n    let horizontalSlide = getHorizontalSlides()[x]\n    let verticalSlides =\n      horizontalSlide && horizontalSlide.querySelectorAll(\"section\")\n\n    if (verticalSlides && verticalSlides.length && typeof y === \"number\") {\n      return verticalSlides ? verticalSlides[y] : undefined\n    }\n\n    return horizontalSlide\n  }\n\n  /**\n   * Returns the background element for the given slide.\n   * All slides, even the ones with no background properties\n   * defined, have a background element so as long as the\n   * index is valid an element will be returned.\n   *\n   * @param {mixed} x Horizontal background index OR a slide\n   * HTML element\n   * @param {number} y Vertical background index\n   * @return {(HTMLElement[]|*)}\n   */\n  function getSlideBackground(x, y) {\n    let slide = typeof x === \"number\" ? getSlide(x, y) : x\n    if (slide) {\n      return slide.slideBackgroundElement\n    }\n\n    return undefined\n  }\n\n  /**\n   * Retrieves the current state of the presentation as\n   * an object. This state can then be restored at any\n   * time.\n   *\n   * @return {{indexh: number, indexv: number, indexf: number, paused: boolean, overview: boolean}}\n   */\n  function getState() {\n    let indices = getIndices()\n\n    return {\n      indexh: indices.h,\n      indexv: indices.v,\n      indexf: indices.f,\n      paused: isPaused(),\n      overview: overview.isActive(),\n    }\n  }\n\n  /**\n   * Restores the presentation to the given state.\n   *\n   * @param {object} state As generated by getState()\n   * @see {@link getState} generates the parameter `state`\n   */\n  function setState(state) {\n    if (typeof state === \"object\") {\n      slide(\n        Util.deserialize(state.indexh),\n        Util.deserialize(state.indexv),\n        Util.deserialize(state.indexf),\n      )\n\n      let pausedFlag = Util.deserialize(state.paused),\n        overviewFlag = Util.deserialize(state.overview)\n\n      if (typeof pausedFlag === \"boolean\" && pausedFlag !== isPaused()) {\n        togglePause(pausedFlag)\n      }\n\n      if (\n        typeof overviewFlag === \"boolean\" &&\n        overviewFlag !== overview.isActive()\n      ) {\n        overview.toggle(overviewFlag)\n      }\n    }\n  }\n\n  /**\n   * Cues a new automated slide if enabled in the config.\n   */\n  function cueAutoSlide() {\n    cancelAutoSlide()\n\n    if (currentSlide && config.autoSlide !== false) {\n      let fragment = currentSlide.querySelector(\n        \".current-fragment[data-autoslide]\",\n      )\n\n      let fragmentAutoSlide = fragment\n        ? fragment.getAttribute(\"data-autoslide\")\n        : null\n      let parentAutoSlide = currentSlide.parentNode\n        ? currentSlide.parentNode.getAttribute(\"data-autoslide\")\n        : null\n      let slideAutoSlide = currentSlide.getAttribute(\"data-autoslide\")\n\n      // Pick value in the following priority order:\n      // 1. Current fragment's data-autoslide\n      // 2. Current slide's data-autoslide\n      // 3. Parent slide's data-autoslide\n      // 4. Global autoSlide setting\n      if (fragmentAutoSlide) {\n        autoSlide = parseInt(fragmentAutoSlide, 10)\n      } else if (slideAutoSlide) {\n        autoSlide = parseInt(slideAutoSlide, 10)\n      } else if (parentAutoSlide) {\n        autoSlide = parseInt(parentAutoSlide, 10)\n      } else {\n        autoSlide = config.autoSlide\n\n        // If there are media elements with data-autoplay,\n        // automatically set the autoSlide duration to the\n        // length of that media. Not applicable if the slide\n        // is divided up into fragments.\n        // playbackRate is accounted for in the duration.\n        if (currentSlide.querySelectorAll(\".fragment\").length === 0) {\n          Util.queryAll(currentSlide, \"video, audio\").forEach(el => {\n            if (el.hasAttribute(\"data-autoplay\")) {\n              if (\n                autoSlide &&\n                (el.duration * 1000) / el.playbackRate > autoSlide\n              ) {\n                autoSlide = (el.duration * 1000) / el.playbackRate + 1000\n              }\n            }\n          })\n        }\n      }\n\n      // Cue the next auto-slide if:\n      // - There is an autoSlide value\n      // - Auto-sliding isn't paused by the user\n      // - The presentation isn't paused\n      // - The overview isn't active\n      // - The presentation isn't over\n      if (\n        autoSlide &&\n        !autoSlidePaused &&\n        !isPaused() &&\n        !overview.isActive() &&\n        (!isLastSlide() ||\n          fragments.availableRoutes().next ||\n          config.loop === true)\n      ) {\n        autoSlideTimeout = setTimeout(() => {\n          if (typeof config.autoSlideMethod === \"function\") {\n            config.autoSlideMethod()\n          } else {\n            navigateNext()\n          }\n          cueAutoSlide()\n        }, autoSlide)\n        autoSlideStartTime = Date.now()\n      }\n\n      if (autoSlidePlayer) {\n        autoSlidePlayer.setPlaying(autoSlideTimeout !== -1)\n      }\n    }\n  }\n\n  /**\n   * Cancels any ongoing request to auto-slide.\n   */\n  function cancelAutoSlide() {\n    clearTimeout(autoSlideTimeout)\n    autoSlideTimeout = -1\n  }\n\n  function pauseAutoSlide() {\n    if (autoSlide && !autoSlidePaused) {\n      autoSlidePaused = true\n      dispatchEvent({ type: \"autoslidepaused\" })\n      clearTimeout(autoSlideTimeout)\n\n      if (autoSlidePlayer) {\n        autoSlidePlayer.setPlaying(false)\n      }\n    }\n  }\n\n  function resumeAutoSlide() {\n    if (autoSlide && autoSlidePaused) {\n      autoSlidePaused = false\n      dispatchEvent({ type: \"autoslideresumed\" })\n      cueAutoSlide()\n    }\n  }\n\n  function navigateLeft({ skipFragments = false } = {}) {\n    navigationHistory.hasNavigatedHorizontally = true\n\n    // Scroll view navigation is handled independently\n    if (scrollView.isActive()) return scrollView.prev()\n\n    // Reverse for RTL\n    if (config.rtl) {\n      if (\n        (overview.isActive() || skipFragments || fragments.next() === false) &&\n        availableRoutes().left\n      ) {\n        slide(indexh + 1, config.navigationMode === \"grid\" ? indexv : undefined)\n      }\n    }\n    // Normal navigation\n    else if (\n      (overview.isActive() || skipFragments || fragments.prev() === false) &&\n      availableRoutes().left\n    ) {\n      slide(indexh - 1, config.navigationMode === \"grid\" ? indexv : undefined)\n    }\n  }\n\n  function navigateRight({ skipFragments = false } = {}) {\n    navigationHistory.hasNavigatedHorizontally = true\n\n    // Scroll view navigation is handled independently\n    if (scrollView.isActive()) return scrollView.next()\n\n    // Reverse for RTL\n    if (config.rtl) {\n      if (\n        (overview.isActive() || skipFragments || fragments.prev() === false) &&\n        availableRoutes().right\n      ) {\n        slide(indexh - 1, config.navigationMode === \"grid\" ? indexv : undefined)\n      }\n    }\n    // Normal navigation\n    else if (\n      (overview.isActive() || skipFragments || fragments.next() === false) &&\n      availableRoutes().right\n    ) {\n      slide(indexh + 1, config.navigationMode === \"grid\" ? indexv : undefined)\n    }\n  }\n\n  function navigateUp({ skipFragments = false } = {}) {\n    // Scroll view navigation is handled independently\n    if (scrollView.isActive()) return scrollView.prev()\n\n    // Prioritize hiding fragments\n    if (\n      (overview.isActive() || skipFragments || fragments.prev() === false) &&\n      availableRoutes().up\n    ) {\n      slide(indexh, indexv - 1)\n    }\n  }\n\n  function navigateDown({ skipFragments = false } = {}) {\n    navigationHistory.hasNavigatedVertically = true\n\n    // Scroll view navigation is handled independently\n    if (scrollView.isActive()) return scrollView.next()\n\n    // Prioritize revealing fragments\n    if (\n      (overview.isActive() || skipFragments || fragments.next() === false) &&\n      availableRoutes().down\n    ) {\n      slide(indexh, indexv + 1)\n    }\n  }\n\n  /**\n   * Navigates backwards, prioritized in the following order:\n   * 1) Previous fragment\n   * 2) Previous vertical slide\n   * 3) Previous horizontal slide\n   */\n  function navigatePrev({ skipFragments = false } = {}) {\n    // Scroll view navigation is handled independently\n    if (scrollView.isActive()) return scrollView.prev()\n\n    // Prioritize revealing fragments\n    if (skipFragments || fragments.prev() === false) {\n      if (availableRoutes().up) {\n        navigateUp({ skipFragments })\n      } else {\n        // Fetch the previous horizontal slide, if there is one\n        let previousSlide\n\n        if (config.rtl) {\n          previousSlide = Util.queryAll(\n            dom.wrapper,\n            HORIZONTAL_SLIDES_SELECTOR + \".future\",\n          ).pop()\n        } else {\n          previousSlide = Util.queryAll(\n            dom.wrapper,\n            HORIZONTAL_SLIDES_SELECTOR + \".past\",\n          ).pop()\n        }\n\n        // When going backwards and arriving on a stack we start\n        // at the bottom of the stack\n        if (previousSlide && previousSlide.classList.contains(\"stack\")) {\n          let v =\n            previousSlide.querySelectorAll(\"section\").length - 1 || undefined\n          let h = indexh - 1\n          slide(h, v)\n        } else {\n          navigateLeft({ skipFragments })\n        }\n      }\n    }\n  }\n\n  /**\n   * The reverse of #navigatePrev().\n   */\n  function navigateNext({ skipFragments = false } = {}) {\n    navigationHistory.hasNavigatedHorizontally = true\n    navigationHistory.hasNavigatedVertically = true\n\n    // Scroll view navigation is handled independently\n    if (scrollView.isActive()) return scrollView.next()\n\n    // Prioritize revealing fragments\n    if (skipFragments || fragments.next() === false) {\n      let routes = availableRoutes()\n\n      // When looping is enabled `routes.down` is always available\n      // so we need a separate check for when we've reached the\n      // end of a stack and should move horizontally\n      if (routes.down && routes.right && config.loop && isLastVerticalSlide()) {\n        routes.down = false\n      }\n\n      if (routes.down) {\n        navigateDown({ skipFragments })\n      } else if (config.rtl) {\n        navigateLeft({ skipFragments })\n      } else {\n        navigateRight({ skipFragments })\n      }\n    }\n  }\n\n  // --------------------------------------------------------------------//\n  // ----------------------------- EVENTS -------------------------------//\n  // --------------------------------------------------------------------//\n\n  /**\n   * Called by all event handlers that are based on user\n   * input.\n   *\n   * @param {object} [event]\n   */\n  function onUserInput(event) {\n    if (config.autoSlideStoppable) {\n      pauseAutoSlide()\n    }\n  }\n\n  /**\n   * Listener for post message events posted to this window.\n   */\n  function onPostMessage(event) {\n    let data = event.data\n\n    // Make sure we're dealing with JSON\n    if (\n      typeof data === \"string\" &&\n      data.charAt(0) === \"{\" &&\n      data.charAt(data.length - 1) === \"}\"\n    ) {\n      data = JSON.parse(data)\n\n      // Check if the requested method can be found\n      if (data.method && typeof Reveal[data.method] === \"function\") {\n        if (POST_MESSAGE_METHOD_BLACKLIST.test(data.method) === false) {\n          const result = Reveal[data.method].apply(Reveal, data.args)\n\n          // Dispatch a postMessage event with the returned value from\n          // our method invocation for getter functions\n          dispatchPostMessage(\"callback\", {\n            method: data.method,\n            result: result,\n          })\n        } else {\n          console.warn(\n            'reveal.js: \"' +\n              data.method +\n              '\" is is blacklisted from the postMessage API',\n          )\n        }\n      }\n    }\n  }\n\n  /**\n   * Event listener for transition end on the current slide.\n   *\n   * @param {object} [event]\n   */\n  function onTransitionEnd(event) {\n    if (transition === \"running\" && /section/gi.test(event.target.nodeName)) {\n      transition = \"idle\"\n      dispatchEvent({\n        type: \"slidetransitionend\",\n        data: { indexh, indexv, previousSlide, currentSlide },\n      })\n    }\n  }\n\n  /**\n   * A global listener for all click events inside of the\n   * .slides container.\n   *\n   * @param {object} [event]\n   */\n  function onSlidesClicked(event) {\n    const anchor = Util.closest(event.target, 'a[href^=\"#\"]')\n\n    // If a hash link is clicked, we find the target slide\n    // and navigate to it. We previously relied on 'hashchange'\n    // for links like these but that prevented media with\n    // audio tracks from playing in mobile browsers since it\n    // wasn't considered a direct interaction with the document.\n    if (anchor) {\n      const hash = anchor.getAttribute(\"href\")\n      const indices = location.getIndicesFromHash(hash)\n\n      if (indices) {\n        Reveal.slide(indices.h, indices.v, indices.f)\n        event.preventDefault()\n      }\n    }\n  }\n\n  /**\n   * Handler for the window level 'resize' event.\n   *\n   * @param {object} [event]\n   */\n  function onWindowResize(event) {\n    layout()\n  }\n\n  /**\n   * Handle for the window level 'visibilitychange' event.\n   *\n   * @param {object} [event]\n   */\n  function onPageVisibilityChange(event) {\n    // If, after clicking a link or similar and we're coming back,\n    // focus the document.body to ensure we can use keyboard shortcuts\n    if (document.hidden === false && document.activeElement !== document.body) {\n      // Not all elements support .blur() - SVGs among them.\n      if (typeof document.activeElement.blur === \"function\") {\n        document.activeElement.blur()\n      }\n      document.body.focus()\n    }\n  }\n\n  /**\n   * Handler for the document level 'fullscreenchange' event.\n   *\n   * @param {object} [event]\n   */\n  function onFullscreenChange(event) {\n    let element = document.fullscreenElement || document.webkitFullscreenElement\n    if (element === dom.wrapper) {\n      event.stopImmediatePropagation()\n\n      // Timeout to avoid layout shift in Safari\n      setTimeout(() => {\n        Reveal.layout()\n        Reveal.focus.focus() // focus.focus :'(\n      }, 1)\n    }\n  }\n\n  /**\n   * Handles clicks on links that are set to preview in the\n   * iframe overlay.\n   *\n   * @param {object} event\n   */\n  function onPreviewLinkClicked(event) {\n    if (event.currentTarget && event.currentTarget.hasAttribute(\"href\")) {\n      let url = event.currentTarget.getAttribute(\"href\")\n      if (url) {\n        showPreview(url)\n        event.preventDefault()\n      }\n    }\n  }\n\n  /**\n   * Handles click on the auto-sliding controls element.\n   *\n   * @param {object} [event]\n   */\n  function onAutoSlidePlayerClick(event) {\n    // Replay\n    if (isLastSlide() && config.loop === false) {\n      slide(0, 0)\n      resumeAutoSlide()\n    }\n    // Resume\n    else if (autoSlidePaused) {\n      resumeAutoSlide()\n    }\n    // Pause\n    else {\n      pauseAutoSlide()\n    }\n  }\n\n  // --------------------------------------------------------------------//\n  // ------------------------------- API --------------------------------//\n  // --------------------------------------------------------------------//\n\n  // The public reveal.js API\n  const API = {\n    VERSION,\n\n    initialize,\n    configure,\n    destroy,\n\n    sync,\n    syncSlide,\n    syncFragments: fragments.sync.bind(fragments),\n\n    // Navigation methods\n    slide,\n    left: navigateLeft,\n    right: navigateRight,\n    up: navigateUp,\n    down: navigateDown,\n    prev: navigatePrev,\n    next: navigateNext,\n\n    // Navigation aliases\n    navigateLeft,\n    navigateRight,\n    navigateUp,\n    navigateDown,\n    navigatePrev,\n    navigateNext,\n\n    // Fragment methods\n    navigateFragment: fragments.goto.bind(fragments),\n    prevFragment: fragments.prev.bind(fragments),\n    nextFragment: fragments.next.bind(fragments),\n\n    // Event binding\n    on,\n    off,\n\n    // Legacy event binding methods left in for backwards compatibility\n    addEventListener: on,\n    removeEventListener: off,\n\n    // Forces an update in slide layout\n    layout,\n\n    // Randomizes the order of slides\n    shuffle,\n\n    // Returns an object with the available routes as booleans (left/right/top/bottom)\n    availableRoutes,\n\n    // Returns an object with the available fragments as booleans (prev/next)\n    availableFragments: fragments.availableRoutes.bind(fragments),\n\n    // Toggles a help overlay with keyboard shortcuts\n    toggleHelp,\n\n    // Toggles the overview mode on/off\n    toggleOverview: overview.toggle.bind(overview),\n\n    // Toggles the scroll view on/off\n    toggleScrollView: scrollView.toggle.bind(scrollView),\n\n    // Toggles the \"black screen\" mode on/off\n    togglePause,\n\n    // Toggles the auto slide mode on/off\n    toggleAutoSlide,\n\n    // Toggles visibility of the jump-to-slide UI\n    toggleJumpToSlide,\n\n    // Slide navigation checks\n    isFirstSlide,\n    isLastSlide,\n    isLastVerticalSlide,\n    isVerticalSlide,\n    isVerticalStack,\n\n    // State checks\n    isPaused,\n    isAutoSliding,\n    isSpeakerNotes: notes.isSpeakerNotesWindow.bind(notes),\n    isOverview: overview.isActive.bind(overview),\n    isFocused: focus.isFocused.bind(focus),\n\n    isScrollView: scrollView.isActive.bind(scrollView),\n    isPrintView: printView.isActive.bind(printView),\n\n    // Checks if reveal.js has been loaded and is ready for use\n    isReady: () => ready,\n\n    // Slide preloading\n    loadSlide: slideContent.load.bind(slideContent),\n    unloadSlide: slideContent.unload.bind(slideContent),\n\n    // Media playback\n    startEmbeddedContent: () => slideContent.startEmbeddedContent(currentSlide),\n    stopEmbeddedContent: () =>\n      slideContent.stopEmbeddedContent(currentSlide, { unloadIframes: false }),\n\n    // Preview management\n    showPreview,\n    hidePreview: closeOverlay,\n\n    // Adds or removes all internal event listeners\n    addEventListeners,\n    removeEventListeners,\n    dispatchEvent,\n\n    // Facility for persisting and restoring the presentation state\n    getState,\n    setState,\n\n    // Presentation progress on range of 0-1\n    getProgress,\n\n    // Returns the indices of the current, or specified, slide\n    getIndices,\n\n    // Returns an Array of key:value maps of the attributes of each\n    // slide in the deck\n    getSlidesAttributes,\n\n    // Returns the number of slides that we have passed\n    getSlidePastCount,\n\n    // Returns the total number of slides\n    getTotalSlides,\n\n    // Returns the slide element at the specified index\n    getSlide,\n\n    // Returns the previous slide element, may be null\n    getPreviousSlide: () => previousSlide,\n\n    // Returns the current slide element\n    getCurrentSlide: () => currentSlide,\n\n    // Returns the slide background element at the specified index\n    getSlideBackground,\n\n    // Returns the speaker notes string for a slide, or null\n    getSlideNotes: notes.getSlideNotes.bind(notes),\n\n    // Returns an Array of all slides\n    getSlides,\n\n    // Returns an array with all horizontal/vertical slides in the deck\n    getHorizontalSlides,\n    getVerticalSlides,\n\n    // Checks if the presentation contains two or more horizontal\n    // and vertical slides\n    hasHorizontalSlides,\n    hasVerticalSlides,\n\n    // Checks if the deck has navigated on either axis at least once\n    hasNavigatedHorizontally: () => navigationHistory.hasNavigatedHorizontally,\n    hasNavigatedVertically: () => navigationHistory.hasNavigatedVertically,\n\n    shouldAutoAnimateBetween,\n\n    // Adds/removes a custom key binding\n    addKeyBinding: keyboard.addKeyBinding.bind(keyboard),\n    removeKeyBinding: keyboard.removeKeyBinding.bind(keyboard),\n\n    // Programmatically triggers a keyboard event\n    triggerKey: keyboard.triggerKey.bind(keyboard),\n\n    // Registers a new shortcut to include in the help overlay\n    registerKeyboardShortcut: keyboard.registerKeyboardShortcut.bind(keyboard),\n\n    getComputedSlideSize,\n    setCurrentScrollPage,\n\n    // Returns the current scale of the presentation content\n    getScale: () => scale,\n\n    // Returns the current configuration object\n    getConfig: () => config,\n\n    // Helper method, retrieves query string as a key:value map\n    getQueryHash: Util.getQueryHash,\n\n    // Returns the path to the current slide as represented in the URL\n    getSlidePath: location.getHash.bind(location),\n\n    // Returns reveal.js DOM elements\n    getRevealElement: () => revealElement,\n    getSlidesElement: () => dom.slides,\n    getViewportElement: () => dom.viewport,\n    getBackgroundsElement: () => backgrounds.element,\n\n    // API for registering and retrieving plugins\n    registerPlugin: plugins.registerPlugin.bind(plugins),\n    hasPlugin: plugins.hasPlugin.bind(plugins),\n    getPlugin: plugins.getPlugin.bind(plugins),\n    getPlugins: plugins.getRegisteredPlugins.bind(plugins),\n  }\n\n  // Our internal API which controllers have access to\n  Util.extend(Reveal, {\n    ...API,\n\n    // Methods for announcing content to screen readers\n    announceStatus,\n    getStatusText,\n\n    // Controllers\n    focus,\n    scroll: scrollView,\n    progress,\n    controls,\n    location,\n    overview,\n    fragments,\n    backgrounds,\n    slideContent,\n    slideNumber,\n\n    onUserInput,\n    closeOverlay,\n    updateSlidesVisibility,\n    layoutSlideContents,\n    transformSlides,\n    cueAutoSlide,\n    cancelAutoSlide,\n  })\n\n  return API\n}\n","import Deck, { VERSION } from \"./reveal.js\"\n\n/**\n * Expose the Reveal class to the window. To create a\n * new instance:\n * let deck = new Reveal( document.querySelector( '.reveal' ), {\n *   controls: false\n * } );\n * deck.initialize().then(() => {\n *   // reveal.js is ready\n * });\n */\nlet Reveal = Deck\n\n/**\n * The below is a thin shell that mimics the pre 4.0\n * reveal.js API and ensures backwards compatibility.\n * This API only allows for one Reveal instance per\n * page, whereas the new API above lets you run many\n * presentations on the same page.\n *\n * Reveal.initialize( { controls: false } ).then(() => {\n *   // reveal.js is ready\n * });\n */\n\nlet enqueuedAPICalls = []\n\nReveal.initialize = options => {\n  // Create our singleton reveal.js instance\n  Object.assign(Reveal, new Deck(document.querySelector(\".reveal\"), options))\n\n  // Invoke any enqueued API calls\n  enqueuedAPICalls.map(method => method(Reveal))\n\n  return Reveal.initialize()\n}\n\n/**\n * The pre 4.0 API let you add event listener before\n * initializing. We maintain the same behavior by\n * queuing up premature API calls and invoking all\n * of them when Reveal.initialize is called.\n */\n;[\n  \"configure\",\n  \"on\",\n  \"off\",\n  \"addEventListener\",\n  \"removeEventListener\",\n  \"registerPlugin\",\n].forEach(method => {\n  Reveal[method] = (...args) => {\n    enqueuedAPICalls.push(deck => deck[method].call(null, ...args))\n  }\n})\n\nReveal.isReady = () => false\n\nReveal.VERSION = VERSION\n\nexport default Reveal\n"],"names":["extend","a","b","i","queryAll","el","selector","Array","from","querySelectorAll","toggleClass","className","value","classList","add","remove","deserialize","match","parseFloat","transformElement","element","transform","style","matches","target","matchesMethod","matchesSelector","msMatchesSelector","call","closest","parentNode","createStyleSheet","tag","document","createElement","type","length","styleSheet","cssText","appendChild","createTextNode","head","getQueryHash","query","location","search","replace","split","shift","pop","unescape","fileExtensionToMimeMap","mp4","m4a","ogv","mpeg","webm","UA","navigator","userAgent","isMobile","test","platform","maxTouchPoints","isAndroid","e","t","slice","o","l","u","arguments","sync","cancelAnimationFrame","n","s","filter","dirty","active","requestAnimationFrame","c","forEach","styleComputed","m","y","v","p","d","f","S","availableWidth","clientWidth","currentWidth","scrollWidth","previousFontSize","currentFontSize","Math","min","max","minSize","maxSize","whiteSpace","multiLine","getComputedStyle","getPropertyValue","display","preStyleTestCompleted","fontSize","dispatchEvent","CustomEvent","detail","oldValue","newValue","scaleFactor","h","w","observeMutations","observer","disconnect","originalStyle","z","F","MutationObserver","observe","g","subtree","childList","characterData","W","E","clearTimeout","setTimeout","x","observeWindowDelay","M","Object","defineProperty","set","concat","observeWindow","fitAll","C","assign","map","newbie","push","fit","unfreeze","freeze","unsubscribe","window","SlideContent","constructor","Reveal","this","startEmbeddedIframe","bind","shouldPreload","isScrollView","preload","getConfig","preloadIframes","hasAttribute","load","slide","options","tagName","setAttribute","getAttribute","removeAttribute","media","sources","source","background","slideBackgroundElement","backgroundContent","slideBackgroundContentElement","backgroundIframe","backgroundImage","backgroundVideo","backgroundVideoLoop","backgroundVideoMuted","trim","encodeRFC3986URI","url","encodeURI","charCodeAt","toString","toUpperCase","decodeURI","join","isSpeakerNotes","video","muted","sourceElement","getMimeTypeFromFile","filename","excludeIframes","iframe","width","height","maxHeight","maxWidth","backgroundIframeElement","querySelector","layout","scopeElement","fitty","unload","getSlideBackground","formatEmbeddedContent","_appendParamToIframeSource","sourceAttribute","sourceURL","param","getSlidesElement","src","indexOf","startEmbeddedContent","autoplay","autoPlayMedia","play","readyState","startEmbeddedMedia","promise","catch","controls","addEventListener","removeEventListener","event","isAttachedToDOM","isVisible","currentTime","contentWindow","postMessage","stopEmbeddedContent","unloadIframes","pause","SLIDES_SELECTOR","HORIZONTAL_SLIDES_SELECTOR","VERTICAL_SLIDES_SELECTOR","POST_MESSAGE_METHOD_BLACKLIST","FRAGMENT_STYLE_REGEX","SlideNumber","render","getRevealElement","configure","config","oldConfig","slideNumberDisplay","slideNumber","isPrintView","showSlideNumber","update","innerHTML","getSlideNumber","getCurrentSlide","format","getHorizontalSlides","horizontalOffset","dataset","visibility","getSlidePastCount","getTotalSlides","indices","getIndices","sep","isVerticalSlide","getHash","formatNumber","delimiter","isNaN","destroy","JumpToSlide","onInput","onBlur","onKeyDown","jumpInput","placeholder","show","indicesOnShow","focus","hide","jumpTimeout","jump","slideNumberFormat","getSlides","parseInt","getIndicesFromHash","oneBasedIndex","jumpAfter","delay","regex","RegExp","find","innerText","cancel","confirm","keyCode","stopImmediatePropagation","colorToRgb","color","hex3","r","charAt","hex6","rgb","rgba","Backgrounds","create","slideh","backgroundStack","createBackground","slidev","parallaxBackgroundImage","backgroundSize","parallaxBackgroundSize","backgroundRepeat","parallaxBackgroundRepeat","backgroundPosition","parallaxBackgroundPosition","container","contentElement","data","backgroundColor","backgroundGradient","backgroundTransition","backgroundOpacity","dataPreload","opacity","contrastClass","getContrastClass","contrastColor","computedBackgroundStyle","bubbleSlideContrastClassToElement","classToBubble","contains","includeAll","currentSlide","currentBackground","horizontalPast","rtl","horizontalFuture","childNodes","backgroundh","backgroundv","indexv","previousBackground","slideContent","currentBackgroundContent","backgroundImageURL","previousBackgroundHash","currentBackgroundHash","updateParallax","backgroundWidth","backgroundHeight","horizontalSlides","verticalSlides","getVerticalSlides","horizontalOffsetMultiplier","slideWidth","offsetWidth","horizontalSlideCount","parallaxBackgroundHorizontal","verticalOffsetMultiplier","verticalOffset","slideHeight","offsetHeight","verticalSlideCount","parallaxBackgroundVertical","autoAnimateCounter","AutoAnimate","run","fromSlide","toSlide","reset","allSlides","toSlideIndex","fromSlideIndex","autoAnimateStyleSheet","animationOptions","getAutoAnimateOptions","autoAnimate","slideDirection","fromSlideIsHidden","css","getAutoAnimatableElements","elements","autoAnimateElements","to","autoAnimateUnmatched","defaultUnmatchedDuration","duration","defaultUnmatchedDelay","getUnmatchedAutoAnimateElements","unmatchedElement","unmatchedOptions","id","autoAnimateTarget","fontWeight","sheet","removeChild","elementOptions","easing","fromProps","getAutoAnimatableProperties","toProps","styles","translate","scale","presentationScale","getScale","delta","scaleX","scaleY","round","propertyName","toValue","fromValue","explicitValue","toStyleProperties","keys","inheritedOptions","autoAnimateEasing","autoAnimateDuration","autoAnimatedParent","autoAnimateDelay","direction","properties","bounds","measure","center","getBoundingClientRect","offsetLeft","offsetTop","computedStyles","autoAnimateStyles","property","pairs","autoAnimateMatcher","getAutoAnimatePairs","reserved","pair","index","textNodes","findAutoAnimateMatches","node","nodeName","textContent","getLocalBoundingBox","fromScope","toScope","serializer","fromMatches","toMatches","key","fromElement","primaryIndex","secondaryIndex","rootElement","children","reduce","result","containsAnimatedElements","ScrollView","activatedCallbacks","onScroll","activate","stateBeforeActivation","getState","slideHTMLBeforeActivation","horizontalBackgrounds","presentationBackground","viewportElement","viewportStyles","pageElements","pageContainer","previousSlide","createPageElement","isVertical","contentContainer","shouldAutoAnimateBetween","page","slideBackground","pageBackground","stickyContainer","insertBefore","horizontalSlide","isVerticalStack","verticalSlide","createProgressBar","stack","setState","callback","restoreScrollPosition","passive","deactivate","stateBeforeDeactivation","removeProgressBar","toggle","override","isActive","progressBar","progressBarInner","progressBarPlayhead","firstChild","handleDocumentMouseMove","progress","clientY","top","progressBarHeight","scrollTop","scrollHeight","handleDocumentMouseUp","draggingProgressBar","showProgressBar","preventDefault","syncPages","syncScrollPosition","slideSize","getComputedSlideSize","innerWidth","innerHeight","useCompactLayout","scrollLayout","viewportHeight","compactHeight","pageHeight","scrollTriggerHeight","setProperty","scrollSnapType","scrollSnap","slideTriggers","pages","pageElement","createPage","slideElement","stickyElement","backgroundElement","autoAnimatePages","activatePage","deactivatePage","createFragmentTriggersForPage","createAutoAnimateTriggersForPage","totalScrollTriggerCount","scrollTriggers","total","triggerStick","scrollSnapAlign","marginTop","removeProperty","scrollPadding","totalHeight","position","setTriggerRanges","scrollProgress","syncProgressBar","trigger","rangeStart","range","scrollTriggerSegmentSize","scrollTrigger","fragmentGroups","fragments","sort","autoAnimateElement","autoAnimatePage","indexh","viewportHeightFactor","playheadHeight","progressBarScrollableHeight","progressSegmentHeight","spacing","slideTrigger","progressBarSlide","scrollTriggerElements","triggerElement","scrollProgressMid","activePage","loaded","activateTrigger","deactivateTrigger","setProgressBarValue","getAllPages","hideProgressBarTimeout","prev","next","scrollToSlide","getScrollTriggerBySlide","storeScrollPosition","storeScrollPositionTimeout","sessionStorage","setItem","origin","pathname","scrollPosition","getItem","scrollOrigin","setCurrentScrollPage","backgrounds","sibling","getSlideByIndices","flatMap","getViewportElement","PrintView","slides","injectPageNumbers","pageWidth","floor","margin","Promise","documentElement","body","layoutSlideContents","slideScrollHeights","left","contentHeight","numberOfPages","ceil","pdfMaxPagesPerSlide","pdfPageHeightOffset","showNotes","notes","getSlideNotes","notesSpacing","notesLayout","notesElement","bottom","numberElement","pdfSeparateFragments","previousFragmentStep","fragment","clonedPage","cloneNode","fragmentNumber","view","Fragments","disable","enable","availableRoutes","hiddenFragments","grouped","ordered","unordered","sorted","group","sortAll","changedFragments","shown","hidden","maxIndex","currentFragment","wasVisible","announceStatus","getStatusText","bubbles","goto","offset","lastVisibleFragment","fragmentInURL","writeURL","Overview","onSlideClicked","overview","cancelAutoSlide","getBackgroundsElement","overviewSlideWidth","overviewSlideHeight","updateSlidesVisibility","hslide","vslide","hbackground","vbackground","vmin","transformSlides","cueAutoSlide","Keyboard","shortcuts","bindings","onDocumentKeyDown","navigationMode","unbind","addKeyBinding","binding","description","removeKeyBinding","triggerKey","registerKeyboardShortcut","getShortcuts","getBindings","keyboardCondition","isFocused","autoSlideWasPaused","isAutoSliding","onUserInput","activeElementIsCE","activeElement","isContentEditable","activeElementIsInput","activeElementIsNotes","unusedModifier","shiftKey","altKey","ctrlKey","metaKey","resumeKeyCodes","keyboard","isPaused","useLinearMode","hasHorizontalSlides","hasVerticalSlides","triggered","apply","action","skipFragments","right","undefined","up","Number","MAX_VALUE","down","includes","togglePause","requestMethod","requestFullscreen","webkitRequestFullscreen","webkitRequestFullScreen","mozRequestFullScreen","msRequestFullscreen","enterFullscreen","embedded","autoSlideStoppable","toggleAutoSlide","jumpToSlide","toggleJumpToSlide","toggleHelp","closeOverlay","Location","MAX_REPLACE_STATE_FREQUENCY","writeURLTimeout","replaceStateTimestamp","onWindowHashChange","hash","name","bits","hashIndexBase","hashOneBasedIndex","getElementById","decodeURIComponent","error","readURL","currentIndices","newIndices","history","debouncedReplaceState","replaceState","Date","now","replaceStateTimeout","encodeURIComponent","Controls","onNavigateLeftClicked","onNavigateRightClicked","onNavigateUpClicked","onNavigateDownClicked","onNavigatePrevClicked","onNavigateNextClicked","revealElement","controlsLeft","controlsRight","controlsUp","controlsDown","controlsPrev","controlsNext","controlsRightArrow","controlsLeftArrow","controlsDownArrow","controlsLayout","controlsBackArrows","pointerEvents","eventName","routes","fragmentsRoutes","controlsTutorial","hasNavigatedVertically","hasNavigatedHorizontally","Progress","onProgressClicked","bar","getProgress","getMaxWidth","slidesTotal","slideIndex","clientX","targetIndices","Pointer","lastMouseWheelStep","cursorHidden","cursorInactiveTimeout","onDocumentCursorActive","onDocumentMouseScroll","mouseWheel","hideInactiveCursor","showCursor","cursor","hideCursor","hideCursorTime","wheelDelta","loadScript","script","async","defer","onload","onreadystatechange","onerror","err","Error","lastChild","Plugins","reveal","state","registeredPlugins","asyncDependencies","plugins","dependencies","registerPlugin","resolve","scripts","scriptsToLoad","condition","scriptLoadedCallback","initPlugins","then","console","warn","pluginValues","values","pluginsToInitialize","loadAsync","initNextPlugin","afterPlugInitialized","plugin","init","hasPlugin","getPlugin","getRegisteredPlugins","Touch","touchStartX","touchStartY","touchStartCount","touchCaptured","onPointerDown","onPointerMove","onPointerUp","onTouchStart","onTouchMove","onTouchEnd","msPointerEnabled","isSwipePrevented","touches","currentX","currentY","includeFragments","deltaX","deltaY","abs","pointerType","MSPOINTER_TYPE_TOUCH","STATE_FOCUS","STATE_BLUR","Focus","onRevealPointerDown","onDocumentPointerDown","blur","Notes","updateVisibility","hasNotes","isSpeakerNotesWindow","notesElements","Playback","progressCheck","diameter","diameter2","thickness","playing","progressOffset","canvas","context","getContext","setPlaying","wasPlaying","animate","progressBefore","radius","iconSize","endAngle","PI","startAngle","save","clearRect","beginPath","arc","fillStyle","fill","lineWidth","strokeStyle","stroke","fillRect","moveTo","lineTo","restore","on","listener","off","defaultConfig","minScale","maxScale","respondToHashChanges","disableLayout","touch","loop","shuffle","help","showHiddenSlides","autoSlide","autoSlideMethod","defaultTiming","previewLinks","postMessageEvents","focusBodyOnPageVisibilityChange","transition","transitionSpeed","scrollActivationWidth","POSITIVE_INFINITY","viewDistance","mobileViewDistance","sortFragmentsOnSync","VERSION","Deck","autoSlidePlayer","ready","navigationHistory","slidesTransform","dom","autoSlideTimeout","autoSlideStartTime","autoSlidePaused","scrollView","printView","pointer","start","Util","wrapper","parent","childElementCount","Device","pauseOverlay","createSingletonNode","tagname","classname","nodes","testNode","statusElement","overflow","clip","createStatusElement","setupDOM","onPostMessage","setInterval","scrollLeft","onFullscreenChange","activatePrintView","activateScrollView","removeEventListeners","viewport","activateInitialView","text","nodeType","isAriaHidden","isDisplayHidden","child","isReady","numberOfSlides","resume","enablePreviewLinks","disablePreviewLinks","onAutoSlidePlayerClick","addEventListeners","onWindowResize","onSlidesClicked","onTransitionEnd","onPageVisibilityChange","useCapture","transforms","createEvent","initEvent","dispatchPostMessage","dispatchSlideChanged","self","message","namespace","JSON","stringify","onPreviewLinkClicked","showPreview","overlay","showHelp","html","viewportWidth","size","oldScale","presentationWidth","presentationHeight","zoom","len","checkResponsiveScrollView","remainingHeight","getRemainingHeight","newHeight","oldHeight","nw","naturalWidth","videoWidth","nh","naturalHeight","videoHeight","es","setPreviousVerticalIndex","getPreviousVerticalIndex","attributeName","isLastVerticalSlide","nextElementSibling","isFirstSlide","isLastSlide","wasPaused","defaultPrevented","stateBefore","indexhBefore","indexvBefore","updateSlides","slideChanged","currentHorizontalSlide","currentVerticalSlides","autoAnimateTransition","stateLoop","j","splice","beforeSlide","random","slidesLength","printMode","loopedForwards","loopedBackwards","reverse","showFragmentsIn","hideFragmentsIn","wasPresent","slideState","distanceX","distanceY","horizontalSlidesLength","verticalSlidesLength","oy","fragmentRoutes","pastCount","mainLoop","getSlide","indexf","paused","fragmentAutoSlide","parentAutoSlide","slideAutoSlide","playbackRate","navigateNext","pauseAutoSlide","resumeAutoSlide","navigateLeft","navigateRight","navigateUp","navigateDown","navigatePrev","parse","method","args","anchor","fullscreenElement","webkitFullscreenElement","currentTarget","API","initialize","initOptions","setViewport","syncSlide","syncFragments","navigateFragment","prevFragment","nextFragment","availableFragments","toggleOverview","toggleScrollView","isOverview","loadSlide","unloadSlide","hidePreview","pausedFlag","overviewFlag","totalCount","allFragments","fragmentWeight","getSlidesAttributes","attributes","attribute","getPreviousSlide","getSlidePath","getPlugins","scroll","enqueuedAPICalls","deck"],"mappings":"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","x_google_ignoreList":[2]}